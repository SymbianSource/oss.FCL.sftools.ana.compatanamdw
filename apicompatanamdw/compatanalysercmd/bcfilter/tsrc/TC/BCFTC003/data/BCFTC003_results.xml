<?xml version="1.0" encoding="ASCII" standalone="no" ?>
<?xml-stylesheet type="text/xsl" href="BBCResults.xsl"?>
<bbcresults>
	<header>
		  <baselineversion>SDK 3rd Edition</baselineversion>
		  <currentversion>MyProduct</currentversion>
		  <timestamp>
			  <day>14</day>
			  <month>9</month>
			  <year>2007</year>
			  <hour>13</hour>
			  <minute>37</minute>
			  <second>21</second>
		</timestamp>
		  <ocversion>3.0.3</ocversion>
		  <formatversion>1.0</formatversion>
		  <cmdlineparms>
			  <parm>
				    <pname>toolchain</pname>
				    <pvalue>GCCE</pvalue>
			</parm>
			  <parm>
				    <pname>baselinedir</pname>
				    <pvalue>..\tsrc\TC\OCTC006\baseplatform\lib\</pvalue>
			</parm>
			  <parm>
				    <pname>currentdir</pname>
				    <pvalue>..\tsrc\TC\OCTC006\currentplatform\lib\</pvalue>
			</parm>
			  <parm>
				    <pname>baselineversion</pname>
				    <pvalue>SDK 3rd Edition</pvalue>
			</parm>
			  <parm>
				    <pname>currentversion</pname>
				    <pvalue>MyProduct</pvalue>
			</parm>
			  <parm>
				    <pname>reportfile</pname>
				    <pvalue>..\tsrc\TC\OCTC006\results\results.xml</pvalue>
			</parm>
			  <parm>
				    <pname>tools</pname>
				    <pvalue>C:\Program Files\CSL Arm Toolchain\bin\</pvalue>
			</parm>
			  <parm>
				    <pname>temp</pname>
				    <pvalue>c:\temp\</pvalue>
			</parm>
			  <parm>
				    <pname>cfilt</pname>
				    <pvalue/>
			</parm>
			  <parm>
				    <pname>set</pname>
				    <pvalue>..\tsrc\TC\OCTC006\scripts\config.txt</pvalue>
			</parm>
		</cmdlineparms>
		  <knownissuesversion>2008-04-30</knownissuesversion>
	  <os>
      <version>3.0</version>
      <buildweek>2007wk07</buildweek>
    </os>
    <os>
      <version>3.1</version>
      <buildweek>2008wk07</buildweek>
    </os>
    <os>
      <version>3.2</version>
      <buildweek>2008wk12</buildweek>
    </os>
    <os>
      <version>5.0</version>
      <buildweek>2008wk12</buildweek>
    </os>
  </header>
	<issuelist>
		  <library>
			  <name>agentdialog</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RGenConAgentDialogServer::AccessPointConnection(unsigned long&amp;, int, TRequestStatus&amp;)</newfuncname>
				    <newfuncpos>32</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RGenConAgentDialogServer::CancelAccessPointConnection()</newfuncname>
				    <newfuncpos>33</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RGenConAgentDialogServer::AccessPointConnection(unsigned long&amp;, unsigned long, unsigned long&amp;, unsigned long, TRequestStatus&amp;)</newfuncname>
				    <newfuncpos>34</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>aknicon</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>AknIconUtils::ExcludeFromCache(CFbsBitmap*)</newfuncname>
				    <newfuncpos>40</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>AknIconConfig::CompressIfPreferred(CFbsBitmap*, TUid)</newfuncname>
				    <newfuncpos>41</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>AknIconConfig::CompressIfPreferred(CFbsBitmap*, CFbsBitmap*, TUid)</newfuncname>
				    <newfuncpos>42</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>AknIconConfig::PreferredDisplayMode(AknIconConfig::TPreferredDisplayMode&amp;, AknIconConfig::TImageType, TUid)</newfuncname>
				    <newfuncpos>43</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>AknIconConfig::EnableAknIconSrvCache(int)</newfuncname>
				    <newfuncpos>44</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>AknIconUtils::DisableCompression(CFbsBitmap*)</newfuncname>
				    <newfuncpos>45</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>aknnotify</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknNotifyBase::SetSecondaryDisplayData(CAknSDData*)</newfuncname>
				    <newfuncpos>128</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknGlobalMsgQuery::SetSecondaryDisplayData(CAknSDData*)</newfuncname>
				    <newfuncpos>129</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknGlobalListQuery::SetSecondaryDisplayData(CAknSDData*)</newfuncname>
				    <newfuncpos>130</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknGlobalProgressDialog::SetSecondaryDisplayData(CAknSDData*)</newfuncname>
				    <newfuncpos>131</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknGlobalConfirmationQuery::SetSecondaryDisplayData(CAknSDData*)</newfuncname>
				    <newfuncpos>132</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknSDData::InternalizeL(RReadStream&amp;)</newfuncname>
				    <newfuncpos>133</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknSDData::ExternalizeL(RWriteStream&amp;) const</newfuncname>
				    <newfuncpos>134</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknSDData::InsertGlobalListQueryItemIdsL(RArray&lt;int&gt;&amp;)</newfuncname>
				    <newfuncpos>135</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>aknskins</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknsImageItemData::SetDrawRect(TRect const&amp;)</newfuncname>
				    <newfuncpos>176</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknsImageItemData::SetParentIID(TAknsItemID const&amp;)</newfuncname>
				    <newfuncpos>177</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknsImageItemData::DrawRect()</newfuncname>
				    <newfuncpos>178</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknsImageItemData::ParentIID()</newfuncname>
				    <newfuncpos>179</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknsEffectAnim::Render(CBitmapContext&amp;, TRect const&amp;) const</newfuncname>
				    <newfuncpos>180</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknsEffectAnim::NeedsInputLayer() const</newfuncname>
				    <newfuncpos>181</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>aknskinsrv</name>
			  <issue>
				    <typeid>6</typeid>
				    <funcname>CAknsSrvChunkLookup::LookupAndCreateScalableItemL(TAknsItemID const&amp;, TAknsLayoutType, TSize const&amp;, CFbsBitmap*&amp;, CFbsBitmap*&amp;)</funcname>
				    <newfuncname>CAknsSrvChunkLookup::LookupAndCreateScalableItemL(TAknsItemID const&amp;, TAknsLayoutType, TSize const&amp;, CFbsBitmap*&amp;, CFbsBitmap*&amp;, int&amp;)</newfuncname>
				    <funcpos>70</funcpos>
      </issue>
		  </library>
		  <library>
			  <name>aknswallpaperutils</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>AknsWallpaperUtils::SetSlidesetWallpaper(CDesC16Array&amp;, CCoeEnv*, int, int)</newfuncname>
				    <newfuncpos>2</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>apfile</name>
			  <issue>
				    <typeid>6</typeid>
				    <funcname>CApaAppRegFinder::NextL(TApaAppEntry&amp;, CUpdatedAppsList*)</funcname>
				    <newfuncname>CApaAppRegFinder::NextL(TApaAppEntry&amp;, CUpdatedAppsList*, RPointerArray&lt;TDesC16&gt; const&amp;)</newfuncname>
				    <funcpos>60</funcpos>
      </issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAppSidChecker::SetRescanCallBackL(TCallBack const&amp;)</newfuncname>
				    <newfuncpos>83</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAppSidChecker::reserved1()</newfuncname>
				    <newfuncpos>84</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAppSidChecker::reserved2()</newfuncname>
				    <newfuncpos>85</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAppSidChecker::reserved3()</newfuncname>
				    <newfuncpos>86</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAppSidChecker::~CAppSidChecker()</newfuncname>
				    <newfuncpos>87</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAppSidChecker::~CAppSidChecker()</newfuncname>
				    <newfuncpos>88</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAppSidChecker::~CAppSidChecker()</newfuncname>
				    <newfuncpos>89</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CAppSidChecker</newfuncname>
				    <newfuncpos>90</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CAppSidChecker</newfuncname>
				    <newfuncpos>91</newfuncpos>
			</issue>
		  </library>
		  <library>
			  <name>apgrfx</name>
			  <issue>
				    <typeid>5</typeid>
				    <newfuncname>CApaAppList::ShareProtectedFileServer()</newfuncname>
				    <newfuncpos>411</newfuncpos>
			</issue>
			  <issue>
				    <typeid>3</typeid>
				    <funcname>CApaAppData::NewL(TApaAppEntry const&amp;, RFs&amp;, TDesC16 const*)</funcname>
				    <funcpos>411</funcpos>
				    <newfuncpos>407</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CApaAppList::Self()</newfuncname>
				    <newfuncpos>412</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RApaLsSession::SetAppShortCaption(TDesC16 const&amp;, TLanguage, TUid)</newfuncname>
				    <newfuncpos>417</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CApaAppData::SetShortCaptionL(TDesC16 const&amp;)</newfuncname>
				    <newfuncpos>418</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CApaAppList::CompareStrings(TDesC16 const&amp;, TDesC16 const&amp;)</newfuncname>
				    <newfuncpos>419</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CApaAppList::AddForcedRegistrationL(HBufC16*)</newfuncname>
				    <newfuncpos>420</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RApaLsSession::ForceRegistration(RPointerArray&lt;TDesC16&gt; const&amp;)</newfuncname>
				    <newfuncpos>421</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CApaAppList::ResetForcedRegistrations()</newfuncname>
				    <newfuncpos>422</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>apmime</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CApaScanningDataRecognizer::LoadRecognizersL()</newfuncname>
				    <newfuncpos>116</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CApaScanningDataRecognizer::UnloadRecognizers()</newfuncname>
				    <newfuncpos>117</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CApaScanningDataRecognizer::NewL(RFs&amp;, int)</newfuncname>
				    <newfuncpos>118</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>apsettingshandlerui</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CApSettingsUi::ConstructL(int, int, int, TVpnFilterType)</newfuncname>
				    <newfuncpos>26</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CApSettingsUi::RunSettingsL(unsigned long, unsigned long&amp;)</newfuncname>
				    <newfuncpos>27</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CApSettingsUi::NewLC(int, TSelectionListType, TSelectionMenuType, int, int, int, int, TVpnFilterType)</newfuncname>
				    <newfuncpos>28</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CApSettingsUi::~CApSettingsUi()</newfuncname>
				    <newfuncpos>29</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CApSettingsUi::~CApSettingsUi()</newfuncname>
				    <newfuncpos>30</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CApSettingsUi::~CApSettingsUi()</newfuncname>
				    <newfuncpos>31</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CApSettingsUi</newfuncname>
				    <newfuncpos>32</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CApSettingsUi</newfuncname>
				    <newfuncpos>33</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>asn1</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TASN1DecBMPString::DecodeDERL(TASN1DecGeneric const&amp;)</newfuncname>
				    <newfuncpos>185</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TASN1DecBMPString::DecodeDERL(TDesC8 const&amp;, int&amp;)</newfuncname>
				    <newfuncpos>186</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TASN1DecBMPString::TASN1DecBMPString()</newfuncname>
				    <newfuncpos>187</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TASN1DecBMPString::TASN1DecBMPString()</newfuncname>
				    <newfuncpos>188</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>audioequalizereffect</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAudioEqualizer::NewL(CMidiClientUtility&amp;)</newfuncname>
				    <newfuncpos>29</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>audioequalizerutility</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAudioEqualizerUtility::NewL(CMidiClientUtility&amp;)</newfuncname>
				    <newfuncpos>27</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CTempAudioEqualizer::EnableL()</newfuncname>
				    <newfuncpos>28</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CTempAudioEqualizer::DisableL()</newfuncname>
				    <newfuncpos>29</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CTempAudioEqualizer::IsEnforced() const</newfuncname>
				    <newfuncpos>30</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CTempAudioEqualizer::IsEnabled() const</newfuncname>
				    <newfuncpos>31</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CTempAudioEqualizer::EnforceL(int)</newfuncname>
				    <newfuncpos>32</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CTempAudioEqualizer::HaveUpdateRights() const</newfuncname>
				    <newfuncpos>33</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>bafl</name>
			  <issue>
				    <typeid>4</typeid>
				    <funcname>typeinfo for CResourceArchiveImpl</funcname>
				    <funcpos>464</funcpos>
      </issue>
			  <issue>
				    <typeid>4</typeid>
				    <funcname>vtable for CResourceArchiveImpl</funcname>
				    <funcpos>465</funcpos>
      </issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RResourceArchive::OpenL(RFs&amp;, TDesC16 const&amp;, TDesC16 const&amp;)</newfuncname>
				    <newfuncpos>468</newfuncpos>
			</issue>
		  </library>
		  <library>
			  <name>bassboosteffect</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CBassBoost::NewL(CMidiClientUtility&amp;, int)</newfuncname>
				    <newfuncpos>19</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>bitgdi</name>
			  <issue>
				    <typeid>6</typeid>
				    <funcname>CSoftwareGraphicsAccelerator::GenericCapabilities()</funcname>
				    <newfuncname>CSoftwareGraphicsAcceleratorBC::GenericCapabilities()</newfuncname>
				    <funcpos>70</funcpos>
			</issue>
			  <issue>
				    <typeid>6</typeid>
				    <funcname>CSoftwareGraphicsAccelerator::NewL(CFbsBitmap*)</funcname>
				    <newfuncname>CSoftwareGraphicsAcceleratorBC::NewL(CFbsBitmap*)</newfuncname>
				    <funcpos>71</funcpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CFbsScreenDevice::Bits() const</newfuncname>
				    <newfuncpos>269</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CFbsScreenDevice::Stride() const</newfuncname>
				    <newfuncpos>270</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CFbsScreenDevice::ScreenNo() const</newfuncname>
				    <newfuncpos>271</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>bitmaptransforms</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CBitmapRotator::CustomCommand(TUid, void*)</newfuncname>
				    <newfuncpos>26</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>bluetooth</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CBluetoothSynchronousLink::SetNotifier(MBluetoothSynchronousLinkNotifier&amp;)</newfuncname>
				    <newfuncpos>298</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RBTPhysicalLinkAdapter::IsOpen() const</newfuncname>
				    <newfuncpos>299</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TBTBasebandEventNotification::SymbianErrorCode() const</newfuncname>
				    <newfuncpos>300</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RBTPhysicalLinkAdapter::Authenticate()</newfuncname>
				    <newfuncpos>301</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CBluetoothSocket::AutomaticSniffMode() const</newfuncname>
				    <newfuncpos>302</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CBluetoothSocket::SetAutomaticSniffMode(int, int)</newfuncname>
				    <newfuncpos>303</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CBluetoothSocket::SetAutomaticSniffMode(int)</newfuncname>
				    <newfuncpos>304</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RBTPhysicalLinkAdapter::ActivateActiveRequester()</newfuncname>
				    <newfuncpos>305</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>browserengine</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CBrCtl::GetBitmapData(TDesC16 const&amp;, TBrCtlDefs::TBrCtlBitmapInfo)</newfuncname>
				    <newfuncpos>44</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CBrCtl::AddCommandObserverL(MBrCtlCommandObserver*)</newfuncname>
				    <newfuncpos>45</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CBrCtl::RemoveCommandObserver(MBrCtlCommandObserver*)</newfuncname>
				    <newfuncpos>46</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>caf</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>ContentAccess::CAgentManager::CopyFile(RFile&amp;, TDesC16 const&amp;)</newfuncname>
				    <newfuncpos>168</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>ContentAccess::CManager::CopyFile(RFile&amp;, TDesC16 const&amp;) const</newfuncname>
				    <newfuncpos>169</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>ContentAccess::CAgentData::Read(int, TDes8&amp;, int, TRequestStatus&amp;)</newfuncname>
				    <newfuncpos>170</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>ContentAccess::CData::Read(int, TDes8&amp;, int, TRequestStatus&amp;) const</newfuncname>
				    <newfuncpos>171</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for ContentAccess::CAgentData</newfuncname>
				    <newfuncpos>172</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for ContentAccess::CAgentData</newfuncname>
				    <newfuncpos>173</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>calinterimapi</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CCalAlarm::SetAlarmAction(CCalContent*)</newfuncname>
				    <newfuncpos>203</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CCalAlarm::AlarmAction() const</newfuncname>
				    <newfuncpos>204</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CCalContent::SetContentL(TDesC8*, TDesC8*, CCalContent::TDisposition)</newfuncname>
				    <newfuncpos>205</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CCalContent::NewL()</newfuncname>
				    <newfuncpos>206</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CCalContent::~CCalContent()</newfuncname>
				    <newfuncpos>207</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CCalContent::~CCalContent()</newfuncname>
				    <newfuncpos>208</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CCalContent::~CCalContent()</newfuncname>
				    <newfuncpos>209</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CCalContent::Disposition() const</newfuncname>
				    <newfuncpos>210</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CCalContent::Content() const</newfuncname>
				    <newfuncpos>211</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CCalContent::MimeType() const</newfuncname>
				    <newfuncpos>212</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CCalEntry::CopyFromL(CCalEntry const&amp;, CCalEntry::TCopyType)</newfuncname>
				    <newfuncpos>237</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TCalTime::SetTimeLocalFloatingL(TTime const&amp;)</newfuncname>
				    <newfuncpos>238</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TCalTime::TimeMode() const</newfuncname>
				    <newfuncpos>239</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>centralrepository</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CRepository::SetGetParameters(TIpcArgs const&amp;)</newfuncname>
				    <newfuncpos>85</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CRepository::GetMeta(unsigned long, unsigned long&amp;)</newfuncname>
				    <newfuncpos>86</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>clkdatetimeview</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CClkDateTimeViewInher::DoActivateL(TVwsViewId const&amp;, TUid, TDesC8 const&amp;)</newfuncname>
				    <newfuncpos>10</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CClkDateTimeViewInher::DoDeactivate()</newfuncname>
				    <newfuncpos>11</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CClkDateTimeViewInher::NewLC(TUid, int)</newfuncname>
				    <newfuncpos>12</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CClkDateTimeViewInher</newfuncname>
				    <newfuncpos>13</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CClkDateTimeViewExtension</newfuncname>
				    <newfuncpos>14</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CClkDateTimeViewInher</newfuncname>
				    <newfuncpos>15</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CClkDateTimeViewExtension</newfuncname>
				    <newfuncpos>16</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>cntmodel</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CContentType::IsEqual(CContentType const&amp;) const</newfuncname>
				    <newfuncpos>685</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>cntview</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CContactSubView::NewL(CContactViewBase&amp;, CContactDatabase const&amp;, MContactViewObserver&amp;, TDesC16 const&amp;)</newfuncname>
				    <newfuncpos>34</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CContactSubView::NewL(CContactViewBase&amp;, CContactDatabase const&amp;, MContactViewObserver&amp;, TDesC16 const&amp;, TDesC16 const&amp;)</newfuncname>
				    <newfuncpos>35</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CContactFindView::NewL(CContactViewBase&amp;, CContactDatabase const&amp;, MContactViewObserver&amp;, MDesC16Array*)</newfuncname>
				    <newfuncpos>36</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CContactFindView::NewL(CContactViewBase&amp;, CContactDatabase const&amp;, MContactViewObserver&amp;, MDesC16Array*, CContactViewBase::TSearchType)</newfuncname>
				    <newfuncpos>37</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CContactGroupView::NewL(CContactViewBase&amp;, CContactDatabase const&amp;, MContactViewObserver&amp;, TDesC16 const&amp;, CContactGroupView::TGroupType)</newfuncname>
				    <newfuncpos>38</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CContactGroupView::NewL(CContactViewBase&amp;, CContactDatabase const&amp;, MContactViewObserver&amp;, long, CContactGroupView::TGroupType)</newfuncname>
				    <newfuncpos>39</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CContactFilteredView::NewL(CContactViewBase&amp;, CContactDatabase const&amp;, MContactViewObserver&amp;, int)</newfuncname>
				    <newfuncpos>40</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>commondialogs</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>AknCommonDialogs::RunSaveDlgLD(TDes16&amp;, TDesC16 const&amp;, int, int, TDesC16 const&amp;, MAknFileFilter*, MAknFileSelectionObserver*)</newfuncname>
				    <newfuncpos>109</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>AknCommonDialogs::RunSelectDlgLD(TDes16&amp;, TDesC16 const&amp;, int, int, TDesC16 const&amp;, MAknFileFilter*, MAknFileSelectionObserver*)</newfuncname>
				    <newfuncpos>110</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>AknCommonDialogs::RunFolderSelectDlgLD(TDes16&amp;, TDesC16 const&amp;, int, int, TDesC16 const&amp;, MAknFileFilter*, MAknFileSelectionObserver*)</newfuncname>
				    <newfuncpos>111</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>commonengine</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CFindItemEngine::DoNewSearchL(TDesC16 const&amp;, CFindItemEngine::TFindItemSearchCase, int)</newfuncname>
				    <newfuncpos>82</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CFindItemEngine::NewL(TDesC16 const&amp;, CFindItemEngine::TFindItemSearchCase, int)</newfuncname>
				    <newfuncpos>83</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>commonui</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CDocumentHandler::CanHandleProgressivelyL(TDataType const&amp;, TUid&amp;)</newfuncname>
				    <newfuncpos>73</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CRichTextEditorContainer</newfuncname>
				    <newfuncpos>74</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CRichTextEditorContainer</newfuncname>
				    <newfuncpos>75</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>commsdat</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CommsDat::CCDUmtsR99QoSAndOnTableRecord</newfuncname>
				    <newfuncpos>261</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CommsDat::CCDUmtsR99QoSAndOnTableRecord</newfuncname>
				    <newfuncpos>262</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>connmon</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TConnMonId::FromPtrC(TPtrC16 const&amp;)</newfuncname>
				    <newfuncpos>46</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TConnMonId::TConnMonId(unsigned int)</newfuncname>
				    <newfuncpos>47</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TConnMonId::TConnMonId(unsigned int)</newfuncname>
				    <newfuncpos>48</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>ConnMonIdsArrayPckg::ConnMonIdsArrayPckg(unsigned int)</newfuncname>
				    <newfuncpos>49</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>ConnMonIdsArrayPckg::ConnMonIdsArrayPckg(unsigned int)</newfuncname>
				    <newfuncpos>50</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>ConnMonIdsArrayPckg::~ConnMonIdsArrayPckg()</newfuncname>
				    <newfuncpos>51</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>ConnMonIdsArrayPckg::~ConnMonIdsArrayPckg()</newfuncname>
				    <newfuncpos>52</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>ConnMonIdsArrayPckg::~ConnMonIdsArrayPckg()</newfuncname>
				    <newfuncpos>53</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TConnMonWLANNetwork::LessBySignal(TConnMonWLANNetwork const&amp;, TConnMonWLANNetwork const&amp;)</newfuncname>
				    <newfuncpos>54</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TConnMonWLANNetwork::FromPtrC(TPtrC16 const&amp;)</newfuncname>
				    <newfuncpos>55</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TConnMonWLANNetwork::TConnMonWLANNetwork(TBuf&lt;32&gt; const&amp;, unsigned int, unsigned int, unsigned int, RArray&lt;int&gt; const&amp;)</newfuncname>
				    <newfuncpos>56</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TConnMonWLANNetwork::TConnMonWLANNetwork(TBuf&lt;32&gt; const&amp;, unsigned int, unsigned int, unsigned int, RArray&lt;int&gt; const&amp;)</newfuncname>
				    <newfuncpos>57</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TConnMonWLANNetwork::~TConnMonWLANNetwork()</newfuncname>
				    <newfuncpos>58</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TConnMonWLANNetwork::~TConnMonWLANNetwork()</newfuncname>
				    <newfuncpos>59</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TConnMonWLANNetwork::~TConnMonWLANNetwork()</newfuncname>
				    <newfuncpos>60</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>ConnMonWLANNetworksArrayPckg::ConnMonWLANNetworksArrayPckg(unsigned int)</newfuncname>
				    <newfuncpos>61</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>ConnMonWLANNetworksArrayPckg::ConnMonWLANNetworksArrayPckg(unsigned int)</newfuncname>
				    <newfuncpos>62</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>ConnMonWLANNetworksArrayPckg::~ConnMonWLANNetworksArrayPckg()</newfuncname>
				    <newfuncpos>63</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>ConnMonWLANNetworksArrayPckg::~ConnMonWLANNetworksArrayPckg()</newfuncname>
				    <newfuncpos>64</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>ConnMonWLANNetworksArrayPckg::~ConnMonWLANNetworksArrayPckg()</newfuncname>
				    <newfuncpos>65</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TConnMonId::Id() const</newfuncname>
				    <newfuncpos>66</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TConnMonId::ToBuf() const</newfuncname>
				    <newfuncpos>67</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TConnMonSNAP::Valid() const</newfuncname>
				    <newfuncpos>68</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RConnectionMonitor::GetPckgAttribute(unsigned int, unsigned int, unsigned int, TDes16&amp;, TRequestStatus&amp;) const</newfuncname>
				    <newfuncpos>69</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>ConnMonIdsArrayPckg::Buf() const</newfuncname>
				    <newfuncpos>70</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>ConnMonIdsArrayPckg::UnpackToL(RArray&lt;TConnMonId&gt;&amp;) const</newfuncname>
				    <newfuncpos>71</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TConnMonWLANNetwork::ToBuf() const</newfuncname>
				    <newfuncpos>72</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>ConnMonWLANNetworksArrayPckg::Buf() const</newfuncname>
				    <newfuncpos>73</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>ConnMonWLANNetworksArrayPckg::UnpackToL(RArray&lt;TConnMonWLANNetwork&gt;&amp;) const</newfuncname>
				    <newfuncpos>74</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CConnMonSNAPsAvailabilityChange::SNAPsAvailabile() const</newfuncname>
				    <newfuncpos>75</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CConnMonSNAPsAvailabilityChange::SNAPAvailability() const</newfuncname>
				    <newfuncpos>76</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for TConnMonId</newfuncname>
				    <newfuncpos>77</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for TConnMonSNAP</newfuncname>
				    <newfuncpos>78</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for TConnMonRealIap</newfuncname>
				    <newfuncpos>79</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for TConnMonBearerCSD</newfuncname>
				    <newfuncpos>80</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for TConnMonBearerLAN</newfuncname>
				    <newfuncpos>81</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for TConnMonBearerGPRS</newfuncname>
				    <newfuncpos>82</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for TConnMonBearerWLAN</newfuncname>
				    <newfuncpos>83</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for TConnMonVirtualIap</newfuncname>
				    <newfuncpos>84</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for ConnMonIdsArrayPckg</newfuncname>
				    <newfuncpos>85</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for TConnMonWLANNetwork</newfuncname>
				    <newfuncpos>86</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CCDIAPMetadataRecord</newfuncname>
				    <newfuncpos>87</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CCDSNAPMetadataRecord</newfuncname>
				    <newfuncpos>88</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CCDMIPServiceExtRecord</newfuncname>
				    <newfuncpos>89</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CConnMonCommsDataNotifier</newfuncname>
				    <newfuncpos>90</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CConnMonAvailabilityManager</newfuncname>
				    <newfuncpos>91</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for ConnMonWLANNetworksArrayPckg</newfuncname>
				    <newfuncpos>92</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CConnMonIapsAvailabilityManager</newfuncname>
				    <newfuncpos>93</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CConnMonSNAPsAvailabilityManager</newfuncname>
				    <newfuncpos>94</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CCDDataMobilitySelectionPolicyRecord</newfuncname>
				    <newfuncpos>95</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CCDGlobalBearerTypePriorizationRecord</newfuncname>
				    <newfuncpos>96</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for TConnMonId</newfuncname>
				    <newfuncpos>97</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for TConnMonSNAP</newfuncname>
				    <newfuncpos>98</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for TConnMonRealIap</newfuncname>
				    <newfuncpos>99</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for TConnMonBearerCSD</newfuncname>
				    <newfuncpos>100</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for TConnMonBearerLAN</newfuncname>
				    <newfuncpos>101</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for TConnMonBearerGPRS</newfuncname>
				    <newfuncpos>102</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for TConnMonBearerWLAN</newfuncname>
				    <newfuncpos>103</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for TConnMonVirtualIap</newfuncname>
				    <newfuncpos>104</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for ConnMonIdsArrayPckg</newfuncname>
				    <newfuncpos>105</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for TConnMonWLANNetwork</newfuncname>
				    <newfuncpos>106</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CCDIAPMetadataRecord</newfuncname>
				    <newfuncpos>107</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CCDSNAPMetadataRecord</newfuncname>
				    <newfuncpos>108</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CCDMIPServiceExtRecord</newfuncname>
				    <newfuncpos>109</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CConnMonCommsDataNotifier</newfuncname>
				    <newfuncpos>110</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CConnMonAvailabilityManager</newfuncname>
				    <newfuncpos>111</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for ConnMonWLANNetworksArrayPckg</newfuncname>
				    <newfuncpos>112</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CConnMonIapsAvailabilityManager</newfuncname>
				    <newfuncpos>113</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CConnMonSNAPsAvailabilityManager</newfuncname>
				    <newfuncpos>114</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CCDDataMobilitySelectionPolicyRecord</newfuncname>
				    <newfuncpos>115</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CCDGlobalBearerTypePriorizationRecord</newfuncname>
				    <newfuncpos>116</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>distanceattenuationeffect</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CDistanceAttenuation::NewL(CMidiClientUtility&amp;)</newfuncname>
				    <newfuncpos>23</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>drmhelper</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CDRMHelper::SetPreviewMediaType(TDRMHelperPreviewMediaType)</newfuncname>
				    <newfuncpos>94</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CDRMHelper::HandleErrorOrPreviewL(int, RFile&amp;, HBufC8*&amp;)</newfuncname>
				    <newfuncpos>95</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CDRMHelper::HandleErrorOrPreviewL(int, TDesC16 const&amp;, HBufC8*&amp;)</newfuncname>
				    <newfuncpos>96</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>efile</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TFsPluginRequest::IsPostOperation() const</newfuncname>
				    <newfuncpos>189</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>efsrv</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RFs::SetNotifyChange(int)</newfuncname>
				    <newfuncpos>333</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RFs::AddCompositeMount(TDesC16 const&amp;, int, int, int) const</newfuncname>
				    <newfuncpos>334</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RFile::Flush(TRequestStatus&amp;)</newfuncname>
				    <newfuncpos>335</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>eikcoctl</name>
			  <issue>
				    <typeid>4</typeid>
				    <funcname>CAknContextMenuPane::OfferKeyEventL(TKeyEvent const&amp;, TEventCode)</funcname>
				    <funcpos>1791</funcpos>
      </issue>
			  <issue>
				    <typeid>4</typeid>
				    <funcname>CAknContextMenuPane::MopSupplyObject(TTypeUid)</funcname>
				    <funcpos>1792</funcpos>
      </issue>
			  <issue>
				    <typeid>4</typeid>
				    <funcname>CAknContextMenuPane::ExtensionInterface(TUid)</funcname>
				    <funcpos>1793</funcpos>
      </issue>
			  <issue>
				    <typeid>4</typeid>
				    <funcname>CAknContextMenuPane::HandlePointerEventL(TPointerEvent const&amp;)</funcname>
				    <funcpos>1794</funcpos>
      </issue>
			  <issue>
				    <typeid>4</typeid>
				    <funcname>CAknContextMenuPane::HandleResourceChange(int)</funcname>
				    <funcpos>1795</funcpos>
      </issue>
			  <issue>
				    <typeid>4</typeid>
				    <funcname>CAknContextMenuPane::NewL(MEikMenuObserver*, MEikMenuObserver*, int)</funcname>
				    <funcpos>1796</funcpos>
			    <status>OK</status>
        <comment>Class CAknContextMenuPane is not part of the public SDK.</comment>
      </issue>
			  <issue>
				    <typeid>4</typeid>
				    <funcname>CAknContextMenuPane::Close()</funcname>
				    <funcpos>1797</funcpos>
			    <status>OK</status>
        <comment>Class CAknContextMenuPane is not part of the public SDK.</comment>
      </issue>
			  <issue>
				    <typeid>4</typeid>
				    <funcname>CAknContextMenuPane::NewLC(MEikMenuObserver*, MEikMenuObserver*, int)</funcname>
				    <funcpos>1798</funcpos>
			    <status>OK</status>
        <comment>Class CAknContextMenuPane is not part of the public SDK.</comment>
      </issue>
			  <issue>
				    <typeid>4</typeid>
				    <funcname>CAknContextMenuPane::ShowL(int, TPoint const&amp;, int)</funcname>
				    <funcpos>1799</funcpos>
			    <status>OK</status>
        <comment>Class CAknContextMenuPane is not part of the public SDK.</comment>
      </issue>
			  <issue>
				    <typeid>4</typeid>
				    <funcname>CAknContextMenuPane::SetHasCba(int)</funcname>
				    <funcpos>1800</funcpos>
			    <status>OK</status>
        <comment>Class CAknContextMenuPane is not part of the public SDK.</comment>
      </issue>
			  <issue>
				    <typeid>4</typeid>
				    <funcname>CAknContextMenuPane::~CAknContextMenuPane()</funcname>
				    <funcpos>1801</funcpos>
			    <status>OK</status>
        <comment>Class CAknContextMenuPane is not part of the public SDK.</comment>
      </issue>
			  <issue>
				    <typeid>4</typeid>
				    <funcname>CAknContextMenuPane::~CAknContextMenuPane()</funcname>
				    <funcpos>1802</funcpos>
			    <status>OK</status>
        <comment>Class CAknContextMenuPane is not part of the public SDK.</comment>
      </issue>
			  <issue>
				    <typeid>4</typeid>
				    <funcname>CAknContextMenuPane::~CAknContextMenuPane()</funcname>
				    <funcpos>1803</funcpos>
			    <status>OK</status>
        <comment>Class CAknContextMenuPane is not part of the public SDK.</comment>
      </issue>
			  <issue>
				    <typeid>4</typeid>
				    <funcname>CAknContextMenuPane::GetColorUseListL(CArrayFix&lt;TCoeColorUse&gt;&amp;) const</funcname>
				    <funcpos>1839</funcpos>
			    <status>OK</status>
        <comment>Class CAknContextMenuPane is not part of the public SDK.</comment>
      </issue>
			  <issue>
				    <typeid>4</typeid>
				    <funcname>CAknContextMenuPane::HasCba() const</funcname>
				    <funcpos>1840</funcpos>
			    <status>OK</status>
        <comment>Class CAknContextMenuPane is not part of the public SDK.</comment>
      </issue>
			  <issue>
				    <typeid>4</typeid>
				    <funcname>CAknContextMenuPane::IsShown() const</funcname>
				    <funcpos>1841</funcpos>
			    <status>OK</status>
        <comment>Class CAknContextMenuPane is not part of the public SDK.</comment>
      </issue>
			  <issue>
				    <typeid>4</typeid>
				    <funcname>typeinfo for CAknContextMenuPane</funcname>
				    <funcpos>1846</funcpos>
			    <status>OK</status>
        <comment>Class CAknContextMenuPane is not part of the public SDK.</comment>
      </issue>
			  <issue>
				    <typeid>4</typeid>
				    <funcname>vtable for CAknContextMenuPane</funcname>
				    <funcpos>1853</funcpos>
			    <status>OK</status>
        <comment>Class CAknContextMenuPane is not part of the public SDK.</comment>
      </issue>
			  <issue>
				    <typeid>4</typeid>
				    <funcname>non-virtual thunk to CAknContextMenuPane::MopSupplyObject(TTypeUid)</funcname>
				    <funcpos>1857</funcpos>
			    <status>OK</status>
        <comment>Class CAknContextMenuPane is not part of the public SDK.</comment>
      </issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEikListBox::CreateScrollBarFrameL(int, int)</newfuncname>
				    <newfuncpos>1882</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEikScrollBarFrame::DrawBackground(int, int)</newfuncname>
				    <newfuncpos>1883</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEikScrollBarFrame::DrawBackgroundState(int&amp;, int&amp;)</newfuncname>
				    <newfuncpos>1884</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEikEdwin::SetSuppressNotifyDraw(int)</newfuncname>
				    <newfuncpos>1885</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknStylusPopUpMenu::RemoveMenuItem(int)</newfuncname>
				    <newfuncpos>1886</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknStylusPopUpMenu::HandleControlEventL(CCoeControl*, MCoeControlObserver::TCoeEvent)</newfuncname>
				    <newfuncpos>1887</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknStylusPopUpMenu::ConstructFromResourceL(TResourceReader&amp;)</newfuncname>
				    <newfuncpos>1888</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknStylusPopUpMenu::NewL(MEikMenuObserver*, TPoint const&amp;)</newfuncname>
				    <newfuncpos>1889</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknStylusPopUpMenu::NewL(MEikMenuObserver*, TPoint const&amp;, CAknPreviewPopUpController*)</newfuncname>
				    <newfuncpos>1890</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknStylusPopUpMenu::NewLC(MEikMenuObserver*, TPoint const&amp;, CAknPreviewPopUpController*)</newfuncname>
				    <newfuncpos>1891</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknStylusPopUpMenu::ShowMenu()</newfuncname>
				    <newfuncpos>1892</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>non-virtual thunk to CAknStylusPopUpMenu::HandleControlEventL(CCoeControl*, MCoeControlObserver::TCoeEvent)</newfuncname>
				    <newfuncpos>1893</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknButton::SetKeyRepeatInterval(int, int)</newfuncname>
				    <newfuncpos>1894</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknToolbar::HandlePointerEventL(TPointerEvent const&amp;)</newfuncname>
				    <newfuncpos>1895</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknTouchPane::PositionChanged()</newfuncname>
				    <newfuncpos>1896</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknTouchPane::RefreshL()</newfuncname>
				    <newfuncpos>1897</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknButton::SetTextUnderlineStyle(TFontUnderline)</newfuncname>
				    <newfuncpos>1898</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEikMenuPane::CascadeMenuPane()</newfuncname>
				    <newfuncpos>1899</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEikMenuPane::MenuItemCommandId(int) const</newfuncname>
				    <newfuncpos>1900</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknStylusPopUpMenu::SetPosition(TPoint const&amp;)</newfuncname>
				    <newfuncpos>1901</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknStylusPopUpMenu::AddMenuItemL(TDesC16 const&amp;, int)</newfuncname>
				    <newfuncpos>1902</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknTouchPane::SetFepPenSupportInterface(MAknFepPenSupportInterface*)</newfuncname>
				    <newfuncpos>1903</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknTouchPane::SetInputMethodIconActivated(int)</newfuncname>
				    <newfuncpos>1904</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEikEdwin::SetAmountToFormatL(int, int)</newfuncname>
				    <newfuncpos>1905</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEikEdwin::SetSuppressFormatting(int)</newfuncname>
				    <newfuncpos>1906</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknLocalScreenClearer::HandleResourceChange(int)</newfuncname>
				    <newfuncpos>1907</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CAknLocalScreenClearer</newfuncname>
				    <newfuncpos>1908</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CAknLocalScreenClearer</newfuncname>
				    <newfuncpos>1909</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEikMenuBar::TryDisplayContextMenuBarL()</newfuncname>
				    <newfuncpos>1910</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEikMenuBar::SetContextMenuTitleResourceId(int)</newfuncname>
				    <newfuncpos>1911</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEikEdwin::SetSuppressBackgroundDrawing(int)</newfuncname>
				    <newfuncpos>1912</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEikEdwin::IsBackgroundDrawingSuppressed() const</newfuncname>
				    <newfuncpos>1913</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEikListBox::CreateScrollBarFrameL(int, int, int)</newfuncname>
				    <newfuncpos>1914</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEikMenuPane::ConstructMenuSctRowL(TDes16&amp;, int)</newfuncname>
				    <newfuncpos>1915</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEikMenuBar::SetMenuType(CEikMenuBar::TMenuType)</newfuncname>
				    <newfuncpos>1916</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknToolbar::SetOrientation(TAknOrientation)</newfuncname>
				    <newfuncpos>1917</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknDoubleSpanScrollBar::SetScrollPopupInfoTextL(TDesC16 const&amp;)</newfuncname>
				    <newfuncpos>1918</newfuncpos>
			</issue>
		  </library>
		  <library>
			  <name>eikcore</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEikErrorResolver::ResolveError(TDes16&amp;, int, TUid)</newfuncname>
				    <newfuncpos>587</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEikErrorResolver::NewL(CEikonEnv&amp;)</newfuncname>
				    <newfuncpos>588</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEikDebugPreferences::InternalizeL(RReadStream&amp;)</newfuncname>
				    <newfuncpos>589</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEikDebugPreferences::ExternalizeL(RWriteStream&amp;) const</newfuncname>
				    <newfuncpos>590</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>eikctl</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEikColumnListBox::EnableStretching(int)</newfuncname>
				    <newfuncpos>604</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CColumnListBoxData::ResetSLSubCellArray()</newfuncname>
				    <newfuncpos>605</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CColumnListBoxData::SetStretchableTextSubCellL(int, TAknTextComponentLayout const&amp;, TAknTextComponentLayout const&amp;)</newfuncname>
				    <newfuncpos>606</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CColumnListBoxData::SetStretchableGraphicSubCellL(int, TAknWindowComponentLayout const&amp;, TAknWindowComponentLayout const&amp;)</newfuncname>
				    <newfuncpos>607</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CColumnListBoxData::SetStretchableConditionalSubCellL(int, TAknTextComponentLayout const&amp;, TAknTextComponentLayout const&amp;, int, int)</newfuncname>
				    <newfuncpos>608</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CColumnListBoxData::HasHighlightAnim() const</newfuncname>
				    <newfuncpos>609</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CColumnListBoxData::DrawHighlightAnim(CBitmapContext&amp;, TRect const&amp;) const</newfuncname>
				    <newfuncpos>610</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CColumnListBoxData::StretchingEnabled() const</newfuncname>
				    <newfuncpos>611</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknLocationEditor::DisplayableLocationL(TPosition const&amp;, CAknLocationEditor::TLocationContext)</newfuncname>
				    <newfuncpos>612</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknLocationEditor::ConstructFromResourceL(TResourceReader&amp;)</newfuncname>
				    <newfuncpos>613</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknLocationEditor::Set(TPosition const&amp;)</newfuncname>
				    <newfuncpos>614</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknLocationEditor::NewL(TPosition&amp;, CAknLocationEditor::TLocationContext)</newfuncname>
				    <newfuncpos>615</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknLocationEditor::CAknLocationEditor()</newfuncname>
				    <newfuncpos>616</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknLocationEditor::CAknLocationEditor()</newfuncname>
				    <newfuncpos>617</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknLocationEditor::~CAknLocationEditor()</newfuncname>
				    <newfuncpos>618</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknLocationEditor::~CAknLocationEditor()</newfuncname>
				    <newfuncpos>619</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknLocationEditor::~CAknLocationEditor()</newfuncname>
				    <newfuncpos>620</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknLocationEditor::Get(TPosition&amp;) const</newfuncname>
				    <newfuncpos>621</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CAknLocationEditor</newfuncname>
				    <newfuncpos>622</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CAknLocationEditor</newfuncname>
				    <newfuncpos>623</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CColumnListBoxData::SetTextSubCellL(int, TAknTextLineLayout const&amp;)</newfuncname>
				    <newfuncpos>624</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CColumnListBoxData::SetGraphicSubCellL(int, TAknWindowLineLayout const&amp;)</newfuncname>
				    <newfuncpos>625</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CColumnListBoxData::SetConditionalSubCellL(int, TAknTextLineLayout const&amp;, int)</newfuncname>
				    <newfuncpos>626</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CColumnListBoxData::SubCellsMightIntersect(int)</newfuncname>
				    <newfuncpos>627</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknLocationEditor::PrepareForFocusLossL()</newfuncname>
				    <newfuncpos>628</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEikMfne::SetSuppressBackgroundDrawing(int)</newfuncname>
				    <newfuncpos>629</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknExtendedInputCapabilities::SetCapabilities(unsigned int)</newfuncname>
				    <newfuncpos>630</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknExtendedInputCapabilities::NewL()</newfuncname>
				    <newfuncpos>631</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknExtendedInputCapabilities::NewLC()</newfuncname>
				    <newfuncpos>632</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknExtendedInputCapabilities::~CAknExtendedInputCapabilities()</newfuncname>
				    <newfuncpos>633</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknExtendedInputCapabilities::~CAknExtendedInputCapabilities()</newfuncname>
				    <newfuncpos>634</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknExtendedInputCapabilities::~CAknExtendedInputCapabilities()</newfuncname>
				    <newfuncpos>635</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknExtendedInputCapabilities::Capabilities() const</newfuncname>
				    <newfuncpos>636</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknExtendedInputCapabilities::SupportsCapabilities(unsigned int) const</newfuncname>
				    <newfuncpos>637</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEikMfne::MopSupplyObject(TTypeUid)</newfuncname>
				    <newfuncpos>638</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>non-virtual thunk to CEikMfne::MopSupplyObject(TTypeUid)</newfuncname>
				    <newfuncpos>639</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknExtendedInputCapabilities::SetMIDPConstraints(unsigned int)</newfuncname>
				    <newfuncpos>640</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknExtendedInputCapabilities::MIDPConstrainst() const</newfuncname>
				    <newfuncpos>641</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEikMfneNumber::SetDigitType(TDigitType, CFont const&amp;)</newfuncname>
				    <newfuncpos>642</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEikMfneNumber::RefreshDigitType(CFont const&amp;)</newfuncname>
				    <newfuncpos>643</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEikMfneNumber::DigitType() const</newfuncname>
				    <newfuncpos>644</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>eikdlg</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CAknMediatorFacade::PostUpdatedDataL(int)</newfuncname>
				    <newfuncpos>288</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEikDialog::SlideDialog()</newfuncname>
				    <newfuncpos>289</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>eiksrv</name>
			  <issue>
				    <typeid>4</typeid>
				    <funcname>CEikAlmControlSupervisor::ConstructL(MEikServAlarmFactory*)</funcname>
				    <funcpos>30</funcpos>
			    <status>OK</status>
        <comment>According to Symbian, this BC break has no impact on third parties. So it was approved.</comment>
      </issue>
			  <issue>
				    <typeid>4</typeid>
				    <funcname>CEikAlmControlSupervisor::CEikAlmControlSupervisor()</funcname>
				    <funcpos>35</funcpos>
			    <status>OK</status>
        <comment>According to Symbian, this BC break has no impact on third parties. So it was approved.</comment>
      </issue>
			  <issue>
				    <typeid>4</typeid>
				    <funcname>CEikAlmControlSupervisor::CEikAlmControlSupervisor()</funcname>
				    <funcpos>36</funcpos>
			    <status>OK</status>
        <comment>According to Symbian, this BC break has no impact on third parties. So it was approved.</comment>
      </issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEikServAlarmAlertServer::ClearAllAlarmsL()</newfuncname>
				    <newfuncpos>176</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEikServAlarmAlertServer::SetQuietPeriodL(TTime)</newfuncname>
				    <newfuncpos>177</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEikServAlarmAlertServer::NewL(MEikServAlarmFactory*, int)</newfuncname>
				    <newfuncpos>178</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEikAlmControlSupervisor::AlarmData() const</newfuncname>
				    <newfuncpos>179</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEikAlmControlSupervisor::CmdAcknowledgeAllAlarms()</newfuncname>
				    <newfuncpos>180</newfuncpos>
			</issue>
		  </library>
		  <library>
			  <name>eiksrvc</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>REikAppUiSession::GetDebugPreferencesL() const</newfuncname>
				    <newfuncpos>28</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>environmentalreverbeffect</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEnvironmentalReverb::NewL(CMidiClientUtility&amp;)</newfuncname>
				    <newfuncpos>49</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>environmentalreverbutility</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEnvironmentalReverbUtility::NewL(CMidiClientUtility&amp;)</newfuncname>
				    <newfuncpos>26</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CTempEnvironmentalReverb::EnableL()</newfuncname>
				    <newfuncpos>27</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CTempEnvironmentalReverb::DisableL()</newfuncname>
				    <newfuncpos>28</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CTempEnvironmentalReverb::IsEnforced() const</newfuncname>
				    <newfuncpos>29</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CTempEnvironmentalReverb::IsEnabled() const</newfuncname>
				    <newfuncpos>30</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CTempEnvironmentalReverb::EnforceL(int)</newfuncname>
				    <newfuncpos>31</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CTempEnvironmentalReverb::HaveUpdateRights() const</newfuncname>
				    <newfuncpos>32</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>eposlandmarks</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>PosLandmarkSerialization::PackL(CPosLandmark const&amp;)</newfuncname>
				    <newfuncpos>103</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>PosLandmarkSerialization::UnpackL(TDesC8 const&amp;)</newfuncname>
				    <newfuncpos>104</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>PosLmCategorySerialization::PackL(CPosLandmarkCategory const&amp;)</newfuncname>
				    <newfuncpos>105</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>PosLmCategorySerialization::UnpackL(TDesC8 const&amp;)</newfuncname>
				    <newfuncpos>106</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>esock</name>
			  <issue>
				    <typeid>6</typeid>
				    <funcname>TCommIdList::Append(int)</funcname>
				    <newfuncname>TConnIdList::Append(int)</newfuncname>
				    <funcpos>304</funcpos>
			    <status>OK</status>
        <comment>Class TCommIdList renamed to TConnIdList, which is OK.</comment>
      </issue>
			  <issue>
				    <typeid>6</typeid>
				    <funcname>TCommIdList::MaxCount()</funcname>
				    <newfuncname>TConnIdList::MaxCount()</newfuncname>
				    <funcpos>305</funcpos>
			    <status>OK</status>
        <comment>Class TCommIdList renamed to TConnIdList, which is OK.</comment>
      </issue>
			  <issue>
				    <typeid>6</typeid>
				    <funcname>TCommIdList::TCommIdList()</funcname>
				    <newfuncname>TConnIdList::TConnIdList()</newfuncname>
				    <funcpos>306</funcpos>
			    <status>OK</status>
        <comment>Class TCommIdList renamed to TConnIdList, which is OK.</comment>
      </issue>
			  <issue>
				    <typeid>6</typeid>
				    <funcname>TCommIdList::TCommIdList()</funcname>
				    <newfuncname>TConnIdList::TConnIdList()</newfuncname>
				    <funcpos>307</funcpos>
			    <status>OK</status>
        <comment>Class TCommIdList renamed to TConnIdList, which is OK.</comment>
      </issue>
			  <issue>
				    <typeid>6</typeid>
				    <funcname>TCommIdList::operator[](int)</funcname>
				    <newfuncname>TConnIdList::operator[](int)</newfuncname>
				    <funcpos>308</funcpos>
			    <status>OK</status>
        <comment>Class TCommIdList renamed to TConnIdList, which is OK.</comment>
      </issue>
			  <issue>
				    <typeid>6</typeid>
				    <funcname>TCommSnapPref::Snap() const</funcname>
				    <newfuncname>TConnSnapPref::Snap() const</newfuncname>
				    <funcpos>309</funcpos>
			    <status>OK</status>
        <comment>Class TCommSnapPref renamed to TConnSnapPref, which is OK.</comment>
      </issue>
			  <issue>
				    <typeid>6</typeid>
				    <funcname>TCommSnapPref::SetSnap(unsigned long)</funcname>
				    <newfuncname>TConnSnapPref::SetSnap(unsigned long)</newfuncname>
				    <funcpos>310</funcpos>
			    <status>OK</status>
        <comment>Class TCommSnapPref renamed to TConnSnapPref, which is OK.</comment>
      </issue>
			  <issue>
				    <typeid>6</typeid>
				    <funcname>TCommSnapPref::TCommSnapPref(unsigned long)</funcname>
				    <newfuncname>TConnSnapPref::TConnSnapPref(unsigned long)</newfuncname>
				    <funcpos>311</funcpos>
			    <status>OK</status>
        <comment>Class TCommSnapPref renamed to TConnSnapPref, which is OK.</comment>
      </issue>
			  <issue>
				    <typeid>6</typeid>
				    <funcname>TCommSnapPref::TCommSnapPref()</funcname>
				    <newfuncname>TConnSnapPref::TConnSnapPref()</newfuncname>
				    <funcpos>312</funcpos>
			    <status>OK</status>
        <comment>Class TCommSnapPref renamed to TConnSnapPref, which is OK.</comment>
      </issue>
			  <issue>
				    <typeid>6</typeid>
				    <funcname>TCommSnapPref::TCommSnapPref(unsigned long)</funcname>
				    <newfuncname>TConnSnapPref::TConnSnapPref(unsigned long)</newfuncname>
				    <funcpos>313</funcpos>
			    <status>OK</status>
        <comment>Class TCommSnapPref renamed to TConnSnapPref, which is OK.</comment>
      </issue>
			  <issue>
				    <typeid>6</typeid>
				    <funcname>TCommSnapPref::TCommSnapPref()</funcname>
				    <newfuncname>TConnSnapPref::TConnSnapPref()</newfuncname>
				    <funcpos>314</funcpos>
			    <status>OK</status>
        <comment>Class TCommSnapPref renamed to TConnSnapPref, which is OK.</comment>
      </issue>
			  <issue>
				    <typeid>6</typeid>
				    <funcname>TCommIdList::Get(int) const</funcname>
				    <newfuncname>TConnIdList::Get(int) const</newfuncname>
				    <funcpos>315</funcpos>
			    <status>OK</status>
        <comment>Class TCommIdList renamed to TConnIdList, which is OK.</comment>
      </issue>
			  <issue>
				    <typeid>6</typeid>
				    <funcname>TCommIdList::Count() const</funcname>
				    <newfuncname>TConnIdList::Count() const</newfuncname>
				    <funcpos>316</funcpos>
			    <status>OK</status>
        <comment>Class TCommIdList renamed to TConnIdList, which is OK.</comment>
      </issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RCommsMobilityApiExt::NewCarrierAccepted()</newfuncname>
				    <newfuncpos>317</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RCommsMobilityApiExt::NewCarrierRejected()</newfuncname>
				    <newfuncpos>318</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RCommsMobilityApiExt::IgnorePreferredCarrier()</newfuncname>
				    <newfuncpos>319</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RCommsMobilityApiExt::MigrateToPreferredCarrier()</newfuncname>
				    <newfuncpos>320</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RCommsMobilityApiExt::CancelMobilityNotification()</newfuncname>
				    <newfuncpos>321</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RCommsMobilityApiExt::RegisterForMobilityNotification(TDes8&amp;, TRequestStatus&amp;)</newfuncname>
				    <newfuncpos>322</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RCommsMobilityApiExt::Close()</newfuncname>
				    <newfuncpos>323</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RCommsMobilityApiExt::RCommsMobilityApiExt()</newfuncname>
				    <newfuncpos>324</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RCommsMobilityApiExt::RCommsMobilityApiExt()</newfuncname>
				    <newfuncpos>325</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CCommsApiExtensionMsg::NewL(TDesC8 const&amp;)</newfuncname>
				    <newfuncpos>326</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CCommsApiExtensionMsg::NewL(Meta::STypeId const&amp;)</newfuncname>
				    <newfuncpos>327</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RCommsApiExtensionBase::SendMessage(CCommsApiExtReqMsg&amp;)</newfuncname>
				    <newfuncpos>328</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RCommsApiExtensionBase::SendRequest(CCommsApiExtReqMsg&amp;, TDes8&amp;, TRequestStatus&amp;)</newfuncname>
				    <newfuncpos>329</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RCommsApiExtensionBase::Open(RCommsSubSession&amp;, TSupportedCommsApiExt)</newfuncname>
				    <newfuncpos>330</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RCommsApiExtensionBase::Close()</newfuncname>
				    <newfuncpos>331</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RCommsApiExtensionBase::RCommsApiExtensionBase()</newfuncname>
				    <newfuncpos>332</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RCommsApiExtensionBase::RCommsApiExtensionBase()</newfuncname>
				    <newfuncpos>333</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CActiveCommsMobilityApiExt::NewCarrierAccepted()</newfuncname>
				    <newfuncpos>334</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CActiveCommsMobilityApiExt::NewCarrierRejected()</newfuncname>
				    <newfuncpos>335</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CActiveCommsMobilityApiExt::IgnorePreferredCarrier()</newfuncname>
				    <newfuncpos>336</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CActiveCommsMobilityApiExt::MigrateToPreferredCarrier()</newfuncname>
				    <newfuncpos>337</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CActiveCommsMobilityApiExt::NewL(RCommsSubSession&amp;, MMobilityProtocolResp&amp;)</newfuncname>
				    <newfuncpos>338</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CActiveCommsMobilityApiExt::~CActiveCommsMobilityApiExt()</newfuncname>
				    <newfuncpos>339</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CActiveCommsMobilityApiExt::~CActiveCommsMobilityApiExt()</newfuncname>
				    <newfuncpos>340</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CActiveCommsMobilityApiExt::~CActiveCommsMobilityApiExt()</newfuncname>
				    <newfuncpos>341</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CActiveCommsMobilityApiExt</newfuncname>
				    <newfuncpos>342</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CActiveCommsMobilityApiExt</newfuncname>
				    <newfuncpos>343</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RConnection::WaitForIncoming(RSubConnection&amp;)</newfuncname>
				    <newfuncpos>352</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RConnection::WaitForIncoming(RSubConnection&amp;, TRequestStatus&amp;)</newfuncname>
				    <newfuncpos>353</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RConnection::CancelWaitForIncoming()</newfuncname>
				    <newfuncpos>354</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RSubConnection::Open(RSocketServ&amp;, TSubConnOpen::TSubConnType, RConnection&amp;)</newfuncname>
				    <newfuncpos>355</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RSubConnection::Stop()</newfuncname>
				    <newfuncpos>356</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RSubConnection::Start(TRequestStatus&amp;)</newfuncname>
				    <newfuncpos>357</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RSubConnection::Start()</newfuncname>
				    <newfuncpos>358</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSubConParameterFamily::FindExtensionSet(Meta::STypeId, CSubConParameterFamily::TParameterSetType)</newfuncname>
				    <newfuncpos>359</newfuncpos>
			</issue>
		  </library>
		  <library>
			  <name>esocksvr</name>
			  <issue>
				    <typeid>6</typeid>
				    <funcname>typeinfo for TDummy</funcname>
				    <newfuncname>typeinfo for CCommsMobilitySrvResp</newfuncname>
				    <funcpos>247</funcpos>
			    <status>OK</status>
        <comment>Class TDummy is not part of the public SDK.</comment>
      </issue>
			  <issue>
				    <typeid>6</typeid>
				    <funcname>vtable for TDummy</funcname>
				    <newfuncname>vtable for CCommsMobilitySrvResp</newfuncname>
				    <funcpos>283</funcpos>
			    <status>OK</status>
        <comment>Class TDummy is not part of the public SDK.</comment>
      </issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSubConnectionProviderBase::EventNotificationRequest(unsigned int)</newfuncname>
				    <newfuncpos>329</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSubConnectionProviderBase::CancelEventNotificationRequest(unsigned int)</newfuncname>
				    <newfuncpos>330</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CCommsProviderBase::FetchInterfaceControlL(TSupportedCommsApiExt)</newfuncname>
				    <newfuncpos>331</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CCommsProviderBase::DoFetchInterfaceControlL(TSupportedCommsApiExt)</newfuncname>
				    <newfuncpos>332</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CCommsMobilitySrvResp::NewCarrierActive(CCommsMobilitySrvResp*&amp;, TAccessPointInfo)</newfuncname>
				    <newfuncpos>333</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CCommsMobilitySrvResp::PreferredCarrierAvailable(CCommsMobilitySrvResp*&amp;, TAccessPointInfo, TAccessPointInfo, int)</newfuncname>
				    <newfuncpos>334</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CCommsMobilitySrvResp::NewL(Elements::CResponseMsg*)</newfuncname>
				    <newfuncpos>335</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CCommsProviderBase</newfuncname>
				    <newfuncpos>336</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CCommsProviderBase</newfuncname>
				    <newfuncpos>337</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CCommsApiExtResponder</newfuncname>
				    <newfuncpos>338</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CConnectionProviderBase::WaitForIncomingL(MSubConnectionControlClient&amp;)</newfuncname>
				    <newfuncpos>339</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CConnectionProviderBase::DoWaitForIncomingL(MSubConnectionControlClient&amp;)</newfuncname>
				    <newfuncpos>340</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CConnectionProviderBase::FetchInterfaceInstanceL(Meta::STypeId const&amp;)</newfuncname>
				    <newfuncpos>341</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CConnectionProviderBase::DoFetchInterfaceInstanceL(Meta::STypeId const&amp;)</newfuncname>
				    <newfuncpos>342</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CConnectionProviderBase::CancelWaitForIncoming()</newfuncname>
				    <newfuncpos>343</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CConnectionProviderBase::DoCancelWaitForIncoming()</newfuncname>
				    <newfuncpos>344</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>MIPCClientInfo::ClientUidType(TUidType&amp;, unsigned int const&amp;) const</newfuncname>
				    <newfuncpos>345</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>MIPCClientInfo::ClientSID(TSecureId&amp;, unsigned int const&amp;) const</newfuncname>
				    <newfuncpos>346</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CCommsApiExtIpcResponder</newfuncname>
				    <newfuncpos>347</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CCommsApiExtResponder</newfuncname>
				    <newfuncpos>348</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CCommsApiExtIpcResponder</newfuncname>
				    <newfuncpos>349</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for XDefaultSubConnectionQuery</newfuncname>
				    <newfuncpos>350</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for XDefaultSubConnectionQuery</newfuncname>
				    <newfuncpos>351</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>XDefaultSubConnectionQuery::Match(TFactoryObjectInfo&amp;)</newfuncname>
				    <newfuncpos>352</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CConnDataTransfer::~CConnDataTransfer()</newfuncname>
				    <newfuncpos>353</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CConnDataTransfer::~CConnDataTransfer()</newfuncname>
				    <newfuncpos>354</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CConnDataTransfer::~CConnDataTransfer()</newfuncname>
				    <newfuncpos>355</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CConnDataTransfer</newfuncname>
				    <newfuncpos>356</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CConnDataTransfer</newfuncname>
				    <newfuncpos>357</newfuncpos>
			</issue>
		  </library>
		  <library>
			  <name>estlib</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>ImpurePtr2</newfuncname>
				    <newfuncpos>394</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>etel3rdparty</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CTelephony::TNetworkInfoV2::TNetworkInfoV2()</newfuncname>
				    <newfuncpos>152</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CTelephony::TNetworkInfoV2::TNetworkInfoV2()</newfuncname>
				    <newfuncpos>153</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CTelephony::TNetworkNameV2::TNetworkNameV2()</newfuncname>
				    <newfuncpos>154</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CTelephony::TNetworkNameV2::TNetworkNameV2()</newfuncname>
				    <newfuncpos>155</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CNotifyIncomingCallAct</newfuncname>
				    <newfuncpos>156</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CNotifyIncomingCallAct</newfuncname>
				    <newfuncpos>157</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>etext</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEditableText::GetLengthOfInlineText() const</newfuncname>
				    <newfuncpos>392</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEditableText::GetPositionOfInlineTextInDocument() const</newfuncname>
				    <newfuncpos>393</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>euser</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>User::SetFloatingPointMode(TFloatingPointMode, TFloatingPointRoundingMode)</newfuncname>
				    <newfuncpos>2171</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RArrayBase::FindReverse(void const*) const</newfuncname>
				    <newfuncpos>2172</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RArrayBase::FindReverse(void const*, int (*)(void const*, void const*)) const</newfuncname>
				    <newfuncpos>2173</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RPointerArrayBase::FindReverse(void const*) const</newfuncname>
				    <newfuncpos>2174</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RPointerArrayBase::FindReverse(void const*, int (*)(void const*, void const*)) const</newfuncname>
				    <newfuncpos>2175</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>UserSvr::DllTls(int, int)</newfuncname>
				    <newfuncpos>2176</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>UserSvr::DllSetTls(int, int, void*)</newfuncname>
				    <newfuncpos>2177</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>BTrace::Out(unsigned long, unsigned long, unsigned long, unsigned long)</newfuncname>
				    <newfuncpos>2178</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>BTrace::OutN(unsigned long, unsigned long, unsigned long, void const*, int)</newfuncname>
				    <newfuncpos>2179</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>BTrace::OutX(unsigned long, unsigned long, unsigned long, unsigned long)</newfuncname>
				    <newfuncpos>2180</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>BTrace::OutNX(unsigned long, unsigned long, unsigned long, void const*, int)</newfuncname>
				    <newfuncpos>2181</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>User::ProcessCritical(RProcess)</newfuncname>
				    <newfuncpos>2182</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>User::Critical(RThread)</newfuncname>
				    <newfuncpos>2183</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RLoader::CancelLazyDllUnload()</newfuncname>
				    <newfuncpos>2184</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RDebug::RawPrint(TDesC8 const&amp;)</newfuncname>
				    <newfuncpos>2185</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>User::SetRealtimeState(User::TRealtimeState)</newfuncname>
				    <newfuncpos>2186</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>DefaultHash::IntegerPtr(int* const&amp;)</newfuncname>
				    <newfuncpos>2187</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>DefaultHash::Des8Ptr(TDesC8* const&amp;)</newfuncname>
				    <newfuncpos>2188</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>DefaultHash::Des16Ptr(TDesC16* const&amp;)</newfuncname>
				    <newfuncpos>2189</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>DefaultIdentity::IntegerPtr(int* const&amp;, int* const&amp;)</newfuncname>
				    <newfuncpos>2190</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>DefaultIdentity::Des8Ptr(TDesC8* const&amp;, TDesC8* const&amp;)</newfuncname>
				    <newfuncpos>2191</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>DefaultIdentity::Des16Ptr(TDesC16* const&amp;, TDesC16* const&amp;)</newfuncname>
				    <newfuncpos>2192</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>UserHeap::OffsetChunkHeap(RChunk, int, int, int, int, int, int, unsigned long)</newfuncname>
				    <newfuncpos>2193</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>KHeapMinCellSize</newfuncname>
				    <newfuncpos>2194</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TRegion::Intersects(TRect const&amp;) const</newfuncname>
				    <newfuncpos>2195</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>KHeapShrinkHysRatio</newfuncname>
				    <newfuncpos>2196</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TDesC16::GetCollationKeysL(int, TCollationMethod const*) const</newfuncname>
				    <newfuncpos>2197</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TDesC16::GetFoldedDecomposedFormL() const</newfuncname>
				    <newfuncpos>2198</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TDesC16::GetNormalizedDecomposedFormL() const</newfuncname>
				    <newfuncpos>2199</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TDesC16::MatchC(TDesC16 const&amp;, int, int, int, int, TCollationMethod const*) const</newfuncname>
				    <newfuncpos>2200</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RLoader::Delete(TDesC16 const&amp;)</newfuncname>
				    <newfuncpos>2201</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RHandleBase::FullName(TDes16&amp;) const</newfuncname>
				    <newfuncpos>2202</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>BTrace::OutFilteredN(unsigned long, unsigned long, unsigned long, void const*, int)</newfuncname>
				    <newfuncpos>2203</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>BTrace::OutFilteredX(unsigned long, unsigned long, unsigned long, unsigned long)</newfuncname>
				    <newfuncpos>2204</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>BTrace::OutFilteredNX(unsigned long, unsigned long, unsigned long, void const*, int)</newfuncname>
				    <newfuncpos>2205</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>BTrace::OutFilteredBig(unsigned long, unsigned long, void const*, int)</newfuncname>
				    <newfuncpos>2206</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>BTrace::OutBig(unsigned long, unsigned long, void const*, int)</newfuncname>
				    <newfuncpos>2207</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>BTrace::CheckFilter(unsigned long)</newfuncname>
				    <newfuncpos>2208</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>BTrace::CheckFilter2(unsigned long, unsigned long)</newfuncname>
				    <newfuncpos>2209</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>BTrace::OutFiltered(unsigned long, unsigned long, unsigned long, unsigned long)</newfuncname>
				    <newfuncpos>2210</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>exiflib</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CExifRead::NewL(TDesC8 const&amp;, unsigned int)</newfuncname>
				    <newfuncpos>6</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CExifModify::NewL(TDesC8 const&amp;, CExifModify::TOperationMode, unsigned int)</newfuncname>
				    <newfuncpos>7</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>fbscli</name>
			  <issue>
				    <typeid>6</typeid>
				    <funcname>CChunkPile::NewL(unsigned char*, unsigned int)</funcname>
				    <newfuncname>CChunkPile::NewL(unsigned char*, unsigned int, MBackgroundThreadStartCallback*)</newfuncname>
				    <funcpos>4</funcpos>
			    <status>OK</status>
        <comment>Class CChunkPile is not part of the public SDK.</comment>
      </issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CFbsBitmap::DataStride() const</newfuncname>
				    <newfuncpos>225</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CFbsTypefaceStore::SetDefaultLanguageForMetrics(TLanguage) const</newfuncname>
				    <newfuncpos>226</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CChunkPile::DefragmentChunkOneStep()</newfuncname>
				    <newfuncpos>227</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CChunkPile::DefragmentChunk(int)</newfuncname>
				    <newfuncpos>228</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CBitwiseBitmap::CheckBackgroundCompressData()</newfuncname>
				    <newfuncpos>229</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CChunkPile::DefragmentNeeded() const</newfuncname>
				    <newfuncpos>230</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CFbsBitmap::CompressInBackground(TRequestStatus&amp;)</newfuncname>
				    <newfuncpos>231</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CFbsBitmap::CompressInBackground()</newfuncname>
				    <newfuncpos>232</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CFbsTypefaceStore::ReleaseTwipsCache()</newfuncname>
				    <newfuncpos>233</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CBitwiseBitmap::DataStride() const</newfuncname>
				    <newfuncpos>234</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CFbsBitmap::CompressInBackground(TBitmapfileCompressionScheme)</newfuncname>
				    <newfuncpos>235</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CFbsBitmap::CompressInBackground(TRequestStatus&amp;, TBitmapfileCompressionScheme)</newfuncname>
				    <newfuncpos>236</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CFbsBitmap::Compress(TBitmapfileCompressionScheme)</newfuncname>
				    <newfuncpos>237</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CBitwiseBitmap::CompressData(TBitmapfileCompressionScheme)</newfuncname>
				    <newfuncpos>238</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CBitwiseBitmap::Header() const</newfuncname>
				    <newfuncpos>239</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CFbsTypefaceStore::SetSystemDefaultTypefaceNameL(TDesC16 const&amp;)</newfuncname>
				    <newfuncpos>240</newfuncpos>
			</issue>
		  </library>
		  <library>
			  <name>fntstr</name>
			  <issue>
				    <typeid>6</typeid>
				    <funcname>COpenFontFile::Reserved()</funcname>
				    <newfuncname>COpenFontFile::ExtendedInterface(TUid, void*&amp;)</newfuncname>
				    <funcpos>17</funcpos>
			    <status>OK</status>
        <comment>Reserved function replaced with real one, which is ok.</comment>
      </issue>
			  <issue>
				    <typeid>6</typeid>
				    <funcname>COpenFont::Reserved()</funcname>
				    <newfuncname>COpenFont::ExtendedInterface(TUid, void*&amp;)</newfuncname>
				    <funcpos>39</funcpos>
			    <status>OK</status>
        <comment>Reserved function replaced with real one, which is ok.</comment>
      </issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TOpenFontSpec::SetScriptTypeForMetrics(TLanguage)</newfuncname>
				    <newfuncpos>112</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TOpenFontSpec::ScriptTypeForMetrics() const</newfuncname>
				    <newfuncpos>113</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TOpenFontSpec::OperatorEquality(TOpenFontSpec const&amp;) const</newfuncname>
				    <newfuncpos>114</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TOpenFontSpec::DoSetEffects(unsigned long)</newfuncname>
				    <newfuncpos>115</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TOpenFontSpec::DoEffects() const</newfuncname>
				    <newfuncpos>116</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CBitmapFont::ShapeTextL(TDesC16 const&amp;, int, TShapeMessageParameters const&amp;)</newfuncname>
				    <newfuncpos>117</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CBitmapFont::DeleteShape(TShapeHeader*)</newfuncname>
				    <newfuncpos>118</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CFontStore::InstallShaperFactoryL(CShaperFactory*)</newfuncname>
				    <newfuncpos>119</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CShaper::ExtendedInterface(TUid)</newfuncname>
				    <newfuncpos>120</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CShaper::CShaper()</newfuncname>
				    <newfuncpos>121</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CShaper::~CShaper()</newfuncname>
				    <newfuncpos>122</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CShaper::~CShaper()</newfuncname>
				    <newfuncpos>123</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CShaper::~CShaper()</newfuncname>
				    <newfuncpos>124</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CShaper</newfuncname>
				    <newfuncpos>125</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CShaper</newfuncname>
				    <newfuncpos>126</newfuncpos>
			</issue>
		  </library>
		  <library>
			  <name>fontutils</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TAknFontId::FontIdForStartupNormalFont()</newfuncname>
				    <newfuncpos>26</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>gdi</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CTypefaceStore::IncrementFontCount(CFont const*)</newfuncname>
				    <newfuncpos>331</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>GlyphSample::TLanguage2TScript(TLanguage)</newfuncname>
				    <newfuncpos>332</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>GlyphSample::TScript2GlyphSample(int)</newfuncname>
				    <newfuncpos>333</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TFontSpec::SetScriptTypeForMetrics(TLanguage)</newfuncname>
				    <newfuncpos>334</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TTypeface::SetScriptTypeForMetrics(TLanguage)</newfuncname>
				    <newfuncpos>335</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TTypeface::SetScriptTypeForMetrics(int)</newfuncname>
				    <newfuncpos>336</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TFontStyle::operator==(TFontStyle const&amp;) const</newfuncname>
				    <newfuncpos>337</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TTypeface::ScriptTypeForMetrics() const</newfuncname>
				    <newfuncpos>338</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TFontSpec::ScriptTypeForMetrics() const</newfuncname>
				    <newfuncpos>339</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CFont::GetCharacterPosition2(CFont::TPositionParam&amp;, RShapeInfo&amp;) const</newfuncname>
				    <newfuncpos>340</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RShapeInfo::Close()</newfuncname>
				    <newfuncpos>341</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RShapeInfo::RShapeInfo()</newfuncname>
				    <newfuncpos>342</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RShapeInfo::RShapeInfo()</newfuncname>
				    <newfuncpos>343</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RShapeInfo::IsOpen()</newfuncname>
				    <newfuncpos>344</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>gsmu</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSmsMessage::DecodedOnSim()</newfuncname>
				    <newfuncpos>352</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSmsMessage::ForwardToClient()</newfuncname>
				    <newfuncpos>353</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSmsMessage::SetDecodedOnSIM(int)</newfuncname>
				    <newfuncpos>354</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSmsMessage::SetForwardToClient(int)</newfuncname>
				    <newfuncpos>355</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CVoiceMailDeletion::SetMessageId(unsigned short)</newfuncname>
				    <newfuncpos>356</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CVoiceMailDeletion::NewL()</newfuncname>
				    <newfuncpos>357</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CVoiceMailDeletion::~CVoiceMailDeletion()</newfuncname>
				    <newfuncpos>358</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CVoiceMailDeletion::~CVoiceMailDeletion()</newfuncname>
				    <newfuncpos>359</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CVoiceMailDeletion::~CVoiceMailDeletion()</newfuncname>
				    <newfuncpos>360</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CVoiceMailNotification::SetMessageId(unsigned short)</newfuncname>
				    <newfuncpos>361</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CVoiceMailNotification::SetMessageLength(unsigned char)</newfuncname>
				    <newfuncpos>362</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CVoiceMailNotification::SetRetentionDays(unsigned char)</newfuncname>
				    <newfuncpos>363</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CVoiceMailNotification::SetPriorityIndication(int)</newfuncname>
				    <newfuncpos>364</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CVoiceMailNotification::SetCallingLineIdentityL(TDesC16&amp;)</newfuncname>
				    <newfuncpos>365</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CVoiceMailNotification::SetParsedCallingLineIdentityL(TGsmSmsTelNumber&amp;)</newfuncname>
				    <newfuncpos>366</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CVoiceMailNotification::NewL()</newfuncname>
				    <newfuncpos>367</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CVoiceMailNotification::~CVoiceMailNotification()</newfuncname>
				    <newfuncpos>368</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CVoiceMailNotification::~CVoiceMailNotification()</newfuncname>
				    <newfuncpos>369</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CVoiceMailNotification::~CVoiceMailNotification()</newfuncname>
				    <newfuncpos>370</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEnhancedVoiceMailNotification::NumberOfVoiceMails()</newfuncname>
				    <newfuncpos>371</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEnhancedVoiceMailNotification::GetVoiceMailNotifications()</newfuncname>
				    <newfuncpos>372</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEnhancedVoiceMailNotification::NewL()</newfuncname>
				    <newfuncpos>373</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEnhancedVoiceMailNotification::~CEnhancedVoiceMailNotification()</newfuncname>
				    <newfuncpos>374</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEnhancedVoiceMailNotification::~CEnhancedVoiceMailNotification()</newfuncname>
				    <newfuncpos>375</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEnhancedVoiceMailNotification::~CEnhancedVoiceMailNotification()</newfuncname>
				    <newfuncpos>376</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEnhancedVoiceMailBoxInformation::SetProfile(TSmsMessageProfileType)</newfuncname>
				    <newfuncpos>377</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEnhancedVoiceMailBoxInformation::SetStorage(int)</newfuncname>
				    <newfuncpos>378</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEnhancedVoiceMailBoxInformation::SetAccessAddressL(TDesC16 const&amp;)</newfuncname>
				    <newfuncpos>379</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEnhancedVoiceMailBoxInformation::SetMaximumCapacity(int)</newfuncname>
				    <newfuncpos>380</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEnhancedVoiceMailBoxInformation::SetParsedAccessAddressL(TGsmSmsTelNumber const&amp;)</newfuncname>
				    <newfuncpos>381</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEnhancedVoiceMailBoxInformation::SetAlmostMaximumCapacity(int)</newfuncname>
				    <newfuncpos>382</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEnhancedVoiceMailBoxInformation::SetNumberOfVoiceMessages(unsigned char)</newfuncname>
				    <newfuncpos>383</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEnhancedVoiceMailDeleteConfirmations::NumberOfDeletes()</newfuncname>
				    <newfuncpos>384</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEnhancedVoiceMailDeleteConfirmations::GetVoiceMailDeletions()</newfuncname>
				    <newfuncpos>385</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEnhancedVoiceMailDeleteConfirmations::NewL()</newfuncname>
				    <newfuncpos>386</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEnhancedVoiceMailDeleteConfirmations::~CEnhancedVoiceMailDeleteConfirmations()</newfuncname>
				    <newfuncpos>387</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEnhancedVoiceMailDeleteConfirmations::~CEnhancedVoiceMailDeleteConfirmations()</newfuncname>
				    <newfuncpos>388</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEnhancedVoiceMailDeleteConfirmations::~CEnhancedVoiceMailDeleteConfirmations()</newfuncname>
				    <newfuncpos>389</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSmsMessage::GetOperationsForIEL(CSmsInformationElement::TSmsInformationElementIdentifier) const</newfuncname>
				    <newfuncpos>390</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSmsIEOperation::Id() const</newfuncname>
				    <newfuncpos>391</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CVoiceMailDeletion::MessageExtensionIndication() const</newfuncname>
				    <newfuncpos>392</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CVoiceMailDeletion::MessageId() const</newfuncname>
				    <newfuncpos>393</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CVoiceMailNotification::MessageLength() const</newfuncname>
				    <newfuncpos>394</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CVoiceMailNotification::RetentionDays() const</newfuncname>
				    <newfuncpos>395</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CVoiceMailNotification::PriorityIndication() const</newfuncname>
				    <newfuncpos>396</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CVoiceMailNotification::CallingLineIdentity() const</newfuncname>
				    <newfuncpos>397</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CVoiceMailNotification::ParsedCallingLineIdentity(TGsmSmsTelNumber&amp;) const</newfuncname>
				    <newfuncpos>398</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CVoiceMailNotification::MessageExtensionIndication() const</newfuncname>
				    <newfuncpos>399</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CVoiceMailNotification::MessageId() const</newfuncname>
				    <newfuncpos>400</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSmsHyperLinkOperations::AddHyperLinkL(unsigned int, unsigned char, unsigned char) const</newfuncname>
				    <newfuncpos>401</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSmsHyperLinkOperations::RemoveHyperLinkL(unsigned int) const</newfuncname>
				    <newfuncpos>402</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSmsHyperLinkOperations::NumberOfHyperLinksL() const</newfuncname>
				    <newfuncpos>403</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSmsHyperLinkOperations::RemoveAllHyperLinksL() const</newfuncname>
				    <newfuncpos>404</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSmsHyperLinkOperations::CopyHyperLinkAtIndexL(unsigned int, unsigned int&amp;, unsigned char&amp;, unsigned char&amp;) const</newfuncname>
				    <newfuncpos>405</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSmsReplyAddressOperations::AddReplyAddressL(TDesC16 const&amp;) const</newfuncname>
				    <newfuncpos>406</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSmsReplyAddressOperations::GetReplyAddressL() const</newfuncname>
				    <newfuncpos>407</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSmsReplyAddressOperations::RemoveReplyAddressL() const</newfuncname>
				    <newfuncpos>408</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSmsReplyAddressOperations::AddParsedReplyAddressL(TGsmSmsTelNumber const&amp;) const</newfuncname>
				    <newfuncpos>409</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSmsReplyAddressOperations::GetParsedReplyAddressL(TGsmSmsTelNumber&amp;) const</newfuncname>
				    <newfuncpos>410</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSmsReplyAddressOperations::ContainsReplyAddressIEL() const</newfuncname>
				    <newfuncpos>411</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSmsEnhancedVoiceMailOperations::AddEnhancedVoiceMailIEL(CEnhancedVoiceMailBoxInformation const&amp;) const</newfuncname>
				    <newfuncpos>412</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSmsEnhancedVoiceMailOperations::CopyEnhancedVoiceMailIEL() const</newfuncname>
				    <newfuncpos>413</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSmsEnhancedVoiceMailOperations::RemoveEnhancedVoiceMailIEL() const</newfuncname>
				    <newfuncpos>414</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSmsEnhancedVoiceMailOperations::ContainsEnhancedVoiceMailIEL() const</newfuncname>
				    <newfuncpos>415</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSmsSpecialSMSMessageOperations::GetMessageIndicationIEL(unsigned int, int&amp;, TSmsMessageIndicationType&amp;, TExtendedSmsIndicationType&amp;, TSmsMessageProfileType&amp;, unsigned char&amp;) const</newfuncname>
				    <newfuncpos>416</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSmsSpecialSMSMessageOperations::AddSpecialMessageIndicationL(int, TSmsMessageIndicationType, TExtendedSmsIndicationType, TSmsMessageProfileType, unsigned char) const</newfuncname>
				    <newfuncpos>417</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSmsSpecialSMSMessageOperations::RemoveSpecialMessageIndicationL(TSmsMessageIndicationType, TExtendedSmsIndicationType) const</newfuncname>
				    <newfuncpos>418</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSmsSpecialSMSMessageOperations::RemoveAllSpecialMessageIndicationsL() const</newfuncname>
				    <newfuncpos>419</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSmsSpecialSMSMessageOperations::GetCountOfSpecialMessageIndicationsL() const</newfuncname>
				    <newfuncpos>420</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEnhancedVoiceMailBoxInformation::AccessAddress() const</newfuncname>
				    <newfuncpos>421</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEnhancedVoiceMailBoxInformation::MaximumCapacity() const</newfuncname>
				    <newfuncpos>422</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEnhancedVoiceMailBoxInformation::ExtensionIndicator() const</newfuncname>
				    <newfuncpos>423</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEnhancedVoiceMailBoxInformation::ParsedAccessAddress(TGsmSmsTelNumber&amp;) const</newfuncname>
				    <newfuncpos>424</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEnhancedVoiceMailBoxInformation::AlmostMaximumCapacity() const</newfuncname>
				    <newfuncpos>425</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEnhancedVoiceMailBoxInformation::NumberOfVoiceMessages() const</newfuncname>
				    <newfuncpos>426</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEnhancedVoiceMailBoxInformation::Type() const</newfuncname>
				    <newfuncpos>427</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEnhancedVoiceMailBoxInformation::Store() const</newfuncname>
				    <newfuncpos>428</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEnhancedVoiceMailBoxInformation::Profile() const</newfuncname>
				    <newfuncpos>429</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CSmsIEOperation</newfuncname>
				    <newfuncpos>430</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CVoiceMailDeletion</newfuncname>
				    <newfuncpos>431</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CVoiceMailNotification</newfuncname>
				    <newfuncpos>432</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CSmsHyperLinkOperations</newfuncname>
				    <newfuncpos>433</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CSmsReplyAddressOperations</newfuncname>
				    <newfuncpos>434</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CEnhancedVoiceMailNotification</newfuncname>
				    <newfuncpos>435</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CSmsEnhancedVoiceMailOperations</newfuncname>
				    <newfuncpos>436</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CSmsMessageAdditionalAttributes</newfuncname>
				    <newfuncpos>437</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CSmsSpecialSMSMessageOperations</newfuncname>
				    <newfuncpos>438</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CEnhancedVoiceMailBoxInformation</newfuncname>
				    <newfuncpos>439</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CEnhancedVoiceMailDeleteConfirmations</newfuncname>
				    <newfuncpos>440</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CSmsIEOperation</newfuncname>
				    <newfuncpos>441</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CVoiceMailDeletion</newfuncname>
				    <newfuncpos>442</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CVoiceMailNotification</newfuncname>
				    <newfuncpos>443</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CSmsHyperLinkOperations</newfuncname>
				    <newfuncpos>444</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CSmsReplyAddressOperations</newfuncname>
				    <newfuncpos>445</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CEnhancedVoiceMailNotification</newfuncname>
				    <newfuncpos>446</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CSmsEnhancedVoiceMailOperations</newfuncname>
				    <newfuncpos>447</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CSmsMessageAdditionalAttributes</newfuncname>
				    <newfuncpos>448</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CSmsSpecialSMSMessageOperations</newfuncname>
				    <newfuncpos>449</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CEnhancedVoiceMailBoxInformation</newfuncname>
				    <newfuncpos>450</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CEnhancedVoiceMailDeleteConfirmations</newfuncname>
				    <newfuncpos>451</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSmsTPSRROperations::SetSchemeL()</newfuncname>
				    <newfuncpos>452</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSmsTPSRROperations::SetDefaultL(int)</newfuncname>
				    <newfuncpos>453</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSmsTPSRROperations::ResetSchemeL()</newfuncname>
				    <newfuncpos>454</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSmsTPSRROperations::SetSegmentStatusReportL(unsigned int, int)</newfuncname>
				    <newfuncpos>455</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSmsTPSRROperations::SetLastSegmentStatusReportL(int)</newfuncname>
				    <newfuncpos>456</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSmsSMSCCtrlParameterOperations::SetSchemeL()</newfuncname>
				    <newfuncpos>457</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSmsSMSCCtrlParameterOperations::SetDefaultL(unsigned char)</newfuncname>
				    <newfuncpos>458</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSmsSMSCCtrlParameterOperations::ResetSchemeL()</newfuncname>
				    <newfuncpos>459</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSmsSMSCCtrlParameterOperations::SetStatusReportL(unsigned int, unsigned char)</newfuncname>
				    <newfuncpos>460</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSmsMessage::GetOperationsForNonIEL(TSmsNonIEIdentifier) const</newfuncname>
				    <newfuncpos>461</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSmsNonIEOperation::Id() const</newfuncname>
				    <newfuncpos>462</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSmsTPSRROperations::GetStatusReport(unsigned int) const</newfuncname>
				    <newfuncpos>463</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSmsTPSRROperations::GetScheme() const</newfuncname>
				    <newfuncpos>464</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSmsSMSCCtrlParameterOperations::GetStatusReport(unsigned int, unsigned char&amp;) const</newfuncname>
				    <newfuncpos>465</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSmsSMSCCtrlParameterOperations::GetScheme() const</newfuncname>
				    <newfuncpos>466</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CSmsNonIEOperation</newfuncname>
				    <newfuncpos>467</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CSmsTPSRROperations</newfuncname>
				    <newfuncpos>468</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CSmsSMSCCtrlParameterOperations</newfuncname>
				    <newfuncpos>469</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CSmsMessageAdditionalAttributes::CTPSRRScheme</newfuncname>
				    <newfuncpos>470</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CSmsMessageAdditionalAttributes::CDefaultScheme</newfuncname>
				    <newfuncpos>471</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CSmsMessageAdditionalAttributes::CControlParametersScheme</newfuncname>
				    <newfuncpos>472</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CSmsNonIEOperation</newfuncname>
				    <newfuncpos>473</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CSmsTPSRROperations</newfuncname>
				    <newfuncpos>474</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CSmsSMSCCtrlParameterOperations</newfuncname>
				    <newfuncpos>475</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CSmsMessageAdditionalAttributes::CTPSRRScheme</newfuncname>
				    <newfuncpos>476</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CSmsMessageAdditionalAttributes::CDefaultScheme</newfuncname>
				    <newfuncpos>477</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CSmsMessageAdditionalAttributes::CControlParametersScheme</newfuncname>
				    <newfuncpos>478</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSmsMessage::Scheme() const</newfuncname>
				    <newfuncpos>479</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>http</name>
			  <issue>
				    <typeid>4</typeid>
				    <funcname>TTextHeaderUtils::TrimWsLeft(TPtrC8&amp;)</funcname>
				    <funcpos>132</funcpos>
			    <status>OK</status>
        <comment>Class TTextHeaderUtils is not part of the public SDK.</comment>
      </issue>
			  <issue>
				    <typeid>4</typeid>
				    <funcname>TTextHeaderUtils::TrimWsRight(TPtrC8&amp;)</funcname>
				    <funcpos>133</funcpos>
			    <status>OK</status>
        <comment>Class TTextHeaderUtils is not part of the public SDK.</comment>
      </issue>
			  <issue>
				    <typeid>4</typeid>
				    <funcname>TTextHeaderUtils::TrimWsBothEnds(TPtrC8&amp;)</funcname>
				    <funcpos>134</funcpos>
			    <status>OK</status>
        <comment>Class TTextHeaderUtils is not part of the public SDK.</comment>
      </issue>
			  <issue>
				    <typeid>4</typeid>
				    <funcname>TTextHeaderUtils::ExtractIntegerValueL(TPtrC8&amp;, int&amp;, int)</funcname>
				    <funcpos>135</funcpos>
			    <status>OK</status>
        <comment>Class TTextHeaderUtils is not part of the public SDK.</comment>
      </issue>
			  <issue>
				    <typeid>4</typeid>
				    <funcname>TTextHeaderUtils::ExtractQuotedStringL(TPtrC8&amp;, TPtrC8&amp;)</funcname>
				    <funcpos>136</funcpos>
			    <status>OK</status>
        <comment>Class TTextHeaderUtils is not part of the public SDK.</comment>
      </issue>
			  <issue>
				    <typeid>4</typeid>
				    <funcname>TTextHeaderUtils::ExtractNextTokenFromList(TPtrC8&amp;, TPtrC8&amp;, TChar)</funcname>
				    <funcpos>137</funcpos>
			    <status>OK</status>
        <comment>Class TTextHeaderUtils is not part of the public SDK.</comment>
      </issue>
			  <issue>
				    <typeid>4</typeid>
				    <funcname>TTextHeaderUtils::ExtractNextTokenFromList(TPtrC8&amp;, TPtrC8&amp;, TDesC8 const&amp;)</funcname>
				    <funcpos>138</funcpos>
			    <status>OK</status>
        <comment>Class TTextHeaderUtils is not part of the public SDK.</comment>
      </issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RHTTPSession::ServerCert()</newfuncname>
				    <newfuncpos>280</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CProtocolHandler::SessionServerCert()</newfuncname>
				    <newfuncpos>281</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CProtocolHandler::TransactionServerCert(RHTTPTransaction)</newfuncname>
				    <newfuncpos>282</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RHTTPTransaction::ServerCert()</newfuncname>
				    <newfuncpos>283</newfuncpos>
			</issue>
		  </library>
		  <library>
			  <name>imageconversion</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImageFrame::SetFrameFormatL(TFrameFormatBase const&amp;)</newfuncname>
				    <newfuncpos>457</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImageFrame::SetFrameLayoutL(TFrameLayoutBase const&amp;)</newfuncname>
				    <newfuncpos>458</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImageFrame::SetFrameSizeInPixels(TSize const&amp;)</newfuncname>
				    <newfuncpos>459</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImageFrame::Data()</newfuncname>
				    <newfuncpos>460</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImageFrame::NewL(RChunk const*, int, int)</newfuncname>
				    <newfuncpos>461</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImageFrame::NewL(RChunk const*, int, int, TSize const&amp;, TFrameFormatBase const&amp;, TFrameLayoutBase const&amp;)</newfuncname>
				    <newfuncpos>462</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImageFrame::NewL(TDes8 const&amp;, int)</newfuncname>
				    <newfuncpos>463</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImageFrame::NewL(TDes8 const&amp;, int, TSize const&amp;, TFrameFormatBase const&amp;, TFrameLayoutBase const&amp;)</newfuncname>
				    <newfuncpos>464</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImageFrame::DataChunk()</newfuncname>
				    <newfuncpos>465</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImageFrame::CImageFrame()</newfuncname>
				    <newfuncpos>466</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImageFrame::CImageFrame()</newfuncname>
				    <newfuncpos>467</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImageFrame::~CImageFrame()</newfuncname>
				    <newfuncpos>468</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImageFrame::~CImageFrame()</newfuncname>
				    <newfuncpos>469</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImageFrame::~CImageFrame()</newfuncname>
				    <newfuncpos>470</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TFrameFormat::SetColourSpace(TUid)</newfuncname>
				    <newfuncpos>471</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TFrameFormat::TFrameFormat(TUid)</newfuncname>
				    <newfuncpos>472</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TFrameFormat::TFrameFormat(TUid)</newfuncname>
				    <newfuncpos>473</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TFrameLayout::SetScanLength(int, int)</newfuncname>
				    <newfuncpos>474</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TFrameLayout::SetCurrentLength(int, int)</newfuncname>
				    <newfuncpos>475</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TFrameLayout::SetStart(int, int)</newfuncname>
				    <newfuncpos>476</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TFrameLayout::SetLength(int, int)</newfuncname>
				    <newfuncpos>477</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TFrameLayout::TFrameLayout(int)</newfuncname>
				    <newfuncpos>478</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TFrameLayout::TFrameLayout(int)</newfuncname>
				    <newfuncpos>479</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TFrameFormatBase::TFrameFormatBase(TUid)</newfuncname>
				    <newfuncpos>480</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TFrameLayoutBase::TFrameLayoutBase(TUid)</newfuncname>
				    <newfuncpos>481</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImageDecoderPlugin::RequestInitL(int)</newfuncname>
				    <newfuncpos>482</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImageEncoderPlugin::RequestInitL()</newfuncname>
				    <newfuncpos>483</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImageFrame::DataOffset() const</newfuncname>
				    <newfuncpos>484</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImageFrame::FrameFormat() const</newfuncname>
				    <newfuncpos>485</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImageFrame::FrameLayout() const</newfuncname>
				    <newfuncpos>486</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImageFrame::MaxBufferSize() const</newfuncname>
				    <newfuncpos>487</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImageFrame::FrameSizeInPixels() const</newfuncname>
				    <newfuncpos>488</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImageFrame::Data() const</newfuncname>
				    <newfuncpos>489</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImageFrame::CBody::MaxBufferSize() const</newfuncname>
				    <newfuncpos>490</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImageFrame::IsChunk() const</newfuncname>
				    <newfuncpos>491</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TFrameFormat::DuplicateL() const</newfuncname>
				    <newfuncpos>492</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TFrameFormat::FormatCode() const</newfuncname>
				    <newfuncpos>493</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TFrameFormat::ColourSpace() const</newfuncname>
				    <newfuncpos>494</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TFrameFormat::Sampling() const</newfuncname>
				    <newfuncpos>495</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TFrameLayout::DuplicateL() const</newfuncname>
				    <newfuncpos>496</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TFrameLayout::ScanLength(int) const</newfuncname>
				    <newfuncpos>497</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TFrameLayout::CurrentLength(int) const</newfuncname>
				    <newfuncpos>498</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TFrameLayout::Start(int) const</newfuncname>
				    <newfuncpos>499</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TFrameLayout::Length(int) const</newfuncname>
				    <newfuncpos>500</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TFrameLayout::Planes() const</newfuncname>
				    <newfuncpos>501</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TFrameFormatBase::Type() const</newfuncname>
				    <newfuncpos>502</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TFrameLayoutBase::Type() const</newfuncname>
				    <newfuncpos>503</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CImageFrame</newfuncname>
				    <newfuncpos>504</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for TFrameFormat</newfuncname>
				    <newfuncpos>505</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for TFrameLayout</newfuncname>
				    <newfuncpos>506</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for TFrameFormatBase</newfuncname>
				    <newfuncpos>507</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for TFrameLayoutBase</newfuncname>
				    <newfuncpos>508</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CImageFrame</newfuncname>
				    <newfuncpos>509</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for TFrameFormat</newfuncname>
				    <newfuncpos>510</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for TFrameLayout</newfuncname>
				    <newfuncpos>511</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for TFrameFormatBase</newfuncname>
				    <newfuncpos>512</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for TFrameLayoutBase</newfuncname>
				    <newfuncpos>513</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImageFrame::ConstructL(RChunk const*, int, int)</newfuncname>
				    <newfuncpos>514</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImageFrame::ConstructL(RChunk const*, int, int, TSize const&amp;, TFrameFormatBase const&amp;, TFrameLayoutBase const&amp;)</newfuncname>
				    <newfuncpos>515</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImageFrame::ConstructL(TDes8 const&amp;, int)</newfuncname>
				    <newfuncpos>516</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImageFrame::ConstructL(TDes8 const&amp;, int, TSize const&amp;, TFrameFormatBase const&amp;, TFrameLayoutBase const&amp;)</newfuncname>
				    <newfuncpos>517</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImageFrame::Reserved1()</newfuncname>
				    <newfuncpos>518</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImageFrame::Reserved2()</newfuncname>
				    <newfuncpos>519</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImageFrame::Reserved3()</newfuncname>
				    <newfuncpos>520</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImageFrame::Reserved4()</newfuncname>
				    <newfuncpos>521</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TFrameFormatBase::Reserved1()</newfuncname>
				    <newfuncpos>522</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TFrameFormatBase::Reserved2()</newfuncname>
				    <newfuncpos>523</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TFrameFormatBase::Reserved3()</newfuncname>
				    <newfuncpos>524</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TFrameFormatBase::Reserved4()</newfuncname>
				    <newfuncpos>525</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TFrameLayoutBase::Reserved1()</newfuncname>
				    <newfuncpos>526</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TFrameLayoutBase::Reserved2()</newfuncname>
				    <newfuncpos>527</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TFrameLayoutBase::Reserved3()</newfuncname>
				    <newfuncpos>528</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TFrameLayoutBase::Reserved4()</newfuncname>
				    <newfuncpos>529</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImageDecoderPlugin::DecoderOptions() const</newfuncname>
				    <newfuncpos>530</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImageDecoder::SetDecoderThreadPriority(TThreadPriority)</newfuncname>
				    <newfuncpos>531</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImageEncoder::SetEncoderThreadPriority(TThreadPriority)</newfuncname>
				    <newfuncpos>532</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImageDecoder::GetPluginPropertiesL(TUid, RArray&lt;TUid&gt;&amp;)</newfuncname>
				    <newfuncpos>533</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImageDecoder::GetInterfaceImplementationsL(TUid const*, int, RArray&lt;TUid&gt;&amp;)</newfuncname>
				    <newfuncpos>534</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImageDecoder::GetInterfaceImplementationsL(RArray&lt;TUid&gt; const&amp;, RArray&lt;TUid&gt;&amp;)</newfuncname>
				    <newfuncpos>535</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImageEncoder::GetPluginPropertiesL(TUid, RArray&lt;TUid&gt;&amp;)</newfuncname>
				    <newfuncpos>536</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImageEncoder::GetInterfaceImplementationsL(TUid const*, int, RArray&lt;TUid&gt;&amp;)</newfuncname>
				    <newfuncpos>537</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImageEncoder::GetInterfaceImplementationsL(RArray&lt;TUid&gt; const&amp;, RArray&lt;TUid&gt;&amp;)</newfuncname>
				    <newfuncpos>538</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>imcm</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImEmailMessage::GetBodyTextEntryIdL(TRequestStatus&amp;, long, CImEmailMessage::TImEmailEntryType)</newfuncname>
				    <newfuncpos>775</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImEmailMessage::GetBodyTextEntryIdL(long, CImEmailMessage::TImEmailEntryType)</newfuncname>
				    <newfuncpos>776</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEmailAccounts::IsAccountReadOnlyL(TPopAccount const&amp;)</newfuncname>
				    <newfuncpos>777</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEmailAccounts::IsAccountReadOnlyL(TImapAccount const&amp;)</newfuncname>
				    <newfuncpos>778</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CEmailAccounts::IsAccountReadOnlyL(TSmtpAccount const&amp;)</newfuncname>
				    <newfuncpos>779</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSmtpClientMtm::CancelAttachmentOperation()</newfuncname>
				    <newfuncpos>780</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>imut</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImRecvConvert::Cancel()</newfuncname>
				    <newfuncpos>194</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImTextServerSession::SetPrimaryTextServerSession(CImTextServerSession*)</newfuncname>
				    <newfuncpos>195</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImConnect::GetIAPValue(unsigned long&amp;)</newfuncname>
				    <newfuncpos>196</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImConnect::GetIAPBearer(unsigned long&amp;)</newfuncname>
				    <newfuncpos>197</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImConnect::GetConnection()</newfuncname>
				    <newfuncpos>198</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImConnect::GetRConnectionName(TBuf&lt;128&gt;&amp;)</newfuncname>
				    <newfuncpos>199</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImConnect::GetLastSocketActivityTimeout(unsigned long&amp;)</newfuncname>
				    <newfuncpos>200</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImConnect::NewL(CImIAPPreferences const&amp;, RSocketServ&amp;)</newfuncname>
				    <newfuncpos>201</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImConnect::StartL(TRequestStatus&amp;)</newfuncname>
				    <newfuncpos>202</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CImConnect::Progress(TNifProgress&amp;)</newfuncname>
				    <newfuncpos>203</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>inetprotutil</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>InetProtTextUtils::ExtractIntegerValueL(TPtrC8&amp;, int&amp;, int)</newfuncname>
				    <newfuncpos>364</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>irobex</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CObexClient::NewL(TObexTransportInfo&amp;)</newfuncname>
				    <newfuncpos>146</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CObexServer::NewL(TObexTransportInfo&amp;)</newfuncname>
				    <newfuncpos>147</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CObexClient::SetFinalPacketObserver(MObexFinalPacketObserver*)</newfuncname>
				    <newfuncpos>148</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CObexServer::Start(MObexServerNotifyAsync*)</newfuncname>
				    <newfuncpos>149</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>MObexServerNotifyAsync::MOSNA_ExtensionInterfaceL(TUid, void*&amp;)</newfuncname>
				    <newfuncpos>150</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for MObexServerNotifyAsync</newfuncname>
				    <newfuncpos>151</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for MObexServerNotifyAsync</newfuncname>
				    <newfuncpos>152</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CObexServer::RequestIndicationCallback(CObexBaseObject*)</newfuncname>
				    <newfuncpos>153</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CObexServer::RequestCompleteIndicationCallback(TObexResponse)</newfuncname>
				    <newfuncpos>154</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CObexServer::RequestCompleteIndicationCallback(int)</newfuncname>
				    <newfuncpos>155</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CObexServer::RequestIndicationCallbackWithError(TObexResponse)</newfuncname>
				    <newfuncpos>156</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CObexServer::RequestIndicationCallbackWithError(int)</newfuncname>
				    <newfuncpos>157</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CObexClient::LastServerResponseCode() const</newfuncname>
				    <newfuncpos>158</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CObex::IsAuthenticating() const</newfuncname>
				    <newfuncpos>159</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CObexClient::SetCommandTimeOut(TTimeIntervalMicroSeconds32)</newfuncname>
				    <newfuncpos>160</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CObexClient::ExtensionInterface(TUid)</newfuncname>
				    <newfuncpos>161</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CObexServer::PacketHeaders(CObexHeaderSet*&amp;)</newfuncname>
				    <newfuncpos>162</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CObexServer::PacketHeaders(CObexHeaderSet*&amp;, MObexHeaderCheck&amp;)</newfuncname>
				    <newfuncpos>163</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CObexServer::ExtensionInterfaceL(TUid)</newfuncname>
				    <newfuncpos>164</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CObex::SuppressAuthenticationHeaderElements(CObex::TObexSuppressedAuthElements)</newfuncname>
				    <newfuncpos>165</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CObexServer::TransportInfo() const</newfuncname>
				    <newfuncpos>166</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>libgles_cm</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>eglSwapInterval</newfuncname>
				    <newfuncpos>133</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>glBindBuffer</newfuncname>
				    <newfuncpos>134</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>glBufferData</newfuncname>
				    <newfuncpos>135</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>glBufferSubData</newfuncname>
				    <newfuncpos>136</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>glClipPlanef</newfuncname>
				    <newfuncpos>137</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>glClipPlanex</newfuncname>
				    <newfuncpos>138</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>glColor4ub</newfuncname>
				    <newfuncpos>139</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>glDeleteBuffers</newfuncname>
				    <newfuncpos>140</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>glGenBuffers</newfuncname>
				    <newfuncpos>141</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>glGetBooleanv</newfuncname>
				    <newfuncpos>142</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>glGetBufferParameteriv</newfuncname>
				    <newfuncpos>143</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>glGetClipPlanef</newfuncname>
				    <newfuncpos>144</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>glGetClipPlanex</newfuncname>
				    <newfuncpos>145</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>glGetFixedv</newfuncname>
				    <newfuncpos>146</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>glGetFloatv</newfuncname>
				    <newfuncpos>147</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>glGetLightfv</newfuncname>
				    <newfuncpos>148</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>glGetLightxv</newfuncname>
				    <newfuncpos>149</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>glGetMaterialfv</newfuncname>
				    <newfuncpos>150</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>glGetMaterialxv</newfuncname>
				    <newfuncpos>151</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>glGetPointerv</newfuncname>
				    <newfuncpos>152</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>glGetTexEnvfv</newfuncname>
				    <newfuncpos>153</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>glGetTexEnviv</newfuncname>
				    <newfuncpos>154</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>glGetTexEnvxv</newfuncname>
				    <newfuncpos>155</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>glGetTexParameterfv</newfuncname>
				    <newfuncpos>156</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>glGetTexParameteriv</newfuncname>
				    <newfuncpos>157</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>glGetTexParameterxv</newfuncname>
				    <newfuncpos>158</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>glIsBuffer</newfuncname>
				    <newfuncpos>159</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>glIsEnabled</newfuncname>
				    <newfuncpos>160</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>glIsTexture</newfuncname>
				    <newfuncpos>161</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>glPointParameterf</newfuncname>
				    <newfuncpos>162</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>glPointParameterfv</newfuncname>
				    <newfuncpos>163</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>glPointParameterx</newfuncname>
				    <newfuncpos>164</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>glPointParameterxv</newfuncname>
				    <newfuncpos>165</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>glPointSizePointerOES</newfuncname>
				    <newfuncpos>166</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>glTexEnvi</newfuncname>
				    <newfuncpos>167</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>glTexEnviv</newfuncname>
				    <newfuncpos>168</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>glTexParameterfv</newfuncname>
				    <newfuncpos>169</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>glTexParameteri</newfuncname>
				    <newfuncpos>170</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>glTexParameteriv</newfuncname>
				    <newfuncpos>171</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>glTexParameterxv</newfuncname>
				    <newfuncpos>172</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>eglBindTexImage</newfuncname>
				    <newfuncpos>173</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>eglReleaseTexImage</newfuncname>
				    <newfuncpos>174</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>eglSurfaceAttrib</newfuncname>
				    <newfuncpos>175</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>listenerdopplereffect</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CListenerDoppler::NewL(CMidiClientUtility&amp;)</newfuncname>
				    <newfuncpos>17</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>listenerlocationeffect</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CListenerLocation::NewL(CMidiClientUtility&amp;)</newfuncname>
				    <newfuncpos>17</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>listenerorientationeffect</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CListenerOrientation::NewL(CMidiClientUtility&amp;)</newfuncname>
				    <newfuncpos>17</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>lmkcommonui</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CLmkEditorDlg::DisableMapAndNavigationMenuOptions()</newfuncname>
				    <newfuncpos>45</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>loudnesseffect</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CLoudness::NewL(CMidiClientUtility&amp;, int)</newfuncname>
				    <newfuncpos>19</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>mediaclientaudio</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CMdaAudioPlayerUtility::UseSharedHeap()</newfuncname>
				    <newfuncpos>158</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CMdaAudioPlayerUtility::Duration(TTimeIntervalMicroSeconds&amp;)</newfuncname>
				    <newfuncpos>159</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CMdaAudioRecorderUtility::Duration(TTimeIntervalMicroSeconds&amp;)</newfuncname>
				    <newfuncpos>160</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CMdaAudioConvertUtility::UseSharedHeap()</newfuncname>
				    <newfuncpos>161</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CMdaAudioRecorderUtility::UseSharedHeap()</newfuncname>
				    <newfuncpos>162</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>midiclient</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CMidiClientUtility::NewL(MMidiClientUtilityObserver&amp;, int, TMdaPriorityPreference, int)</newfuncname>
				    <newfuncpos>90</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>mmfstandardcustomcommands</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CMMFDurationInfoCustomCommandParser::NewL(MMMFDurationInfoCustomCommandImplementor&amp;)</newfuncname>
				    <newfuncpos>199</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CMMFDurationInfoCustomCommandParser::~CMMFDurationInfoCustomCommandParser()</newfuncname>
				    <newfuncpos>200</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CMMFDurationInfoCustomCommandParser::~CMMFDurationInfoCustomCommandParser()</newfuncname>
				    <newfuncpos>201</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CMMFDurationInfoCustomCommandParser::~CMMFDurationInfoCustomCommandParser()</newfuncname>
				    <newfuncpos>202</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CMMFDurationInfoCustomCommandParser</newfuncname>
				    <newfuncpos>203</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CMMFDurationInfoCustomCommandParser</newfuncname>
				    <newfuncpos>204</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CMMFDurationInfoCustomCommandParser2::NewL(MMMFDurationInfoCustomCommandImplementor2&amp;)</newfuncname>
				    <newfuncpos>205</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CMMFDurationInfoCustomCommandParser2::~CMMFDurationInfoCustomCommandParser2()</newfuncname>
				    <newfuncpos>206</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CMMFDurationInfoCustomCommandParser2::~CMMFDurationInfoCustomCommandParser2()</newfuncname>
				    <newfuncpos>207</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CMMFDurationInfoCustomCommandParser2::~CMMFDurationInfoCustomCommandParser2()</newfuncname>
				    <newfuncpos>208</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CMMFDurationInfoCustomCommandParser2</newfuncname>
				    <newfuncpos>209</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CMMFDurationInfoCustomCommandParser2</newfuncname>
				    <newfuncpos>210</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>msgeditorutils</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>MsgBioUtils::IncrementNameL(TDes16&amp;, int)</newfuncname>
				    <newfuncpos>103</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>msgs</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CMsvMimeHeaders::ContainsMimeHeaders(CMsvAttachment const&amp;)</newfuncname>
				    <newfuncpos>866</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TMsvEntry::SetMtmData1(long)</newfuncname>
				    <newfuncpos>867</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TMsvEntry::SetMtmData2(long)</newfuncname>
				    <newfuncpos>868</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TMsvEntry::SetMtmData3(long)</newfuncname>
				    <newfuncpos>869</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TMsvEntry::MtmData1() const</newfuncname>
				    <newfuncpos>870</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TMsvEntry::MtmData2() const</newfuncname>
				    <newfuncpos>871</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TMsvEntry::MtmData3() const</newfuncname>
				    <newfuncpos>872</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CMsvStore::CreateShareProtectedAttachmentL(TDesC16 const&amp;, RFile&amp;, CMsvAttachment*)</newfuncname>
				    <newfuncpos>873</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RMsvServerSession::CreateShareProtectedAttachmentForWriteL(long, TDes16&amp;, RFile&amp;)</newfuncname>
				    <newfuncpos>874</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>non-virtual thunk to RMsvServerSession::CreateShareProtectedAttachmentForWriteL(long, TDes16&amp;, RFile&amp;)</newfuncname>
				    <newfuncpos>875</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CMsvSession::OpenAsyncL(MMsvSessionObserver&amp;, RFs&amp;, int)</newfuncname>
				    <newfuncpos>876</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CMsvSession::OpenAsyncL(MMsvSessionObserver&amp;, int)</newfuncname>
				    <newfuncpos>877</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CMsvSession::OpenAsObserverL(MMsvSessionObserver&amp;, RFs&amp;, int)</newfuncname>
				    <newfuncpos>878</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CMsvSession::OpenAsObserverL(MMsvSessionObserver&amp;, int)</newfuncname>
				    <newfuncpos>879</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CMsvSession::OpenSyncL(MMsvSessionObserver&amp;, RFs&amp;, int)</newfuncname>
				    <newfuncpos>880</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CMsvSession::OpenSyncL(MMsvSessionObserver&amp;, int)</newfuncname>
				    <newfuncpos>881</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>obexservermtm</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CObexServerSendOperation::PreSendOperations()</newfuncname>
				    <newfuncpos>41</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CObexServerSendOperation::PostSendOperations()</newfuncname>
				    <newfuncpos>42</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CObexServerSendOperation::PreConnectOperations()</newfuncname>
				    <newfuncpos>43</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CObexServerSendOperation::PostConnectOperations()</newfuncname>
				    <newfuncpos>44</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>pbkview</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CPbkContactViewListControl::DeleteThumbnail()</newfuncname>
				    <newfuncpos>474</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CPbkVideoNumberSelect::QueryTitleL()</newfuncname>
				    <newfuncpos>475</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CPbkVideoNumberSelect::PbkControlKeyEventL(TKeyEvent const&amp;, TEventCode)</newfuncname>
				    <newfuncpos>476</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CPbkVideoNumberSelect::TParams::TParams(CPbkContactItem const&amp;)</newfuncname>
				    <newfuncpos>477</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CPbkVideoNumberSelect::TParams::TParams(CPbkContactItem const&amp;)</newfuncname>
				    <newfuncpos>478</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CPbkVideoNumberSelect::ExecuteLD(CPbkVideoNumberSelect::TParams&amp;)</newfuncname>
				    <newfuncpos>479</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CPbkVideoNumberSelect::CPbkVideoNumberSelect()</newfuncname>
				    <newfuncpos>480</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CPbkVideoNumberSelect::CPbkVideoNumberSelect()</newfuncname>
				    <newfuncpos>481</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CPbkVideoNumberSelect::~CPbkVideoNumberSelect()</newfuncname>
				    <newfuncpos>482</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CPbkVideoNumberSelect::~CPbkVideoNumberSelect()</newfuncname>
				    <newfuncpos>483</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CPbkVideoNumberSelect::~CPbkVideoNumberSelect()</newfuncname>
				    <newfuncpos>484</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CPbkVideoNumberSelect::QuerySoftkeysResource() const</newfuncname>
				    <newfuncpos>485</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CPbkVideoNumberSelect</newfuncname>
				    <newfuncpos>486</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CPbkVideoNumberSelect</newfuncname>
				    <newfuncpos>487</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>ptiengine</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CPtiEngine::GetHwrRecognizerL(TLanguage)</newfuncname>
				    <newfuncpos>254</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CPtiEngine::GetHwrRecognizerL(int)</newfuncname>
				    <newfuncpos>255</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CPtiEngine::ListHwrRecognizerL(TLanguage)</newfuncname>
				    <newfuncpos>256</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CPtiEngine::GetHwrAvailableLanguagesL(RArray&lt;int&gt;&amp;)</newfuncname>
				    <newfuncpos>257</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CHwrRecognizer::SetNumberMode(TAknEditorNumericKeymap)</newfuncname>
				    <newfuncpos>258</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CHwrRecognizer::GetDictVersion(TDes16&amp;)</newfuncname>
				    <newfuncpos>259</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CHwrRecognizer::SetCandidateNum(int)</newfuncname>
				    <newfuncpos>260</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CHwrRecognizer::GetEngineVersion(TDes16&amp;)</newfuncname>
				    <newfuncpos>261</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CHwrRecognizer::SetInputAreaSize(TSize&amp;)</newfuncname>
				    <newfuncpos>262</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CHwrRecognizer::AddAuxiliaryRange(TRecognitionRangeTag const&amp;)</newfuncname>
				    <newfuncpos>263</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CHwrRecognizer::RemoveAllAuxRange()</newfuncname>
				    <newfuncpos>264</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CHwrRecognizer::SetFirstLetterOrder(TLatinLetterOrder)</newfuncname>
				    <newfuncpos>265</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CHwrRecognizer::ListImplementationsL(TLanguage, RArray&lt;TUid&gt;&amp;)</newfuncname>
				    <newfuncpos>266</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CHwrRecognizer::RemoveAuxiliaryRange(int)</newfuncname>
				    <newfuncpos>267</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CHwrRecognizer::EnableWordRecognition(int)</newfuncname>
				    <newfuncpos>268</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CHwrRecognizer::ListAvailableLanguagesL(RArray&lt;int&gt;&amp;)</newfuncname>
				    <newfuncpos>269</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CHwrRecognizer::ListGivenAvailableLanguagesL(TUid, RArray&lt;int&gt;&amp;)</newfuncname>
				    <newfuncpos>270</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CHwrRecognizer::NewL(TLanguage, TUid&amp;)</newfuncname>
				    <newfuncpos>271</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CHwrRecognizer::NewL(int)</newfuncname>
				    <newfuncpos>272</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CHwrRecognizer::GetRange()</newfuncname>
				    <newfuncpos>273</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CHwrRecognizer::SetRange(TRecognitionRangeTag const&amp;)</newfuncname>
				    <newfuncpos>274</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CHwrRecognizer::Recognize(RArray&lt;TPoint&gt; const&amp;, RPointerArray&lt;HBufC16&gt;&amp;)</newfuncname>
				    <newfuncpos>275</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CHwrRecognizer::~CHwrRecognizer()</newfuncname>
				    <newfuncpos>276</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CHwrRecognizer::~CHwrRecognizer()</newfuncname>
				    <newfuncpos>277</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CHwrRecognizer::~CHwrRecognizer()</newfuncname>
				    <newfuncpos>278</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CHwrRecognizer::StrokeEndMark() const</newfuncname>
				    <newfuncpos>279</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CHwrRecognizer::GetCandidateNum() const</newfuncname>
				    <newfuncpos>280</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CHwrRecognizer</newfuncname>
				    <newfuncpos>281</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CPtiHwrRecognizer</newfuncname>
				    <newfuncpos>282</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CHwrRecognizer</newfuncname>
				    <newfuncpos>283</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CPtiHwrRecognizer</newfuncname>
				    <newfuncpos>284</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>non-virtual thunk to CHwrRecognizer::SetNumberMode(TAknEditorNumericKeymap)</newfuncname>
				    <newfuncpos>285</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>non-virtual thunk to CHwrRecognizer::GetDictVersion(TDes16&amp;)</newfuncname>
				    <newfuncpos>286</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>non-virtual thunk to CHwrRecognizer::SetCandidateNum(int)</newfuncname>
				    <newfuncpos>287</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>non-virtual thunk to CHwrRecognizer::GetEngineVersion(TDes16&amp;)</newfuncname>
				    <newfuncpos>288</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>non-virtual thunk to CHwrRecognizer::SetInputAreaSize(TSize&amp;)</newfuncname>
				    <newfuncpos>289</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>non-virtual thunk to CHwrRecognizer::AddAuxiliaryRange(TRecognitionRangeTag const&amp;)</newfuncname>
				    <newfuncpos>290</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>non-virtual thunk to CHwrRecognizer::RemoveAllAuxRange()</newfuncname>
				    <newfuncpos>291</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>non-virtual thunk to CHwrRecognizer::SetFirstLetterOrder(TLatinLetterOrder)</newfuncname>
				    <newfuncpos>292</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>non-virtual thunk to CHwrRecognizer::RemoveAuxiliaryRange(int)</newfuncname>
				    <newfuncpos>293</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>non-virtual thunk to CHwrRecognizer::EnableWordRecognition(int)</newfuncname>
				    <newfuncpos>294</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>non-virtual thunk to CHwrRecognizer::GetRange()</newfuncname>
				    <newfuncpos>295</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>non-virtual thunk to CHwrRecognizer::SetRange(TRecognitionRangeTag const&amp;)</newfuncname>
				    <newfuncpos>296</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>non-virtual thunk to CHwrRecognizer::Recognize(RArray&lt;TPoint&gt; const&amp;, RPointerArray&lt;HBufC16&gt;&amp;)</newfuncname>
				    <newfuncpos>297</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>non-virtual thunk to CHwrRecognizer::StrokeEndMark() const</newfuncname>
				    <newfuncpos>298</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>non-virtual thunk to CHwrRecognizer::GetCandidateNum() const</newfuncname>
				    <newfuncpos>299</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CPtiEngine::GetCandidatesByInputString(TDesC16 const&amp;, RPointerArray&lt;HBufC16&gt;&amp;, int)</newfuncname>
				    <newfuncpos>300</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CPtiEngineImpl::GetCandidatesByInputString(TDesC16 const&amp;, RPointerArray&lt;HBufC16&gt;&amp;, int)</newfuncname>
				    <newfuncpos>301</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CPtiCore::GetCandidatesByInputString(TDesC16 const&amp;, RPointerArray&lt;HBufC16&gt;&amp;, int)</newfuncname>
				    <newfuncpos>302</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>non-virtual thunk to CPtiCore::GetCandidatesByInputString(TDesC16 const&amp;, RPointerArray&lt;HBufC16&gt;&amp;, int)</newfuncname>
				    <newfuncpos>303</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>remconclient</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RRemConTarget::RegisterInterestedAPIs(int, TDesC8 const&amp;)</newfuncname>
				    <newfuncpos>28</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>remconcoreapi</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CRemConCoreApiTarget::SendResponse(TRequestStatus&amp;, TRemConCoreApiOperationId, int)</newfuncname>
				    <newfuncpos>144</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>scdv</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSoftwareGraphicsAccelerator::GenericCapabilities()</newfuncname>
				    <newfuncpos>44</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSoftwareGraphicsAccelerator::NewL(CFbsBitmap*)</newfuncname>
				    <newfuncpos>45</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>sdpdatabase</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>SdpUtil::GetUint(TDesC8 const&amp;)</newfuncname>
				    <newfuncpos>170</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>securesocket</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSecureSocket::NewL(MGenericSecureSocket&amp;, TDesC16 const&amp;)</newfuncname>
				    <newfuncpos>37</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>sendui</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSendUi::TechnologyType(TUid) const</newfuncname>
				    <newfuncpos>105</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>sipclient</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSIPRequestElements::CSeqHeader() const</newfuncname>
				    <newfuncpos>292</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>sipcodec</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSIPParameterHeaderBase::ParamCount() const</newfuncname>
				    <newfuncpos>891</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSIPParameterHeaderBase::Param(int, RStringF&amp;) const</newfuncname>
				    <newfuncpos>892</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>smcm</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSmsHeader::ContainsSmsHeaderL(CMsvStore const&amp;)</newfuncname>
				    <newfuncpos>287</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>sourcedopplereffect</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSourceDoppler::NewL(CMidiClientUtility&amp;)</newfuncname>
				    <newfuncpos>17</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>sourcelocationeffect</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSourceLocation::NewL(CMidiClientUtility&amp;)</newfuncname>
				    <newfuncpos>17</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>sourceorientationeffect</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSourceOrientation::NewL(CMidiClientUtility&amp;)</newfuncname>
				    <newfuncpos>17</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>spdctrl</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CSpdiaControl::CheckingIfPopUpNeeded()</newfuncname>
				    <newfuncpos>44</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>ssl</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CTlsConnection::UnloadDll(void*)</newfuncname>
				    <newfuncpos>2</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CTlsConnection::NewL(MGenericSecureSocket&amp;, TDesC16 const&amp;)</newfuncname>
				    <newfuncpos>3</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>stereowideningeffect</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CStereoWidening::NewL(CMidiClientUtility&amp;, int, signed char)</newfuncname>
				    <newfuncpos>23</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>stereowideningutility</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CStereoWideningUtility::NewL(CMidiClientUtility&amp;)</newfuncname>
				    <newfuncpos>26</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CTempStereoWidening::EnableL()</newfuncname>
				    <newfuncpos>27</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CTempStereoWidening::DisableL()</newfuncname>
				    <newfuncpos>28</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CTempStereoWidening::IsEnforced() const</newfuncname>
				    <newfuncpos>29</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CTempStereoWidening::IsEnabled() const</newfuncname>
				    <newfuncpos>30</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CTempStereoWidening::EnforceL(int)</newfuncname>
				    <newfuncpos>31</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CTempStereoWidening::HaveUpdateRights() const</newfuncname>
				    <newfuncpos>32</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>tzclient</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CVTzActualisedRules::NewL(int, int)</newfuncname>
				    <newfuncpos>174</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CVTzActualisedRules::Count() const</newfuncname>
				    <newfuncpos>175</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CVTzActualisedRules::EndYear() const</newfuncname>
				    <newfuncpos>176</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CVTzActualisedRules::StartYear() const</newfuncname>
				    <newfuncpos>177</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CVTzActualisedRules::operator[](int) const</newfuncname>
				    <newfuncpos>178</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RTz::SetUnknownZoneTimeL(TTime const&amp;, int)</newfuncname>
				    <newfuncpos>179</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>vcal</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CParserVCalEntity::MakePropertyValueExtendedAlarmL(TPtr16)</newfuncname>
				    <newfuncpos>121</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CParserVCalEntity::MakePropertyValueExtendedAlarmL(CBufSeg&amp;)</newfuncname>
				    <newfuncpos>122</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CVersitExtendedAlarm::NewL(TDesC8 const&amp;, TDesC8 const&amp;, CVersitExtendedAlarm::TDisposition)</newfuncname>
				    <newfuncpos>123</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CVersitExtendedAlarm::~CVersitExtendedAlarm()</newfuncname>
				    <newfuncpos>124</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CVersitExtendedAlarm::~CVersitExtendedAlarm()</newfuncname>
				    <newfuncpos>125</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CVersitExtendedAlarm::~CVersitExtendedAlarm()</newfuncname>
				    <newfuncpos>126</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CParserPropertyValueExtendedAlarm::ExternalizeL(RWriteStream&amp;, Versit::TEncodingAndCharset const&amp;, int)</newfuncname>
				    <newfuncpos>127</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CParserPropertyValueExtendedAlarm::ConvertAllDateTimesToUTCL(TTimeIntervalSeconds const&amp;, CVersitDaylight const*)</newfuncname>
				    <newfuncpos>128</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CParserPropertyValueExtendedAlarm::IsAsciiCharacterSetSufficient()</newfuncname>
				    <newfuncpos>129</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CParserPropertyValueExtendedAlarm::ConvertAllUTCDateTimesToMachineLocalL(TTimeIntervalSeconds const&amp;)</newfuncname>
				    <newfuncpos>130</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CParserPropertyValueExtendedAlarm::CParserPropertyValueExtendedAlarm(CVersitExtendedAlarm*)</newfuncname>
				    <newfuncpos>131</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CParserPropertyValueExtendedAlarm::CParserPropertyValueExtendedAlarm(CVersitExtendedAlarm*)</newfuncname>
				    <newfuncpos>132</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CParserPropertyValueExtendedAlarm::~CParserPropertyValueExtendedAlarm()</newfuncname>
				    <newfuncpos>133</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CParserPropertyValueExtendedAlarm::~CParserPropertyValueExtendedAlarm()</newfuncname>
				    <newfuncpos>134</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CParserPropertyValueExtendedAlarm::~CParserPropertyValueExtendedAlarm()</newfuncname>
				    <newfuncpos>135</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CParserVCalEntity::DecodeDisposition(TDesC8 const&amp;) const</newfuncname>
				    <newfuncpos>136</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CVersitExtendedAlarm</newfuncname>
				    <newfuncpos>137</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CParserPropertyValueExtendedAlarm</newfuncname>
				    <newfuncpos>138</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CVersitExtendedAlarm</newfuncname>
				    <newfuncpos>139</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CParserPropertyValueExtendedAlarm</newfuncname>
				    <newfuncpos>140</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>versit</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CVersitParser::FindRemainingField(TPtr16&amp;, TPtr16&amp;)</newfuncname>
				    <newfuncpos>292</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>viewcli</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CVwsSessionWrapper::EnableServerBlankScreen(int)</newfuncname>
				    <newfuncpos>36</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CVwsSessionWrapper::EnableExternalViewSwitches(int)</newfuncname>
				    <newfuncpos>37</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CVwsSessionWrapper::ActivateView(TVwsViewId const&amp;, TUid, TDesC8 const&amp;, TRequestStatus&amp;)</newfuncname>
				    <newfuncpos>38</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CVwsSessionWrapper::SetCrossCheckUid(TUid const&amp;)</newfuncname>
				    <newfuncpos>39</newfuncpos>
			</issue>
		</library>
		  <library>
			  <name>watcher</name>
			  <issue>
				    <typeid>4</typeid>
				    <funcname>typeinfo for CWatcherLauncherArray</funcname>
				    <funcpos>30</funcpos>
			    <status>OK</status>
        <comment>Class CWatcherLauncherArray is not part of the public SDK.</comment>
      </issue>
			  <issue>
				    <typeid>4</typeid>
				    <funcname>vtable for CWatcherLauncherArray</funcname>
				    <funcpos>32</funcpos>
			    <status>OK</status>
        <comment>Class CWatcherLauncherArray is not part of the public SDK.</comment>
      </issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CWatcherSSAStartupMgr</newfuncname>
				    <newfuncpos>33</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CWatcherSSAStartupMgr</newfuncname>
				    <newfuncpos>34</newfuncpos>
			</issue>
		  </library>
		  <library>
			  <name>ws32</name>
			  <issue>
				    <typeid>6</typeid>
				    <funcname>CWindowGc::Reserved_CWindowGc_1()</funcname>
				    <newfuncname>CWindowGc::DrawWsGraphic(TWsGraphicId const&amp;, TRect const&amp;)</newfuncname>
				    <funcpos>491</funcpos>
			    <status>OK</status>
        <comment>Reserved function replaced with real one, which is ok.</comment>
      </issue>
			  <issue>
				    <typeid>6</typeid>
				    <funcname>CWindowGc::Reserved_CWindowGc_2()</funcname>
				    <newfuncname>CWindowGc::DrawWsGraphic(TWsGraphicId const&amp;, TRect const&amp;, TDesC8 const&amp;)</newfuncname>
				    <funcpos>492</funcpos>
			    <status>OK</status>
        <comment>Reserved function replaced with real one, which is ok.</comment>
      </issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RWindow::SetTransparencyPolicy(TWsTransparencyPolicy)</newfuncname>
				    <newfuncpos>509</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RWindow::IsRedrawStoreEnabled()</newfuncname>
				    <newfuncpos>510</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CWsScreenDevice::SetBackLight(int)</newfuncname>
				    <newfuncpos>511</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RWindowGroup::SetOrdinalPositionErr(int, int)</newfuncname>
				    <newfuncpos>512</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CWsGraphic::UnShareGlobally()</newfuncname>
				    <newfuncpos>515</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CWsGraphic::CWsGraphic_Reserved1()</newfuncname>
				    <newfuncpos>516</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CWsGraphic::CWsGraphic_Reserved2()</newfuncname>
				    <newfuncpos>517</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CWsGraphic::CWsGraphic_Reserved3()</newfuncname>
				    <newfuncpos>518</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CWsGraphic::Share(TSecureId)</newfuncname>
				    <newfuncpos>519</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CWsGraphic::Destroy()</newfuncname>
				    <newfuncpos>520</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CWsGraphic::UnShare(TSecureId)</newfuncname>
				    <newfuncpos>521</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CWsGraphic::CWsGraphic()</newfuncname>
				    <newfuncpos>522</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CWsGraphic::~CWsGraphic()</newfuncname>
				    <newfuncpos>523</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CWsGraphic::~CWsGraphic()</newfuncname>
				    <newfuncpos>524</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CWsGraphic::~CWsGraphic()</newfuncname>
				    <newfuncpos>525</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TWsGraphicId::Set(TUid)</newfuncname>
				    <newfuncpos>526</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TWsGraphicId::Set(int)</newfuncname>
				    <newfuncpos>527</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TWsGraphicId::TWsGraphicId(TUid)</newfuncname>
				    <newfuncpos>528</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TWsGraphicId::TWsGraphicId(TWsGraphicId const&amp;)</newfuncname>
				    <newfuncpos>529</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TWsGraphicId::TWsGraphicId(int)</newfuncname>
				    <newfuncpos>530</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TWsGraphicId::TWsGraphicId(TUid)</newfuncname>
				    <newfuncpos>531</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TWsGraphicId::TWsGraphicId(TWsGraphicId const&amp;)</newfuncname>
				    <newfuncpos>532</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TWsGraphicId::TWsGraphicId(int)</newfuncname>
				    <newfuncpos>533</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RWsGraphicMsgBuf::Append(TUid, TDesC8 const&amp;)</newfuncname>
				    <newfuncpos>534</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RWsGraphicMsgBuf::Append(TUid, TDesC16 const&amp;)</newfuncname>
				    <newfuncpos>535</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RWsGraphicMsgBuf::Append(TUid, int, TPtr8&amp;)</newfuncname>
				    <newfuncpos>536</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RWsGraphicMsgBuf::Append(TWsGraphicMsgFixedBase const&amp;)</newfuncname>
				    <newfuncpos>537</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RWsGraphicMsgBuf::Remove(int)</newfuncname>
				    <newfuncpos>538</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RWsGraphicMsgBuf::RWsGraphicMsgBuf()</newfuncname>
				    <newfuncpos>539</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RWsGraphicMsgBuf::RWsGraphicMsgBuf()</newfuncname>
				    <newfuncpos>540</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TWsGraphicMsgFixedBase::TWsGraphicMsgFixedBase(TUid, int)</newfuncname>
				    <newfuncpos>541</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TWsGraphicMsgFixedBase::TWsGraphicMsgFixedBase(TUid, int)</newfuncname>
				    <newfuncpos>542</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CWsGraphic::SendMessage(TDesC8 const&amp;) const</newfuncname>
				    <newfuncpos>543</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CWsGraphic::Id() const</newfuncname>
				    <newfuncpos>544</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CWsGraphic::IsActive() const</newfuncname>
				    <newfuncpos>545</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TWsGraphicId::Id() const</newfuncname>
				    <newfuncpos>546</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TWsGraphicId::Uid() const</newfuncname>
				    <newfuncpos>547</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TWsGraphicId::IsId() const</newfuncname>
				    <newfuncpos>548</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TWsGraphicId::IsUid() const</newfuncname>
				    <newfuncpos>549</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TWsGraphicId::Compare(TWsGraphicId const&amp;) const</newfuncname>
				    <newfuncpos>550</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RWsGraphicMsgBuf::GetFixedMsg(TWsGraphicMsgFixedBase&amp;, int) const</newfuncname>
				    <newfuncpos>551</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RWsGraphicMsgBuf::Data(int) const</newfuncname>
				    <newfuncpos>552</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RWsGraphicMsgBuf::Pckg() const</newfuncname>
				    <newfuncpos>553</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RWsGraphicMsgBuf::Count() const</newfuncname>
				    <newfuncpos>554</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RWsGraphicMsgBuf::TypeId(int) const</newfuncname>
				    <newfuncpos>555</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TWsGraphicMsgFixedBase::Pckg() const</newfuncname>
				    <newfuncpos>556</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TWsGraphicMsgFixedBase::Size() const</newfuncname>
				    <newfuncpos>557</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>TWsGraphicMsgFixedBase::TypeId() const</newfuncname>
				    <newfuncpos>558</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>typeinfo for CWsGraphic</newfuncname>
				    <newfuncpos>559</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>vtable for CWsGraphic</newfuncname>
				    <newfuncpos>560</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RWsGraphicMsgBuf::Data(int)</newfuncname>
				    <newfuncpos>561</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CWsGraphic::OnClientClose()</newfuncname>
				    <newfuncpos>562</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CWsGraphic::ShareGlobally()</newfuncname>
				    <newfuncpos>563</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CWsGraphic::Flush() const</newfuncname>
				    <newfuncpos>564</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CWsGraphic::BaseConstructL(TUid, TDesC8 const&amp;)</newfuncname>
				    <newfuncpos>574</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RWsSession::SetMaxBufferSizeL(int)</newfuncname>
				    <newfuncpos>575</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>RWindow::EnableOSB(int)</newfuncname>
				    <newfuncpos>576</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CWsGraphic::BaseConstructL(TUid, TUid, TDesC8 const&amp;)</newfuncname>
				    <newfuncpos>577</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>CWsGraphic::BaseConstructL(TWsGraphicId const&amp;, TUid, TDesC8 const&amp;)</newfuncname>
				    <newfuncpos>578</newfuncpos>
			</issue>
		  </library>
		  <library>
			  <name>xmlframework</name>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>Xml::CMatchData::SetRomOnly(int)</newfuncname>
				    <newfuncpos>69</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>Xml::CMatchData::SetVariantL(TDesC8 const&amp;)</newfuncname>
				    <newfuncpos>70</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>Xml::CMatchData::SetMimeTypeL(TDesC8 const&amp;)</newfuncname>
				    <newfuncpos>71</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>Xml::CMatchData::SetLeaveOnMany(int)</newfuncname>
				    <newfuncpos>72</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>Xml::CMatchData::SetCaseSensitivity(int)</newfuncname>
				    <newfuncpos>73</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>Xml::CMatchData::NewL(TDesC8 const&amp;)</newfuncname>
				    <newfuncpos>74</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>Xml::CMatchData::NewL()</newfuncname>
				    <newfuncpos>75</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>Xml::CMatchData::NewLC(TDesC8 const&amp;)</newfuncname>
				    <newfuncpos>76</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>Xml::CMatchData::NewLC()</newfuncname>
				    <newfuncpos>77</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>Xml::CParser::ParseBeginL(Xml::CMatchData const&amp;)</newfuncname>
				    <newfuncpos>78</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>Xml::CParser::NewL(Xml::CMatchData const&amp;, Xml::MContentHandler&amp;)</newfuncname>
				    <newfuncpos>79</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>Xml::CParser::NewLC(Xml::CMatchData const&amp;, Xml::MContentHandler&amp;)</newfuncname>
				    <newfuncpos>80</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>Xml::CMatchData::Variant() const</newfuncname>
				    <newfuncpos>81</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>Xml::CMatchData::MimeType() const</newfuncname>
				    <newfuncpos>82</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>Xml::CMatchData::ResolveL(RArray&lt;CImplementationInformation*&gt;&amp;) const</newfuncname>
				    <newfuncpos>83</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>Xml::CCharSetConverter::ConvertToUnicodeL(unsigned long, TDesC8 const&amp;, TPtr16&amp;)</newfuncname>
				    <newfuncpos>84</newfuncpos>
			</issue>
			  <issue>
				    <typeid>7</typeid>
				    <newfuncname>Xml::CCharSetConverter::ConvertFromUnicodeL(TDesC16 const&amp;, unsigned long, TPtr8&amp;)</newfuncname>
				    <newfuncpos>85</newfuncpos>
			</issue>
		</library>
	</issuelist>

</bbcresults>
