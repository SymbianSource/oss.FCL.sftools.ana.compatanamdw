<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type="text/xsl" href="BBCResults.xsl"?>
<bbcresults>
	<header>
		<baselineversion>Baseline platform</baselineversion>
		<currentversion>Product platform</currentversion>
		<timestamp>
			<day>20</day>
			<month>7</month>
			<year>2009</year>
			<hour>14</hour>
			<minute>36</minute>
			<second>36</second>
		</timestamp>
		<laversion>3.3.0</laversion>
		<formatversion>1.1</formatversion>
		<cmdlineparms>
			<parm>
				<pname>toolchain</pname>
				<pvalue>GCC</pvalue>
			</parm>
			<parm>
				<pname>baselinelibdir</pname>
				<pvalue>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib</pvalue>
			</parm>
			<parm>
				<pname>currentlibdir</pname>
				<pvalue>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib</pvalue>
			</parm>
			<parm>
				<pname>baselinedlldir</pname>
				<pvalue></pvalue>
			</parm>
			<parm>
				<pname>currentdlldir</pname>
				<pvalue></pvalue>
			</parm>
			<parm>
				<pname>warning</pname>
				<pvalue>Required parameters for checking dll properties not specified. Compatibility Breaks in dll are not checked.</pvalue>
			</parm>
			<parm>
				<pname>baselineversion</pname>
				<pvalue>Baseline platform</pvalue>
			</parm>
			<parm>
				<pname>currentversion</pname>
				<pvalue>Product platform</pvalue>
			</parm>
			<parm>
				<pname>reportfile</pname>
				<pvalue>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\results\results.xml</pvalue>
			</parm>
			<parm>
				<pname>tools</pname>
				<pvalue>..\tsrc\bin\</pvalue>
			</parm>
			<parm>
				<pname>temp</pname>
				<pvalue>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\bin\temp\</pvalue>
			</parm>
			<parm>
				<pname>cfilt</pname>
				<pvalue></pvalue>
			</parm>
			<parm>
				<pname>set</pname>
				<pvalue>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\scripts\config.txt</pvalue>
			</parm>
		</cmdlineparms>
		<knownissuesversion></knownissuesversion>
	</header>
	<issuelist>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\agentdialog.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\agentdialog.lib</comparefilename>
			<shortname>agentdialog</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>4</typeid>
				<funcname>RGenConAgentDialogServer::CancelIspConnection(void)</funcname>
				<funcpos>5</funcpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>5</typeid>
				<newfuncname>RGenConAgentDialogServer::CancelModemAndLocationSelection(void)</newfuncname>
				<newfuncpos>6</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>RGenConAgentDialogServer::CancelLogin(void)</funcname>
				<funcpos>6</funcpos>
				<newfuncpos>5</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>5</typeid>
				<newfuncname>RGenConAgentDialogServer::CancelQoSWarning(void)</newfuncname>
				<newfuncpos>7</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>RGenConAgentDialogServer::CancelReadPct(void)</funcname>
				<funcpos>7</funcpos>
				<newfuncpos>8</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>RGenConAgentDialogServer::CancelReconnect(void)</funcname>
				<funcpos>8</funcpos>
				<newfuncpos>9</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>RGenConAgentDialogServer::CancelWarnNewIapConnection(void)</funcname>
				<funcpos>9</funcpos>
				<newfuncpos>10</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>4</typeid>
				<funcname>RGenConAgentDialogServer::CancelWarnNewIspConnection(void)</funcname>
				<funcpos>10</funcpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>RGenConAgentDialogServer::Connect(void)</funcname>
				<funcpos>12</funcpos>
				<newfuncpos>13</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>RGenConAgentDialogServer::DestroyPctNotification(TRequestStatus &amp;)</funcname>
				<funcpos>13</funcpos>
				<newfuncpos>14</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>RGenConAgentDialogServer::IapConnection(unsigned long &amp;, TConnectionPrefs const &amp;, TRequestStatus &amp;)</funcname>
				<funcpos>14</funcpos>
				<newfuncpos>15</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>4</typeid>
				<funcname>RGenConAgentDialogServer::IspConnection(TIspConnectionIds &amp;, TConnectionPrefs const &amp;, TRequestStatus &amp;)</funcname>
				<funcpos>15</funcpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>RGenConAgentDialogServer::Login(TDes16 &amp;, TDes16 &amp;, int, TRequestStatus &amp;)</funcname>
				<funcpos>16</funcpos>
				<newfuncpos>17</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>RGenConAgentDialogServer::OpenPct(void)</funcname>
				<funcpos>17</funcpos>
				<newfuncpos>19</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>5</typeid>
				<newfuncname>RGenConAgentDialogServer::ModemAndLocationSelection(unsigned long &amp;, unsigned long &amp;, TRequestStatus &amp;)</newfuncname>
				<newfuncpos>18</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>RGenConAgentDialogServer::ReadPct(TDes16 &amp;, TRequestStatus &amp;)</funcname>
				<funcpos>18</funcpos>
				<newfuncpos>21</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>RGenConAgentDialogServer::Reconnect(int &amp;, TRequestStatus &amp;)</funcname>
				<funcpos>19</funcpos>
				<newfuncpos>22</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>5</typeid>
				<newfuncname>RGenConAgentDialogServer::QoSWarning(int &amp;, TRequestStatus &amp;)</newfuncname>
				<newfuncpos>20</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>StartDialogThread(void)</funcname>
				<funcpos>20</funcpos>
				<newfuncpos>23</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>RGenConAgentDialogServer::Version(void) const</funcname>
				<funcpos>21</funcpos>
				<newfuncpos>24</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>RGenConAgentDialogServer::WarnNewIapConnection(TConnectionPrefs const &amp;, int, TDesC16 const &amp;, int &amp;, TRequestStatus &amp;)</funcname>
				<funcpos>22</funcpos>
				<newfuncpos>25</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>4</typeid>
				<funcname>RGenConAgentDialogServer::WarnNewIspConnection(TConnectionPrefs const &amp;, int, TIspConnectionNames const &amp;, int &amp;, TRequestStatus &amp;)</funcname>
				<funcpos>23</funcpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>RGenConAgentDialogServer::WritePct(TDesC16 const &amp;)</funcname>
				<funcpos>24</funcpos>
				<newfuncpos>26</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>RGenConAgentDialogServer::~RGenConAgentDialogServer(void)</funcname>
				<funcpos>25</funcpos>
				<newfuncpos>27</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>RGenConAgentDialogServer::Authenticate(TDes16 &amp;, TDes16 &amp;, int, TRequestStatus &amp;)</funcname>
				<funcpos>26</funcpos>
				<newfuncpos>28</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>RGenConAgentDialogServer::IapConnection(unsigned long &amp;, TConnectionPrefs const &amp;, int, TRequestStatus &amp;)</funcname>
				<funcpos>27</funcpos>
				<newfuncpos>16</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>4</typeid>
				<funcname>RGenConAgentDialogServer::IspConnection(TIspConnectionIds &amp;, TConnectionPrefs const &amp;, int, TRequestStatus &amp;)</funcname>
				<funcpos>28</funcpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>RGenConAgentDialogServer::Close(void)</funcname>
				<funcpos>29</funcpos>
				<newfuncpos>12</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\agnmodel.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\agnmodel.lib</comparefilename>
			<shortname>agnmodel</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>6</typeid>
				<funcname>CAgnAlarm::NewL(CAgnModel *, MAgnAlarmServerTerminationCallBack *)</funcname>
				<newfuncname>CAgnAlarm::NewL(CAgnEntryModel *, MAgnAlarmServerTerminationCallBack *)</newfuncname>
				<funcpos>364</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CAgnAlarm::SetModel(CAgnModel *)</funcname>
				<newfuncname>CAgnAlarm::SetModel(CAgnEntryModel *)</newfuncname>
				<funcpos>525</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgnEntry::EventPriority(void) const</newfuncname>
				<newfuncpos>708</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgnEntry::NotesTextL(void) const</newfuncname>
				<newfuncpos>709</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgnEntry::SetEventPriority(unsigned int)</newfuncname>
				<newfuncpos>710</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgnEntry::SetNotesTextL(HBufC16 *)</newfuncname>
				<newfuncpos>711</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgnBasicEntry::SetStatus(CAgnBasicEntry::TAgnStatus)</newfuncname>
				<newfuncpos>712</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgnBasicEntry::Status(void) const</newfuncname>
				<newfuncpos>713</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgnEntryModel::ExportVCalL(int, RWriteStream &amp;, CAgnEntry *, Versit::TVersitCharSet)</newfuncname>
				<newfuncpos>714</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgnEntryModel::ExportVCalL(int, RWriteStream &amp;, CArrayFixFlat&lt;TAgnEntryId&gt; *, Versit::TVersitCharSet)</newfuncname>
				<newfuncpos>715</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgnEntryModel::ImportVCalL(int, RReadStream &amp;, CArrayPtr&lt;CAgnEntry&gt; *)</newfuncname>
				<newfuncpos>716</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgnExceptionList::ExternalizeL(RWriteStream &amp;) const</newfuncname>
				<newfuncpos>717</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgnExceptionList::InternalizeL(RReadStream &amp;)</newfuncname>
				<newfuncpos>718</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgnExceptionList::CAgnExceptionList(void)</newfuncname>
				<newfuncpos>719</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgnEntryModel::AddCategoryToListL(TDesC16 const &amp;)</newfuncname>
				<newfuncpos>720</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgnEntryModel::CategoryCountL(void) const</newfuncname>
				<newfuncpos>721</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgnEntryModel::CategoryL(int) const</newfuncname>
				<newfuncpos>722</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgnEntryModel::DeleteCategoryL(CAgnCategory const &amp;, MAgnProgressCallBack *, CAgnEntryModel::TCategoryStepSize)</newfuncname>
				<newfuncpos>723</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgnEntryModel::RenameCategoryL(CAgnCategory const &amp;, TDesC16 const &amp;, MAgnProgressCallBack *, CAgnEntryModel::TCategoryStepSize)</newfuncname>
				<newfuncpos>724</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgnEntryModel::FilterCategoryL(CAgnCategory const &amp;, CArrayFixSeg&lt;TAgnEntryId&gt; &amp;, MAgnProgressCallBack *, CAgnEntryModel::TCategoryStepSize)</newfuncname>
				<newfuncpos>725</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>MAgnVersit::MAgnVersit_Reserved1(void)</newfuncname>
				<newfuncpos>726</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>TAgnFilter::SetFoldedOrExactText(int, int)</newfuncname>
				<newfuncpos>727</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>TAgnReplicationData::SetLastChangedDate(TTime const &amp;)</newfuncname>
				<newfuncpos>728</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>TAgnWeeklyRpt::FindRptRuleEndDate(unsigned int) const</newfuncname>
				<newfuncpos>729</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>TAgnMonthlyByDaysRpt::FindRptRuleEndDate(unsigned int) const</newfuncname>
				<newfuncpos>730</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>TAgnMonthlyByDatesRpt::FindRptRuleEndDate(unsigned int) const</newfuncname>
				<newfuncpos>731</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\aknlayout.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\aknlayout.lib</comparefilename>
			<shortname>aknlayout</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>6</typeid>
				<funcname>TAknMultiLineTextLayout::TAknMultiLineTextLayout(int, int, int, int, int, int, int, int, int)</funcname>
				<newfuncname>TAknMultiLineTextLayout::TAknMultiLineTextLayout(int, int, int, int, int, int, int, int, int, int, int, int)</newfuncname>
				<funcpos>1</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>TAknTextLineLayout::TAknTextLineLayout(int, TRect const &amp;, int, int, int, int, int, int, int)</funcname>
				<newfuncname>TAknTextLineLayout::TAknTextLineLayout(int, TRect const &amp;, int, int, int, int, int, int, int, int)</newfuncname>
				<funcpos>6</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>TAknTextLineLayout::TAknTextLineLayout(int, int, int, int, int, int, int, int)</funcname>
				<newfuncname>TAknTextLineLayout::TAknTextLineLayout(int, int, int, int, int, int, int, int, int)</newfuncname>
				<funcpos>9</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>TAknWindowLineLayout::TAknWindowLineLayout(int, TRect const &amp;, int, int, int, int, int, int, int)</funcname>
				<newfuncname>TAknWindowLineLayout::TAknWindowLineLayout(int, TRect const &amp;, int, int, int, int, int, int, int, int)</newfuncname>
				<funcpos>12</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>TAknWindowLineLayout::TAknWindowLineLayout(int, int, int, int, int, int, int, int)</funcname>
				<newfuncname>TAknWindowLineLayout::TAknWindowLineLayout(int, int, int, int, int, int, int, int, int)</newfuncname>
				<funcpos>15</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>TAknMultiLineTextLayout::TAknMultiLineTextLayout(int, TRect const &amp;, int, int, int, int, int, int, int, int)</funcname>
				<newfuncname>TAknMultiLineTextLayout::TAknMultiLineTextLayout(int, TRect const &amp;, int, int, int, int, int, int, int, int, int)</newfuncname>
				<funcpos>16</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>5</typeid>
				<newfuncname>TAknMultiLineTextLayout::TAknMultiLineTextLayout(int, int, int, TRect const &amp;, int, int, int, int, int, int, int, int, int)</newfuncname>
				<newfuncpos>17</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>TAknTextLineLayout::BaselineSkip(void) const</funcname>
				<funcpos>17</funcpos>
				<newfuncpos>19</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>TAknMultiLineTextLayout::TAknMultiLineTextLayout(int, int, int, int, int, int, int, int, int, int, int)</funcname>
				<newfuncname>TAknMultiLineTextLayout::TAknMultiLineTextLayout(int, int, int, int, int, int, int, int, int, int)</newfuncname>
				<funcpos>18</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>4</typeid>
				<funcname>TAknTextLineLayout::TAknTextLineLayout(int, int, int, TRect const &amp;, int, int, int, int, int, int, int)</funcname>
				<funcpos>19</funcpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>TAknTextLineLayout::TAknTextLineLayout(int, int, int, int, int, int, int, int, int, int)</funcname>
				<newfuncname>TAknTextLineLayout::TAknTextLineLayout(int, int, int, int, int, int, int, int, int, int, int)</newfuncname>
				<funcpos>20</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>TAknWindowLineLayout::TAknWindowLineLayout(int, int, int, TRect const &amp;, int, int, int, int, int, int, int)</funcname>
				<newfuncname>TAknWindowLineLayout::TAknWindowLineLayout(int, int, int, TRect const &amp;, int, int, int, int, int, int, int, int)</newfuncname>
				<funcpos>21</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>TAknWindowLineLayout::TAknWindowLineLayout(int, int, int, int, int, int, int, int, int, int)</funcname>
				<newfuncname>TAknWindowLineLayout::TAknWindowLineLayout(int, int, int, int, int, int, int, int, int, int, int)</newfuncname>
				<funcpos>22</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>TAknMultiLineTextLayout::TAknMultiLineTextLayout(int, int, int, TRect const &amp;, int, int, int, int, int, int, int, int)</funcname>
				<newfuncname>TAknTextLineLayout::TAknTextLineLayout(int, int, int, TRect const &amp;, int, int, int, int, int, int, int, int)</newfuncname>
				<funcpos>23</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\amrdll.lib</name>
			<comparefilename></comparefilename>
			<shortname>amrdll</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>1</typeid>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\apengine.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\apengine.lib</comparefilename>
			<shortname>apengine</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CApNetworks::AllListItemDataL(CApNetworkItemList &amp;)</newfuncname>
				<newfuncpos>122</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CApNetworks::ConstructL(CCommsDatabase &amp;)</newfuncname>
				<newfuncpos>123</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CApNetworkItem::ConstructL(void)</newfuncname>
				<newfuncpos>124</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CApNetworkItem::ConstructL(unsigned long, TDesC16 const &amp;)</newfuncname>
				<newfuncpos>125</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CApNetworkItem::CopyFromL(CApNetworkItem const &amp;)</newfuncname>
				<newfuncpos>126</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CApNetworks::Count(void) const</newfuncname>
				<newfuncpos>127</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CApDataHandler::CreateNetworkL(CApNetworkItem &amp;)</newfuncname>
				<newfuncpos>128</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CApNetworkItemList::ItemForUid(unsigned long) const</newfuncname>
				<newfuncpos>129</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CApNetworks::NameL(unsigned long) const</newfuncname>
				<newfuncpos>130</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CApNetworkItem::Name(void) const</newfuncname>
				<newfuncpos>131</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CApNetworks::NewLC(CCommsDatabase &amp;)</newfuncname>
				<newfuncpos>132</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CApNetworkItem::NewLC(void)</newfuncname>
				<newfuncpos>133</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CApNetworkItem::NewLC(CApNetworkItem *)</newfuncname>
				<newfuncpos>134</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CApDataHandler::ReadNetworkL(unsigned long, CApNetworkItem &amp;)</newfuncname>
				<newfuncpos>135</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CApDataHandler::ReadNetworkPartL(CApAccessPointItem &amp;)</newfuncname>
				<newfuncpos>136</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CApDataHandler::RemoveNetworkL(unsigned long)</newfuncname>
				<newfuncpos>137</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CApNetworkItem::SetNameL(TDesC16 const &amp;)</newfuncname>
				<newfuncpos>138</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CApNetworkItem::SetUid(unsigned long)</newfuncname>
				<newfuncpos>139</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CApNetworkItem::Uid(void) const</newfuncname>
				<newfuncpos>140</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CApNetworks::~CApNetworks(void)</newfuncname>
				<newfuncpos>141</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CApNetworkItem::~CApNetworkItem(void)</newfuncname>
				<newfuncpos>142</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CApNetworkItemList::~CApNetworkItemList(void)</newfuncname>
				<newfuncpos>143</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CApNetworks::CApNetworks(void)</newfuncname>
				<newfuncpos>144</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CApNetworkItem::CApNetworkItem(void)</newfuncname>
				<newfuncpos>145</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CApNetworkItemList::CApNetworkItemList(void)</newfuncname>
				<newfuncpos>146</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\apgrfx.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\apgrfx.lib</comparefilename>
			<shortname>apgrfx</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>6</typeid>
				<funcname>CApaAppList::Purge(void)</funcname>
				<newfuncname>CApaAppList::PurgeL(void)</newfuncname>
				<funcpos>71</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CApaAppList::InitListL(MApaAppListObserver *)</newfuncname>
				<newfuncpos>184</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CApaAppInfoFileReader::NumberOfBitmaps(void) const</newfuncname>
				<newfuncpos>185</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CApaAppList::IsFirstScanComplete(void) const</newfuncname>
				<newfuncpos>186</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CApaMaskedBitmap::SetMaskBitmap(CFbsBitmap *)</newfuncname>
				<newfuncpos>187</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\apmime.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\apmime.lib</comparefilename>
			<shortname>apmime</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>6</typeid>
				<funcname>CApaDataRecognizer::PreferredBufSize(void)</funcname>
				<newfuncname>CApaDataRecognizer::PreferredBufSize(void) const</newfuncname>
				<funcpos>12</funcpos>
				<bc_severity>None</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CApaScanningDataRecognizer::SetRecognizersFromList(CArrayFixFlat&lt;CApaScanningDataRecognizer::TRecognizer&gt; const &amp;)</funcname>
				<newfuncname>CApaScanningDataRecognizer::SetRecognizersFromListL(CArrayFixFlat&lt;CApaScanningDataRecognizer::TRecognizer&gt; const &amp;)</newfuncname>
				<funcpos>23</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CApaDataRecognizer::AddDataRecognizerType(CApaDataRecognizerType *)</funcname>
				<newfuncname>CApaDataRecognizer::AddDataRecognizerTypeL(CApaDataRecognizerType *)</newfuncname>
				<funcpos>38</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CApaDataRecognizer::AcceptedConfidence(void)</funcname>
				<newfuncname>CApaDataRecognizer::AcceptedConfidence(void) const</newfuncname>
				<funcpos>42</funcpos>
				<bc_severity>None</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\bioutil.lib</name>
			<comparefilename></comparefilename>
			<shortname>bioutil</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>1</typeid>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\biowatcher.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\biowatcher.lib</comparefilename>
			<shortname>biowatcher</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>6</typeid>
				<funcname>CBaseSmsActiveSocketWatcher::CBaseSmsActiveSocketWatcher(CWatcherLog &amp;, int, TUid)</funcname>
				<newfuncname>CBaseSmsActiveSocketWatcher::CBaseSmsActiveSocketWatcher(CWatcherLog &amp;, int, TUid, RFs &amp;)</newfuncname>
				<funcpos>1</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\browsertelservice.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\browsertelservice.lib</comparefilename>
			<shortname>browsertelservice</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>5</typeid>
				<newfuncname>CBrowserTelService::SendEmailMessageL(TDesC16 const &amp;, TDesC16 const &amp;, TDesC16 const &amp;, TDesC16 const &amp;, int)</newfuncname>
				<newfuncpos>15</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CBrowserTelService::SendEmailMessageL(TDesC16 const &amp;, TDesC16 const &amp;, TDesC16 const &amp;, TDesC16 const &amp;)</funcname>
				<funcpos>15</funcpos>
				<newfuncpos>19</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\bt.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\bt.lib</comparefilename>
			<shortname>bt</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CBlogger::GetFloggerInfo(void)</newfuncname>
				<newfuncpos>2</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\btcmtm.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\btcmtm.lib</comparefilename>
			<shortname>btcmtm</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>6</typeid>
				<funcname>CBtSendOperation::DoCancel(void)</funcname>
				<newfuncname>CBtHeader::Addr(void) const</newfuncname>
				<funcpos>2</funcpos>
				<bc_severity>None</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CBtHeader::BtProtocolInfo(void) const</newfuncname>
				<newfuncpos>3</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CBtHeader::NewL(void)</newfuncname>
				<newfuncpos>4</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CBtHeader::SetAddrL(TDesC8 const &amp;)</newfuncname>
				<newfuncpos>5</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\btmanclient.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\btmanclient.lib</comparefilename>
			<shortname>btmanclient</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>7</typeid>
				<newfuncname>RBTSecManBasebandParameters::Close(void)</newfuncname>
				<newfuncpos>71</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>RBTSecManBasebandParameters::DeviceRequest(TBTDevAddr *, TPckgBuf&lt;TBTDevicesV1&gt; &amp;, TRequestStatus &amp;)</newfuncname>
				<newfuncpos>72</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>TBTBasebandParameters::ExternalizeL(RWriteStream &amp;) const</newfuncname>
				<newfuncpos>73</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>TBTBasebandParameters::InternalizeL(RReadStream &amp;)</newfuncname>
				<newfuncpos>74</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>RBTSecManBasebandParameters::ModifyDevice(TBTBasebandParameters const &amp;, TRequestStatus &amp;)</newfuncname>
				<newfuncpos>75</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>RBTSecManBasebandParameters::Open(RBTMan &amp;)</newfuncname>
				<newfuncpos>76</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>RBTSecManBasebandParameters::RegisterNotification(TPckgBuf&lt;TBTHostResolverNotification&gt; &amp;, TRequestStatus &amp;)</newfuncname>
				<newfuncpos>77</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>TBTBasebandParameters::SizeOffJuice(void)</newfuncname>
				<newfuncpos>78</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>RBTSecManBasebandParameters::GetNextDeviceRequest(int &amp;, TPckgBuf&lt;TBTDevicesV1&gt; &amp;, TRequestStatus &amp;)</newfuncname>
				<newfuncpos>79</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\btnotif.lib</name>
			<comparefilename></comparefilename>
			<shortname>btnotif</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>1</typeid>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\bubblemanager.lib</name>
			<comparefilename></comparefilename>
			<shortname>bubblemanager</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>1</typeid>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\capcodec.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\capcodec.lib</comparefilename>
			<shortname>capcodec</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAP_EncodeWithOverrideBit</newfuncname>
				<newfuncpos>53</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\cbsclient.lib</name>
			<comparefilename></comparefilename>
			<shortname>cbsclient</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>1</typeid>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\ccon.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\ccon.lib</comparefilename>
			<shortname>ccon</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>6</typeid>
				<funcname>TCalendar::operator=(TCalendar const &amp;)</funcname>
				<newfuncname>CChineseCalendarConverter::NewL(void)</newfuncname>
				<funcpos>1</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>4</typeid>
				<funcname>TChineseCalendar::DateTimeToChinese(TDateTime const &amp;)</funcname>
				<funcpos>2</funcpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>4</typeid>
				<funcname>TGregorianCalendar::DateTimeToGregorian(TDateTime &amp;)</funcname>
				<funcpos>3</funcpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>4</typeid>
				<funcname>TChineseCalendar::GetDate(TChineseDate &amp;)</funcname>
				<funcpos>4</funcpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>4</typeid>
				<funcname>TGregorianCalendar::GetDate(TArithmeticalDate &amp;)</funcname>
				<funcpos>5</funcpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>4</typeid>
				<funcname>TGregorianCalendar::GregorianToDateTime(TDateTime &amp;)</funcname>
				<funcpos>6</funcpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>4</typeid>
				<funcname>TChineseCalendar::SetDate(TChineseDate const &amp;)</funcname>
				<funcpos>7</funcpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>4</typeid>
				<funcname>TGregorianCalendar::SetDate(TArithmeticalDate &amp;)</funcname>
				<funcpos>8</funcpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>TChineseDate::TChineseDate(void)</funcname>
				<funcpos>9</funcpos>
				<newfuncpos>2</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>4</typeid>
				<funcname>TChineseCalendar::TChineseCalendar(void)</funcname>
				<funcpos>10</funcpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>4</typeid>
				<funcname>TArithmeticalDate::TArithmeticalDate(void)</funcname>
				<funcpos>11</funcpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>4</typeid>
				<funcname>TGregorianCalendar::TGregorianCalendar(void)</funcname>
				<funcpos>12</funcpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>4</typeid>
				<funcname>TGregorianCalendar::TGregorianCalendar(double)</funcname>
				<funcpos>13</funcpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>4</typeid>
				<funcname>TChineseCalendar::ChineseToDateTime(TDateTime &amp;)</funcname>
				<funcpos>14</funcpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>4</typeid>
				<funcname>TArithmeticalDate::operator==(TArithmeticalDate const &amp;) const</funcname>
				<funcpos>15</funcpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>TChineseDate::operator==(TChineseDate const &amp;) const</funcname>
				<funcpos>16</funcpos>
				<newfuncpos>3</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\certutils.lib</name>
			<comparefilename></comparefilename>
			<shortname>certutils</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>1</typeid>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\clknitzmdl.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\clknitzmdl.lib</comparefilename>
			<shortname>clknitzmdl</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>6</typeid>
				<funcname>RClkNitzMdlServer::GetCurrentNITZInfo(MAdvGsmPhoneNitz::TNITZInfo &amp;)</funcname>
				<newfuncname>RClkNitzMdlServer::GetCurrentNITZInfo(RMobilePhone::TMobilePhoneNITZ &amp;)</newfuncname>
				<funcpos>3</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\clog.lib</name>
			<comparefilename></comparefilename>
			<shortname>clog</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>1</typeid>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\cman.lib</name>
			<comparefilename></comparefilename>
			<shortname>cman</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>1</typeid>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\cntmodel.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\cntmodel.lib</comparefilename>
			<shortname>cntmodel</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>6</typeid>
				<funcname>CContactDatabase::SetCntServerHeapFailure(RHeap::TAllocFail, int)</funcname>
				<newfuncname>CContactDatabase::SetCntServerHeapFailure(int, int)</newfuncname>
				<funcpos>221</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>5</typeid>
				<newfuncname>CContactViewBase::CContactViewBase_Reserved_1(CContactViewBase::TFunction, void *)</newfuncname>
				<newfuncpos>355</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CContactViewBase::GetContactIdsL(CArrayFix&lt;int&gt; const &amp;, CContactIdArray &amp;)</funcname>
				<funcpos>355</funcpos>
				<newfuncpos>424</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CContactDatabase::ICCTemplateIdL(void)</newfuncname>
				<newfuncpos>411</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>MContactSynchroniser::MContactSynchroniser_Reserved_1(void)</newfuncname>
				<newfuncpos>412</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CContactICCEntry::NewL(CContactItem const &amp;)</newfuncname>
				<newfuncpos>413</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CContactICCEntry::~CContactICCEntry(void)</newfuncname>
				<newfuncpos>414</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CContactDatabase::WastedSpaceInBytes(void) const</newfuncname>
				<newfuncpos>415</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CContactDatabase::UnfiledContactsL(void)</newfuncname>
				<newfuncpos>416</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CContactViewBase::MatchesCriteriaL(CViewContact const &amp;, MDesC16Array const &amp;, CContactViewBase::TSearchType)</newfuncname>
				<newfuncpos>417</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CContactDatabase::PhonebookGroupIdL(void)</newfuncname>
				<newfuncpos>418</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CContactViewBase::GetViewFindConfigPlugin(void)</newfuncname>
				<newfuncpos>419</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CContactViewBase::SetViewFindConfigPlugin(TUid)</newfuncname>
				<newfuncpos>420</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CContactViewBase::MatchesCriteriaL(CViewContact const &amp;, MDesC16Array const &amp;, CContactViewBase::TSearchType, CContactViewBase::CContactViewBaseExtension *)</newfuncname>
				<newfuncpos>421</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CContactDatabase::ICCTemplateIdL(TUid)</newfuncname>
				<newfuncpos>422</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CContactDatabase::RecreateSystemTemplateL(TDesC16 const &amp;)</newfuncname>
				<newfuncpos>423</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CContactLocalView::CContactViewBase_Reserved_1(CContactViewBase::TFunction, void *)</newfuncname>
				<newfuncpos>425</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CContactViewBase::Error(void) const</newfuncname>
				<newfuncpos>426</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CViewContact::ContactMatchesFilter(int) const</newfuncname>
				<newfuncpos>427</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CViewContact::NewLC(long)</newfuncname>
				<newfuncpos>428</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CViewContact::AddFieldL(TDesC16 const &amp;)</newfuncname>
				<newfuncpos>429</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\cntview.lib</name>
			<comparefilename></comparefilename>
			<shortname>cntview</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>1</typeid>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\codeng.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\codeng.lib</comparefilename>
			<shortname>codeng</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCodEngBase::SetPreferredIap(unsigned long)</newfuncname>
				<newfuncpos>33</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCodEngBase::Cvt(void)</newfuncname>
				<newfuncpos>34</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\conarc.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\conarc.lib</comparefilename>
			<shortname>conarc</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>6</typeid>
				<funcname>CCnaConverterList::Count(void)</funcname>
				<newfuncname>CCnaConverterList::CountL(void)</newfuncname>
				<funcpos>23</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CConverterBase::Reserved_1(void)</funcname>
				<newfuncname>CConverterBase::ExtendedInterfaceL(TUid, CBase *&amp;)</newfuncname>
				<funcpos>84</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCnaConvInfoFileReader::~CCnaConvInfoFileReader(void)</newfuncname>
				<newfuncpos>85</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\cone.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\cone.lib</comparefilename>
			<shortname>cone</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>6</typeid>
				<funcname>MCoeView::MCoeView_Reserved_1(void)</funcname>
				<newfuncname>MCoeView::ViewScreenModeCompatible(int)</newfuncname>
				<funcpos>137</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CCoeAppUiBase::Reserved_1(void)</funcname>
				<newfuncname>CCoeAppUiBase::HandleScreenDeviceChangedL(void)</newfuncname>
				<funcpos>174</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CCoeAppUi::Reserved_1(void)</funcname>
				<newfuncname>CCoeAppUi::HandleScreenDeviceChangedL(void)</newfuncname>
				<funcpos>176</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>PanicStub1(void)</newfuncname>
				<newfuncpos>318</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCoeScreenDeviceChangeDefaultHandler::~CCoeScreenDeviceChangeDefaultHandler(void)</newfuncname>
				<newfuncpos>319</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCoeEnv::AddResourceChangeObserverL(MCoeResourceChangeObserver &amp;)</newfuncname>
				<newfuncpos>320</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>MCoeResourceChangeObserver::MCoeResourceChangeObserver_Reserved_1(void)</newfuncname>
				<newfuncpos>321</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>MCoeResourceChangeObserver::MCoeResourceChangeObserver_Reserved_2(void)</newfuncname>
				<newfuncpos>322</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCoeEnv::RemoveResourceChangeObserver(MCoeResourceChangeObserver &amp;)</newfuncname>
				<newfuncpos>323</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCoeScreenDeviceChangeDefaultHandler::CCoeScreenDeviceChangeDefaultHandler(void)</newfuncname>
				<newfuncpos>324</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCoeAppUi::SetSystemDefaultViewL(TVwsViewId const &amp;)</newfuncname>
				<newfuncpos>325</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCoeAppUi::SetSystemDefaultViewL(TVwsViewId const &amp;, int)</newfuncname>
				<newfuncpos>326</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCoeScreenDeviceChangeDefaultHandler::Self(void)</newfuncname>
				<newfuncpos>327</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCoeEnv::ReadResourceAsDes16L(TDes16 &amp;, int) const</newfuncname>
				<newfuncpos>328</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCoeEnv::InstallFepL(TDesC16 const &amp;, int)</newfuncname>
				<newfuncpos>329</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCoeEnv::FindStatic(TUid)</newfuncname>
				<newfuncpos>330</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCoeEnv::ReadResourceAsDes8L(TDes8 &amp;, int) const</newfuncname>
				<newfuncpos>331</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\crypto.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\crypto.lib</comparefilename>
			<shortname>crypto</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>3</typeid>
				<funcname>CRSASignatureResult::operator==(CRSASignatureResult const &amp;) const</funcname>
				<funcpos>4</funcpos>
				<newfuncpos>49</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CAlgorithmIdentifier::operator==(CAlgorithmIdentifier const &amp;) const</funcname>
				<funcpos>5</funcpos>
				<newfuncpos>50</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CSubjectPublicKeyInfo::AlgorithmId(void) const</funcname>
				<funcpos>6</funcpos>
				<newfuncpos>51</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CAlgorithmIdentifier::ConstructL(CAlgorithmIdentifier const &amp;)</funcname>
				<funcpos>7</funcpos>
				<newfuncpos>4</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CAlgorithmIdentifier::ConstructL(TDesC8 const &amp;)</funcname>
				<funcpos>8</funcpos>
				<newfuncpos>5</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CSubjectPublicKeyInfo::ConstructL(CSubjectPublicKeyInfo const &amp;)</funcname>
				<funcpos>9</funcpos>
				<newfuncpos>6</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CSigningAlgorithmIdentifier::DigestAlgorithm(void) const</funcname>
				<funcpos>10</funcpos>
				<newfuncpos>7</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CAlgorithmIdentifier::EncodedParams(void) const</funcname>
				<funcpos>11</funcpos>
				<newfuncpos>8</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CSubjectPublicKeyInfo::EncodedParams(void) const</funcname>
				<funcpos>12</funcpos>
				<newfuncpos>9</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CSignedObject::Encoding(void) const</funcname>
				<funcpos>13</funcpos>
				<newfuncpos>10</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CSignedObject::ExternalizeL(RWriteStream &amp;) const</funcname>
				<funcpos>14</funcpos>
				<newfuncpos>11</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>5</typeid>
				<newfuncname>CCertificate::KeyIdentifierL(void) const</newfuncname>
				<newfuncpos>15</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CSignedObject::Fingerprint(void) const</funcname>
				<funcpos>15</funcpos>
				<newfuncpos>12</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CValidityPeriod::Finish(void) const</funcname>
				<funcpos>16</funcpos>
				<newfuncpos>13</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CSubjectPublicKeyInfo::KeyData(void) const</funcname>
				<funcpos>17</funcpos>
				<newfuncpos>14</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CAlgorithmIdentifier::NewLC(TAlgorithmId &amp;, TDesC8 const &amp;)</funcname>
				<funcpos>18</funcpos>
				<newfuncpos>16</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CAlgorithmIdentifier::NewLC(CAlgorithmIdentifier const &amp;)</funcname>
				<funcpos>19</funcpos>
				<newfuncpos>17</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CSigningKeyParameters::NewLC(void)</funcname>
				<funcpos>20</funcpos>
				<newfuncpos>18</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CSigningKeyParameters::NewLC(CSigningKeyParameters const &amp;)</funcname>
				<funcpos>21</funcpos>
				<newfuncpos>19</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CSubjectPublicKeyInfo::NewLC(CSubjectPublicKeyInfo const &amp;)</funcname>
				<funcpos>22</funcpos>
				<newfuncpos>20</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CSigningAlgorithmIdentifier::NewLC(CSigningAlgorithmIdentifier const &amp;)</funcname>
				<funcpos>23</funcpos>
				<newfuncpos>21</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CAlgorithmIdentifier::NewL(TAlgorithmId &amp;, TDesC8 const &amp;)</funcname>
				<funcpos>24</funcpos>
				<newfuncpos>22</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CAlgorithmIdentifier::NewL(CAlgorithmIdentifier const &amp;)</funcname>
				<funcpos>25</funcpos>
				<newfuncpos>23</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CSigningKeyParameters::NewL(void)</funcname>
				<funcpos>26</funcpos>
				<newfuncpos>24</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CSigningKeyParameters::NewL(CSigningKeyParameters const &amp;)</funcname>
				<funcpos>27</funcpos>
				<newfuncpos>25</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CSubjectPublicKeyInfo::NewL(CSubjectPublicKeyInfo const &amp;)</funcname>
				<funcpos>28</funcpos>
				<newfuncpos>26</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CSigningAlgorithmIdentifier::NewL(CSigningAlgorithmIdentifier const &amp;)</funcname>
				<funcpos>29</funcpos>
				<newfuncpos>27</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CCertificate::PublicKey(void) const</funcname>
				<funcpos>30</funcpos>
				<newfuncpos>28</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CCertificate::SerialNumber(void) const</funcname>
				<funcpos>31</funcpos>
				<newfuncpos>29</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CSigningKeyParameters::SetDSAParamsL(CDSAParameters const &amp;)</funcname>
				<funcpos>32</funcpos>
				<newfuncpos>30</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CSignedObject::SetParametersL(CSigningKeyParameters const &amp;)</funcname>
				<funcpos>33</funcpos>
				<newfuncpos>31</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CSignedObject::Signature(void) const</funcname>
				<funcpos>34</funcpos>
				<newfuncpos>32</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CAlgorithmIdentifier::CAlgorithmIdentifier(TAlgorithmId &amp;)</funcname>
				<funcpos>35</funcpos>
				<newfuncpos>48</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CSignedObject::SigningAlgorithm(void) const</funcname>
				<funcpos>36</funcpos>
				<newfuncpos>33</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CValidityPeriod::Start(void) const</funcname>
				<funcpos>37</funcpos>
				<newfuncpos>34</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CValidityPeriod::Valid(TTime const &amp;) const</funcname>
				<funcpos>38</funcpos>
				<newfuncpos>35</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CCertificate::ValidityPeriod(void) const</funcname>
				<funcpos>39</funcpos>
				<newfuncpos>36</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CSignedObject::VerifySignatureL(TDesC8 const &amp;) const</funcname>
				<funcpos>40</funcpos>
				<newfuncpos>37</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CCertificate::~CCertificate(void)</funcname>
				<funcpos>41</funcpos>
				<newfuncpos>38</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CSignedObject::~CSignedObject(void)</funcname>
				<funcpos>42</funcpos>
				<newfuncpos>39</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CRSASignatureResult::~CRSASignatureResult(void)</funcname>
				<funcpos>43</funcpos>
				<newfuncpos>40</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CAlgorithmIdentifier::~CAlgorithmIdentifier(void)</funcname>
				<funcpos>44</funcpos>
				<newfuncpos>41</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CSigningKeyParameters::~CSigningKeyParameters(void)</funcname>
				<funcpos>45</funcpos>
				<newfuncpos>42</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CSubjectPublicKeyInfo::~CSubjectPublicKeyInfo(void)</funcname>
				<funcpos>46</funcpos>
				<newfuncpos>43</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CSigningAlgorithmIdentifier::~CSigningAlgorithmIdentifier(void)</funcname>
				<funcpos>47</funcpos>
				<newfuncpos>44</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CValidityPeriod::CValidityPeriod(void)</funcname>
				<funcpos>48</funcpos>
				<newfuncpos>45</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CValidityPeriod::CValidityPeriod(CValidityPeriod const &amp;)</funcname>
				<funcpos>49</funcpos>
				<newfuncpos>46</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CAlgorithmIdentifier::CAlgorithmIdentifier(void)</funcname>
				<funcpos>50</funcpos>
				<newfuncpos>47</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\csd.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\csd.lib</comparefilename>
			<shortname>csd</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>6</typeid>
				<funcname>CreateAgentL(MAgentObserver &amp;, CDialogProcessor *, CCommsDbAccess &amp;, TCommDbConnectionDirection)</funcname>
				<newfuncname>NewAgentFactoryL</newfuncname>
				<funcpos>1</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\csdnengine.lib</name>
			<comparefilename></comparefilename>
			<shortname>csdnengine</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>1</typeid>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\dossrv.lib</name>
			<comparefilename></comparefilename>
			<shortname>dossrv</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>1</typeid>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\edbms.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\edbms.lib</comparefilename>
			<shortname>edbms</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>6</typeid>
				<funcname>RDbs::SetHeapFailure(RHeap::TAllocFail, int)</funcname>
				<newfuncname>RDbs::SetHeapFailure(int, int)</newfuncname>
				<funcpos>213</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\ektran.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\ektran.lib</comparefilename>
			<shortname>ektran</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCaptureKeys::AddCaptureKeyL(TCaptureKey const &amp;, unsigned char)</newfuncname>
				<newfuncpos>10</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCaptureKeys::SetCaptureKey(unsigned long, TCaptureKey const &amp;, unsigned char)</newfuncname>
				<newfuncpos>11</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\etel.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\etel.lib</comparefilename>
			<shortname>etel</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>7</typeid>
				<newfuncname>RTelSubSessionBase::CancelAsyncRequest(int) const</newfuncname>
				<newfuncpos>229</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>RTelSubSessionBase::SetAndGet(int, TRequestStatus &amp;, TDesC8 const &amp;, TDes16 &amp;, RTelSubSessionBase::TReqPriorityType) const</newfuncname>
				<newfuncpos>230</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>RTelSubSessionBase::SetAndGet(int, TRequestStatus &amp;, TDesC16 const &amp;, TDes16 &amp;, RTelSubSessionBase::TReqPriorityType) const</newfuncname>
				<newfuncpos>231</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>TDataPackage::Type(void) const</newfuncname>
				<newfuncpos>232</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\etelsat.lib</name>
			<comparefilename></comparefilename>
			<shortname>etelsat</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>1</typeid>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\exlw9700.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\exlw9700.lib</comparefilename>
			<shortname>exlw9700</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CWriteBiffXF8::CWriteBiffXF8(CWriteBiffXF::EXFType const &amp;)</newfuncname>
				<newfuncpos>34</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CWriteBiffVERTICALPAGEBREAKS8::SizeOfRgBrk(void)</newfuncname>
				<newfuncpos>35</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CWriteBiffHORIZONTALPAGEBREAKS8::SizeOfRgBrk(void)</newfuncname>
				<newfuncpos>36</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\ezlib.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\ezlib.lib</comparefilename>
			<shortname>ezlib</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>6</typeid>
				<funcname>zlibVersion(void)</funcname>
				<newfuncname>zlibVersion</newfuncname>
				<funcpos>1</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>adler32(unsigned long, unsigned char const *, unsigned int)</funcname>
				<newfuncname>adler32</newfuncname>
				<funcpos>44</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>compress2(unsigned char *, unsigned long *, unsigned char const *, unsigned long, int)</funcname>
				<newfuncname>compress2</newfuncname>
				<funcpos>45</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>compress(unsigned char *, unsigned long *, unsigned char const *, unsigned long)</funcname>
				<newfuncname>compress</newfuncname>
				<funcpos>46</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>crc32(unsigned long, unsigned char const *, unsigned int)</funcname>
				<newfuncname>crc32</newfuncname>
				<funcpos>47</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>deflateCopy(z_stream_s *, z_stream_s *)</funcname>
				<newfuncname>deflateCopy</newfuncname>
				<funcpos>48</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>deflateEnd(z_stream_s *)</funcname>
				<newfuncname>deflateEnd</newfuncname>
				<funcpos>49</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>deflateInit2_(z_stream_s *, int, int, int, int, int, char const *, int)</funcname>
				<newfuncname>deflateInit2_</newfuncname>
				<funcpos>50</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>deflateInit_(z_stream_s *, int, char const *, int)</funcname>
				<newfuncname>deflateInit_</newfuncname>
				<funcpos>51</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>deflateParams(z_stream_s *, int, int)</funcname>
				<newfuncname>deflateParams</newfuncname>
				<funcpos>52</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>deflateReset(z_stream_s *)</funcname>
				<newfuncname>deflateReset</newfuncname>
				<funcpos>53</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>deflateSetDictionary(z_stream_s *, unsigned char const *, unsigned int)</funcname>
				<newfuncname>deflateSetDictionary</newfuncname>
				<funcpos>54</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>deflate(z_stream_s *, int)</funcname>
				<newfuncname>deflate</newfuncname>
				<funcpos>55</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>get_crc_table(void)</funcname>
				<newfuncname>get_crc_table</newfuncname>
				<funcpos>56</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>inflateEnd(z_stream_s *)</funcname>
				<newfuncname>inflateEnd</newfuncname>
				<funcpos>57</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>inflateInit2_(z_stream_s *, int, char const *, int)</funcname>
				<newfuncname>inflateInit2_</newfuncname>
				<funcpos>58</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>inflateInit_(z_stream_s *, char const *, int)</funcname>
				<newfuncname>inflateInit_</newfuncname>
				<funcpos>59</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>inflateReset(z_stream_s *)</funcname>
				<newfuncname>inflateReset</newfuncname>
				<funcpos>60</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>inflateSetDictionary(z_stream_s *, unsigned char const *, unsigned int)</funcname>
				<newfuncname>inflateSetDictionary</newfuncname>
				<funcpos>61</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>inflateSyncPoint(z_stream_s *)</funcname>
				<newfuncname>inflateSyncPoint</newfuncname>
				<funcpos>62</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>inflateSync(z_stream_s *)</funcname>
				<newfuncname>inflateSync</newfuncname>
				<funcpos>63</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>inflate(z_stream_s *, int)</funcname>
				<newfuncname>inflate</newfuncname>
				<funcpos>64</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>uncompress(unsigned char *, unsigned long *, unsigned char const *, unsigned long)</funcname>
				<newfuncname>uncompress</newfuncname>
				<funcpos>65</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>zError(int)</funcname>
				<newfuncname>zError</newfuncname>
				<funcpos>66</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\fbscli.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\fbscli.lib</comparefilename>
			<shortname>fbscli</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>6</typeid>
				<funcname>CBitwiseBitmap::ConstructL(RFs &amp;, TDesC16 const &amp;, long)</funcname>
				<newfuncname>CBitwiseBitmap::ConstructL(RFs &amp;, TDesC16 const &amp;, long, unsigned int)</newfuncname>
				<funcpos>14</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CBitwiseBitmap::Construct(TSize const &amp;, TDisplayMode)</funcname>
				<newfuncname>CBitwiseBitmap::Construct(TSize const &amp;, TDisplayMode, TUid)</newfuncname>
				<funcpos>15</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CBitwiseBitmap::GetScanLinePtr(unsigned long *&amp;, TPoint &amp;, int &amp;, unsigned long *, TLineScanningPosition &amp;) const</funcname>
				<newfuncname>CBitwiseBitmap::GetScanLinePtr(unsigned long *&amp;, TPoint &amp;, int, unsigned long *, TLineScanningPosition &amp;) const</newfuncname>
				<funcpos>148</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>DummyReserved1(void)</newfuncname>
				<newfuncpos>156</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CFbsBitmap::HardwareBitmapHandle(void) const</newfuncname>
				<newfuncpos>157</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CBitwiseBitmap::HardwareBitmapHandle(void) const</newfuncname>
				<newfuncpos>158</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CFbsTypefaceStore::DefaultBitmapType(void) const</newfuncname>
				<newfuncpos>159</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CFbsTypefaceStore::SetDefaultBitmapType(TGlyphBitmapType) const</newfuncname>
				<newfuncpos>160</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CFbsTypefaceStore::SetFontNameAliasL(TDesC16 const &amp;, TDesC16 const &amp;) const</newfuncname>
				<newfuncpos>161</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CFbsTypefaceStore::RemoveFontFileLocksL(TDesC16 const &amp;)</newfuncname>
				<newfuncpos>162</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CFbsTypefaceStore::RemoveFontFileLocksL(TDesC16 const &amp;, int)</newfuncname>
				<newfuncpos>163</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CBitwiseBitmap::GetScanLinePtr(unsigned long *&amp;, int &amp;, TPoint &amp;, unsigned long *, TLineScanningPosition &amp;) const</newfuncname>
				<newfuncpos>164</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CFbsBitmap::LoadAndCompress(TDesC16 const &amp;, long, int, unsigned int)</newfuncname>
				<newfuncpos>165</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CFbsBitmap::Load(TDesC16 const &amp;, long, int, unsigned int)</newfuncname>
				<newfuncpos>166</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CFbsBitmap::CreateHardwareBitmap(TSize const &amp;, TDisplayMode, TUid)</newfuncname>
				<newfuncpos>167</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\featmgr.lib</name>
			<comparefilename></comparefilename>
			<shortname>featmgr</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>1</typeid>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\fepbase.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\fepbase.lib</comparefilename>
			<shortname>fepbase</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>6</typeid>
				<funcname>MCoeFepAwareTextEditor_Extension1::MCoeFepAwareTextEditor_Extension1_Reserved_3(void)</funcname>
				<newfuncname>MCoeFepAwareTextEditor_Extension1::GetFepLayDocExtension(int &amp;)</newfuncname>
				<funcpos>92</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>MCoeFepLayDocExtension::MCoeFepLayDocExtension_Reserved_1(void)</newfuncname>
				<newfuncpos>99</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>MCoeFepLayDocExtension::MCoeFepLayDocExtension_Reserved_2(void)</newfuncname>
				<newfuncpos>100</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\gdi.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\gdi.lib</comparefilename>
			<shortname>gdi</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>6</typeid>
				<funcname>CPicture::Reserved(void)</funcname>
				<newfuncname>CPicture::NativePixelSize(TSize &amp;)</newfuncname>
				<funcpos>176</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CFont::CharactersJoin(int, int)</newfuncname>
				<newfuncpos>196</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>TBidiText::Directionality(void) const</newfuncname>
				<newfuncpos>197</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>TBidiText::DisplayText(void) const</newfuncname>
				<newfuncpos>198</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>TBidiText::DrawText(CGraphicsContext &amp;, TPoint const &amp;) const</newfuncname>
				<newfuncpos>199</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>TBidiText::DrawText(CGraphicsContext &amp;, TPoint const &amp;, int) const</newfuncname>
				<newfuncpos>200</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>TBidiText::DrawText(CGraphicsContext &amp;, TPoint const &amp;, int, CGraphicsContext::TTextAlign) const</newfuncname>
				<newfuncpos>201</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>TBidiText::NewL(TDesC16 const &amp;, int)</newfuncname>
				<newfuncpos>202</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>TBidiText::NewL(TDesC16 const &amp;, int, TBidiText::TDirectionality)</newfuncname>
				<newfuncpos>203</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>TBidiText::SetTruncationChar(TChar)</newfuncname>
				<newfuncpos>204</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>TBidiText::Text(void) const</newfuncname>
				<newfuncpos>205</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>TBidiText::WrapText(int, CFont const &amp;, MLineBreaker const *)</newfuncname>
				<newfuncpos>206</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>TBidiText::WrappingWidth(void) const</newfuncname>
				<newfuncpos>207</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>TBidiText::ScriptDirectionality(TLanguage)</newfuncname>
				<newfuncpos>208</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>TBidiText::TextDirectionality(TDesC16 const &amp;, int *)</newfuncname>
				<newfuncpos>209</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>TBidiLogicalToVisual::GetVisualLine(TDes16 &amp;, int, int, TChar)</newfuncname>
				<newfuncpos>210</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>TBidiLogicalToVisual::Reorder(void)</newfuncname>
				<newfuncpos>211</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>TBidiLogicalToVisual::TBidiLogicalToVisual(TDesC16 const &amp;, TBidirectionalState::TRunInfo *, int)</newfuncname>
				<newfuncpos>212</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>TBidiLogicalToVisual::TBidiLogicalToVisual(TDesC16 const &amp;, int, TBidirectionalState::TRunInfo *, int)</newfuncname>
				<newfuncpos>213</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\genconn.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\genconn.lib</comparefilename>
			<shortname>genconn</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>6</typeid>
				<funcname>TConnectionSettings::TConnectionSettings(void)</funcname>
				<newfuncname>NonExistentImport1</newfuncname>
				<funcpos>2</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CCommsDbAccess::Close(void)</funcname>
				<newfuncname>NonExistentImport2</newfuncname>
				<funcpos>4</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CAgentSMBase::CompleteState(int)</funcname>
				<newfuncname>NonExistentImport3</newfuncname>
				<funcpos>5</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CAgentSMBase::ConnectionComplete(int, int)</funcname>
				<newfuncname>NonExistentImport4</newfuncname>
				<funcpos>6</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CAgentSMBase::Db(void)</funcname>
				<newfuncname>NonExistentImport5</newfuncname>
				<funcpos>7</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CAgentSMBase::DisconnectComplete(void)</funcname>
				<newfuncname>NonExistentImport6</newfuncname>
				<funcpos>8</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CAgentSMBase::DlgPrc(void)</funcname>
				<newfuncname>NonExistentImport7</newfuncname>
				<funcpos>9</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CAgentSMBase::DoCancel(void)</funcname>
				<newfuncname>NonExistentImport8</newfuncname>
				<funcpos>10</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CCommsDbAccess::GetBoolL(TDesC16 const &amp;, TDesC16 const &amp;, int &amp;)</funcname>
				<newfuncname>NonExistentImport9</newfuncname>
				<funcpos>16</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CCommsDbAccess::GetCurrentSettingsL(TConnectionSettings &amp;, TCommDbConnectionDirection, unsigned long)</funcname>
				<newfuncname>NonExistentImport10</newfuncname>
				<funcpos>17</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CCommsDbAccess::GetDesL(TDesC16 const &amp;, TDesC16 const &amp;, TDes8 &amp;)</funcname>
				<newfuncname>NonExistentImport11</newfuncname>
				<funcpos>18</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CCommsDbAccess::GetDesL(TDesC16 const &amp;, TDesC16 const &amp;, TDes16 &amp;)</funcname>
				<newfuncname>NonExistentImport12</newfuncname>
				<funcpos>19</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CCommsDbAccess::GetGlobalL(TDesC16 const &amp;, unsigned long &amp;)</funcname>
				<newfuncname>NonExistentImport13</newfuncname>
				<funcpos>20</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CCommsDbAccess::GetIntL(TDesC16 const &amp;, TDesC16 const &amp;, unsigned long &amp;)</funcname>
				<newfuncname>NonExistentImport14</newfuncname>
				<funcpos>21</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CCommsDbAccess::GetLengthOfLongDesL(TDesC16 const &amp;, TDesC16 const &amp;)</funcname>
				<newfuncname>NonExistentImport15</newfuncname>
				<funcpos>22</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CCommsDbAccess::GetLongDesLC(TDesC16 const &amp;, TDesC16 const &amp;)</funcname>
				<newfuncname>NonExistentImport16</newfuncname>
				<funcpos>23</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CCommsDbAccess::GetServiceTypeL(TDes16 &amp;)</funcname>
				<newfuncname>NonExistentImport17</newfuncname>
				<funcpos>24</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CCommsDbAccess::GetTsyNameL(TDes16 &amp;)</funcname>
				<newfuncname>NonExistentImport18</newfuncname>
				<funcpos>25</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CAgentSMBase::IncomingConnectionReceived(void)</funcname>
				<newfuncname>NonExistentImport19</newfuncname>
				<funcpos>26</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>MDialogProcessorObserver::MDPOAuthenticateComplete(int)</funcname>
				<newfuncname>NonExistentImport20</newfuncname>
				<funcpos>27</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>MDialogProcessorObserver::MDPODestroyPctComplete(int)</funcname>
				<newfuncname>NonExistentImport21</newfuncname>
				<funcpos>28</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>MDialogProcessorObserver::MDPOLoginComplete(int)</funcname>
				<newfuncname>NonExistentImport22</newfuncname>
				<funcpos>29</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>MDialogProcessorObserver::MDPOReadPctComplete(int)</funcname>
				<newfuncname>NonExistentImport23</newfuncname>
				<funcpos>30</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>MDialogProcessorObserver::MDPOReconnectComplete(int)</funcname>
				<newfuncname>NonExistentImport24</newfuncname>
				<funcpos>31</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>MDialogProcessorObserver::MDPOSelectComplete(int, TConnectionSettings const &amp;)</funcname>
				<newfuncname>NonExistentImport25</newfuncname>
				<funcpos>32</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>MDialogProcessorObserver::MDPOWarnComplete(int, int)</funcname>
				<newfuncname>NonExistentImport26</newfuncname>
				<funcpos>33</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CCommsDbAccess::ModemTable(void)</funcname>
				<newfuncname>NonExistentImport27</newfuncname>
				<funcpos>34</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CCommsDbAccess::NewL(void)</funcname>
				<newfuncname>NonExistentImport28</newfuncname>
				<funcpos>35</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CAgentSMBase::Notification(TAgentToNifEventType, void *)</funcname>
				<newfuncname>NonExistentImport29</newfuncname>
				<funcpos>36</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CAgentSMBase::RunL(void)</funcname>
				<newfuncname>NonExistentImport30</newfuncname>
				<funcpos>38</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CAgentSMBase::ServiceStarted(void)</funcname>
				<newfuncname>NonExistentImport31</newfuncname>
				<funcpos>40</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CCommsDbAccess::SetCommPortL(RCall::TCommPort const &amp;)</funcname>
				<newfuncname>NonExistentImport32</newfuncname>
				<funcpos>41</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CCommsDbAccess::SetCurrentSettingsL(TConnectionSettings const &amp;)</funcname>
				<newfuncname>NonExistentImport33</newfuncname>
				<funcpos>42</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CCommsDbAccess::SetOverridesL(CCommDbOverrideSettings *)</funcname>
				<newfuncname>NonExistentImport34</newfuncname>
				<funcpos>43</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CAgentSMBase::UpdateProgress(int, int)</funcname>
				<newfuncname>NonExistentImport35</newfuncname>
				<funcpos>48</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CAgentSMBase::~CAgentSMBase(void)</funcname>
				<newfuncname>NonExistentImport36</newfuncname>
				<funcpos>52</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CCommsDbAccess::~CCommsDbAccess(void)</funcname>
				<newfuncname>NonExistentImport37</newfuncname>
				<funcpos>54</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CAgentStateBase::~CAgentStateBase(void)</funcname>
				<newfuncname>NonExistentImport38</newfuncname>
				<funcpos>55</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CAgentSMBase::CAgentSMBase(MAgentObserver &amp;, CDialogProcessor *, CCommsDbAccess &amp;)</funcname>
				<newfuncname>NonExistentImport39</newfuncname>
				<funcpos>56</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CAgentStateBase::CAgentStateBase(MAgentObserver &amp;)</funcname>
				<newfuncname>NonExistentImport40</newfuncname>
				<funcpos>58</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CAgentStateBase::JumpToRunl(int)</funcname>
				<newfuncname>NonExistentImport41</newfuncname>
				<funcpos>60</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CEventLogger::LogCallEnd(TRequestStatus &amp;)</funcname>
				<newfuncname>NonExistentImport42</newfuncname>
				<funcpos>61</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CEventLogger::LogCallStart(TDesC16 const &amp;, int, TDesC16 const &amp;, TUid, TRequestStatus &amp;)</funcname>
				<newfuncname>NonExistentImport43</newfuncname>
				<funcpos>62</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CEventLogger::NewL(void)</funcname>
				<newfuncname>NonExistentImport44</newfuncname>
				<funcpos>63</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CEventLogger::~CEventLogger(void)</funcname>
				<newfuncname>NonExistentImport45</newfuncname>
				<funcpos>64</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CCommsDbAccess::LocationId(void) const</funcname>
				<newfuncname>NonExistentImport46</newfuncname>
				<funcpos>65</funcpos>
				<bc_severity>None</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CDialogProcessor::Authenticate(MDialogProcessorObserver &amp;, TDes16 &amp;, TDes16 &amp;, int)</funcname>
				<newfuncname>NonExistentImport47</newfuncname>
				<funcpos>66</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CDialogProcessor::CancelEverything(void)</funcname>
				<newfuncname>NonExistentImport48</newfuncname>
				<funcpos>67</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CDialogProcessor::ClosePct(void)</funcname>
				<newfuncname>NonExistentImport49</newfuncname>
				<funcpos>68</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CDialogProcessor::DestroyPctNotification(MDialogProcessorObserver &amp;)</funcname>
				<newfuncname>NonExistentImport50</newfuncname>
				<funcpos>69</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CDialogProcessor::Login(MDialogProcessorObserver &amp;, TDes16 &amp;, TDes16 &amp;, int)</funcname>
				<newfuncname>NonExistentImport51</newfuncname>
				<funcpos>70</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CDialogProcessor::NewL(TCommDbDatabaseType, int)</funcname>
				<newfuncname>NonExistentImport52</newfuncname>
				<funcpos>71</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CDialogProcessor::OpenPct(void)</funcname>
				<newfuncname>NonExistentImport53</newfuncname>
				<funcpos>72</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CDialogProcessor::ReadPct(MDialogProcessorObserver &amp;, TDes16 &amp;)</funcname>
				<newfuncname>NonExistentImport54</newfuncname>
				<funcpos>73</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CDialogProcessor::Reconnect(MDialogProcessorObserver &amp;)</funcname>
				<newfuncname>NonExistentImport55</newfuncname>
				<funcpos>74</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CDialogProcessor::SelectConnection(MDialogProcessorObserver &amp;, TConnectionPrefs const &amp;)</funcname>
				<newfuncname>NonExistentImport56</newfuncname>
				<funcpos>75</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CDialogProcessor::WarnNewConnection(MDialogProcessorObserver &amp;, TConnectionPrefs const &amp;, TDesC16 const *, TIspConnectionNames const *, int)</funcname>
				<newfuncname>NonExistentImport57</newfuncname>
				<funcpos>76</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CDialogProcessor::WritePct(TDesC16 const &amp;)</funcname>
				<newfuncname>NonExistentImport58</newfuncname>
				<funcpos>77</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CDialogProcessor::~CDialogProcessor(void)</funcname>
				<newfuncname>NonExistentImport59</newfuncname>
				<funcpos>78</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CAgentSMBase::ConnectionContinuation(CAgentSMBase::TSMContinueConnectType)</funcname>
				<newfuncname>NonExistentImport60</newfuncname>
				<funcpos>79</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CAgentSMBase::GetLastError(int &amp;)</funcname>
				<newfuncname>NonExistentImport61</newfuncname>
				<funcpos>80</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CEventLogger::LogDataTransferred(TInt64, TInt64, TUid, TRequestStatus &amp;)</funcname>
				<newfuncname>NonExistentImport62</newfuncname>
				<funcpos>81</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CAgentSMBase::ConnectionComplete(int)</funcname>
				<newfuncname>NonExistentImport63</newfuncname>
				<funcpos>83</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CAgentSMBase::PreventConnectionRetries(void)</funcname>
				<newfuncname>NonExistentImport64</newfuncname>
				<funcpos>87</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CEventLogger::Cancel(void)</funcname>
				<newfuncname>NonExistentImport65</newfuncname>
				<funcpos>88</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CDialogProcessor::SelectConnection(MDialogProcessorObserver &amp;, TConnectionPrefs const &amp;, int)</funcname>
				<newfuncname>NonExistentImport66</newfuncname>
				<funcpos>89</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CCommsDbAccess::GetConnectionDirection(void) const</funcname>
				<newfuncname>NonExistentImport67</newfuncname>
				<funcpos>90</funcpos>
				<bc_severity>None</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\gmsmodel.lib</name>
			<comparefilename></comparefilename>
			<shortname>gmsmodel</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>1</typeid>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\gsmbas.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\gsmbas.lib</comparefilename>
			<shortname>gsmbas</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>6</typeid>
				<funcname>CGsmPhoneBookResults::AddEmptyEntriesL(void)</funcname>
				<newfuncname>CGsmPhoneBookResults::AddEmptyEntriesNSL(void)</newfuncname>
				<funcpos>2</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CGsmNetworkList::AddEntryL(MBasicGsmPhoneNetwork::TNetworkInfo const &amp;)</funcname>
				<newfuncname>CGsmNetworkList::AddEntryNSL(MBasicGsmPhoneNetwork::TNetworkInfo const &amp;)</newfuncname>
				<funcpos>3</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CGsmPhoneBookResults::AddEntry(RGsmPhoneBook::TEntry const &amp;)</funcname>
				<newfuncname>CGsmPhoneBookResults::AddEntryNS(RGsmPhoneBook::TEntry const &amp;)</newfuncname>
				<funcpos>4</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::BatteryInfoNotificationCancel(void) const</funcname>
				<newfuncname>RBasicGsmPhone::BatteryInfoNotificationCancelNS(void) const</newfuncname>
				<funcpos>9</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::BatteryInfoNotification(TRequestStatus &amp;, MBasicGsmPhoneBatteryAndPower::TBatteryInfo &amp;)</funcname>
				<newfuncname>RBasicGsmPhone::BatteryInfoNotificationNS(TRequestStatus &amp;, MBasicGsmPhoneBatteryAndPower::TBatteryInfo &amp;)</newfuncname>
				<funcpos>10</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::BerNotificationCancel(void) const</funcname>
				<newfuncname>RBasicGsmPhone::BerNotificationCancelNS(void) const</newfuncname>
				<funcpos>11</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::BerNotification(TRequestStatus &amp;, unsigned int &amp;)</funcname>
				<newfuncname>RBasicGsmPhone::BerNotificationNS(TRequestStatus &amp;, unsigned int &amp;)</newfuncname>
				<funcpos>12</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CGsmNetworkList::ChangeEntry(int, MBasicGsmPhoneNetwork::TNetworkInfo const &amp;)</funcname>
				<newfuncname>CGsmNetworkList::ChangeEntryNS(int, MBasicGsmPhoneNetwork::TNetworkInfo const &amp;)</newfuncname>
				<funcpos>13</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RSmsStorage::Close(void)</funcname>
				<newfuncname>RSmsStorage::CloseNS(void)</newfuncname>
				<funcpos>18</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RGsmPhoneBook::Close(void)</funcname>
				<newfuncname>RGsmPhoneBook::CloseNS(void)</newfuncname>
				<funcpos>19</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RSmsMessaging::Close(void)</funcname>
				<newfuncname>RSmsMessaging::CloseNS(void)</newfuncname>
				<funcpos>20</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CGsmPhoneBookSearch::ConstructL(void)</funcname>
				<newfuncname>CGsmPhoneBookSearch::ConstructNSL(void)</newfuncname>
				<funcpos>26</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RSmsStorage::DeleteCancel(void) const</funcname>
				<newfuncname>RSmsStorage::DeleteCancelNS(void) const</newfuncname>
				<funcpos>27</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RGsmPhoneBook::DeleteCancel(void) const</funcname>
				<newfuncname>RGsmPhoneBook::DeleteCancelNS(void) const</newfuncname>
				<funcpos>28</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CGsmNetworkList::DeleteEntry(int)</funcname>
				<newfuncname>CGsmNetworkList::DeleteEntryNS(int)</newfuncname>
				<funcpos>29</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RSmsStorage::Delete(TRequestStatus &amp;, int)</funcname>
				<newfuncname>RSmsStorage::DeleteNS(TRequestStatus &amp;, int)</newfuncname>
				<funcpos>30</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RGsmPhoneBook::Delete(TRequestStatus &amp;, int)</funcname>
				<newfuncname>RGsmPhoneBook::DeleteNS(TRequestStatus &amp;, int)</newfuncname>
				<funcpos>31</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RSmsStorage::Delete(int) const</funcname>
				<newfuncname>RSmsStorage::DeleteNS(int) const</newfuncname>
				<funcpos>32</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RGsmPhoneBook::Delete(int) const</funcname>
				<newfuncname>RGsmPhoneBook::DeleteNS(int) const</newfuncname>
				<funcpos>33</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RGsmPhoneBook::EntryChangedNotificationCancel(void) const</funcname>
				<newfuncname>RGsmPhoneBook::EntryChangedNotificationCancelNS(void) const</newfuncname>
				<funcpos>40</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RGsmPhoneBook::EntryChangedNotification(TRequestStatus &amp;, int &amp;)</funcname>
				<newfuncname>RGsmPhoneBook::EntryChangedNotificationNS(TRequestStatus &amp;, int &amp;)</newfuncname>
				<funcpos>41</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::EnumerateAlarmCancel(void) const</funcname>
				<newfuncname>RBasicGsmPhone::EnumerateAlarmCancelNS(void) const</newfuncname>
				<funcpos>42</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::EnumerateAlarm(TRequestStatus &amp;, int &amp;) const</funcname>
				<newfuncname>RBasicGsmPhone::EnumerateAlarmNS(TRequestStatus &amp;, int &amp;) const</newfuncname>
				<funcpos>43</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::EnumerateAlarm(int &amp;) const</funcname>
				<newfuncname>RBasicGsmPhone::EnumerateAlarmNS(int &amp;) const</newfuncname>
				<funcpos>44</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::EnumerateDetectedNetworksCancel(void) const</funcname>
				<newfuncname>RBasicGsmPhone::EnumerateDetectedNetworksCancelNS(void) const</newfuncname>
				<funcpos>45</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::EnumerateDetectedNetworks(TRequestStatus &amp;, int &amp;)</funcname>
				<newfuncname>RBasicGsmPhone::EnumerateDetectedNetworksNS(TRequestStatus &amp;, int &amp;)</newfuncname>
				<funcpos>46</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::EnumerateDetectedNetworks(int &amp;) const</funcname>
				<newfuncname>RBasicGsmPhone::EnumerateDetectedNetworksNS(int &amp;) const</newfuncname>
				<funcpos>47</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CGsmNetworkList::EnumerateEntries(int &amp;)</funcname>
				<newfuncname>CGsmNetworkList::EnumerateEntriesNS(int &amp;)</newfuncname>
				<funcpos>48</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CGsmPhoneBookResults::EnumerateEntries(int &amp;)</funcname>
				<newfuncname>CGsmPhoneBookResults::EnumerateEntriesNS(int &amp;)</newfuncname>
				<funcpos>49</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RSmsMessaging::EnumerateMessageStores(int &amp;) const</funcname>
				<newfuncname>RSmsMessaging::EnumerateMessageStoresNS(int &amp;) const</newfuncname>
				<funcpos>50</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::EnumeratePhoneBooks(int &amp;) const</funcname>
				<newfuncname>RBasicGsmPhone::EnumeratePhoneBooksNS(int &amp;) const</newfuncname>
				<funcpos>51</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::GetAlarmCancel(void) const</funcname>
				<newfuncname>RBasicGsmPhone::GetAlarmCancelNS(void) const</newfuncname>
				<funcpos>54</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::GetAlarm(TRequestStatus &amp;, int, MBasicGsmPhoneClockAndAlarm::TAlarm &amp;) const</funcname>
				<newfuncname>RBasicGsmPhone::GetAlarmNS(TRequestStatus &amp;, int, MBasicGsmPhoneClockAndAlarm::TAlarm &amp;) const</newfuncname>
				<funcpos>55</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::GetAlarm(int, MBasicGsmPhoneClockAndAlarm::TAlarm &amp;) const</funcname>
				<newfuncname>RBasicGsmPhone::GetAlarmNS(int, MBasicGsmPhoneClockAndAlarm::TAlarm &amp;) const</newfuncname>
				<funcpos>56</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmCall::GetBasicGsmCaps(RBasicGsmCall::TCaps &amp;) const</funcname>
				<newfuncname>RBasicGsmCall::GetBasicGsmCapsNS(RBasicGsmCall::TCaps &amp;) const</newfuncname>
				<funcpos>57</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::GetBatteryPowerCaps(MBasicGsmPhoneBatteryAndPower::TBatteryAndPowerCapsFlags &amp;) const</funcname>
				<newfuncname>RBasicGsmPhone::GetBatteryPowerCapsNS(MBasicGsmPhoneBatteryAndPower::TBatteryAndPowerCapsFlags &amp;) const</newfuncname>
				<funcpos>61</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::GetBerCancel(void) const</funcname>
				<newfuncname>RBasicGsmPhone::GetBerCancelNS(void) const</newfuncname>
				<funcpos>62</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::GetBer(TRequestStatus &amp;, unsigned int &amp;)</funcname>
				<newfuncname>RBasicGsmPhone::GetBerNS(TRequestStatus &amp;, unsigned int &amp;)</newfuncname>
				<funcpos>63</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::GetBer(unsigned int &amp;) const</funcname>
				<newfuncname>RBasicGsmPhone::GetBerNS(unsigned int &amp;) const</newfuncname>
				<funcpos>64</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RGsmPhoneBook::GetCaps(RGsmPhoneBook::TCaps &amp;) const</funcname>
				<newfuncname>RGsmPhoneBook::GetCapsNS(RGsmPhoneBook::TCaps &amp;) const</newfuncname>
				<funcpos>65</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RSmsMessaging::GetCaps(RSmsMessaging::TCaps &amp;) const</funcname>
				<newfuncname>RSmsMessaging::GetCapsNS(RSmsMessaging::TCaps &amp;) const</newfuncname>
				<funcpos>66</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::GetClockCaps(MBasicGsmPhoneClockAndAlarm::TClockAndAlarmCapsFlags &amp;) const</funcname>
				<newfuncname>RBasicGsmPhone::GetClockCapsNS(MBasicGsmPhoneClockAndAlarm::TClockAndAlarmCapsFlags &amp;) const</newfuncname>
				<funcpos>67</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RSmsMessaging::GetDefaultSCAddressCancel(void) const</funcname>
				<newfuncname>RSmsMessaging::GetDefaultSCAddressCancelNS(void) const</newfuncname>
				<funcpos>69</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RSmsMessaging::GetDefaultSCAddress(TGsmTelNumber &amp;) const</funcname>
				<newfuncname>RSmsMessaging::GetDefaultSCAddressNS(TGsmTelNumber &amp;) const</newfuncname>
				<funcpos>70</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RSmsMessaging::GetDefaultSCAddress(TRequestStatus &amp;, TGsmTelNumber &amp;) const</funcname>
				<newfuncname>RSmsMessaging::GetDefaultSCAddressNS(TRequestStatus &amp;, TGsmTelNumber &amp;) const</newfuncname>
				<funcpos>71</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::GetDetectedNetworkInfoCancel(void) const</funcname>
				<newfuncname>RBasicGsmPhone::GetDetectedNetworkInfoCancelNS(void) const</newfuncname>
				<funcpos>72</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::GetDetectedNetworkInfo(TRequestStatus &amp;, int, MBasicGsmPhoneNetwork::TNetworkInfo &amp;)</funcname>
				<newfuncname>RBasicGsmPhone::GetDetectedNetworkInfoNS(TRequestStatus &amp;, int, MBasicGsmPhoneNetwork::TNetworkInfo &amp;)</newfuncname>
				<funcpos>73</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::GetDetectedNetworkInfo(int, MBasicGsmPhoneNetwork::TNetworkInfo &amp;) const</funcname>
				<newfuncname>RBasicGsmPhone::GetDetectedNetworkInfoNS(int, MBasicGsmPhoneNetwork::TNetworkInfo &amp;) const</newfuncname>
				<funcpos>74</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmCall::GetDynamicHscsdParams(RBasicGsmCall::THscsdDynamicParams &amp;) const</funcname>
				<newfuncname>RBasicGsmCall::GetDynamicHscsdParamsNS(RBasicGsmCall::THscsdDynamicParams &amp;) const</newfuncname>
				<funcpos>75</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CGsmNetworkList::GetEntry(int, MBasicGsmPhoneNetwork::TNetworkInfo &amp;)</funcname>
				<newfuncname>CGsmNetworkList::GetEntryNS(int, MBasicGsmPhoneNetwork::TNetworkInfo &amp;)</newfuncname>
				<funcpos>76</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CGsmPhoneBookResults::GetEntry(int, RGsmPhoneBook::TEntry &amp;)</funcname>
				<newfuncname>CGsmPhoneBookResults::GetEntryNS(int, RGsmPhoneBook::TEntry &amp;)</newfuncname>
				<funcpos>77</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmCall::GetHscsdCaps(RBasicGsmCall::THscsdCaps &amp;) const</funcname>
				<newfuncname>RBasicGsmCall::GetHscsdCapsNS(RBasicGsmCall::THscsdCaps &amp;) const</newfuncname>
				<funcpos>79</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmCall::GetHscsdParams(RBasicGsmCall::THscsdParams &amp;) const</funcname>
				<newfuncname>RBasicGsmCall::GetHscsdParamsNS(RBasicGsmCall::THscsdParams &amp;) const</newfuncname>
				<funcpos>80</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::GetIndicatorCaptureCaps(MBasicGsmPhoneIndicator::TIndicatorCapsFlags &amp;) const</funcname>
				<newfuncname>RBasicGsmPhone::GetIndicatorCaptureCapsNS(MBasicGsmPhoneIndicator::TIndicatorCapsFlags &amp;) const</newfuncname>
				<funcpos>81</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::GetIndicator(MBasicGsmPhoneIndicator::TIndicatorType, unsigned int &amp;) const</funcname>
				<newfuncname>RBasicGsmPhone::GetIndicatorNS(MBasicGsmPhoneIndicator::TIndicatorType, unsigned int &amp;) const</newfuncname>
				<funcpos>82</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmCall::GetInfoBasicGsm(RBasicGsmCall::TCallInfo &amp;) const</funcname>
				<newfuncname>RBasicGsmCall::GetInfoBasicGsmNS(RBasicGsmCall::TCallInfo &amp;) const</newfuncname>
				<funcpos>83</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::GetInfoBasicGsm(RBasicGsmPhone::TPhoneInfo &amp;) const</funcname>
				<newfuncname>RBasicGsmPhone::GetInfoBasicGsmNS(RBasicGsmPhone::TPhoneInfo &amp;) const</newfuncname>
				<funcpos>84</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RSmsStorage::GetInfoCancel(void) const</funcname>
				<newfuncname>RSmsStorage::GetInfoCancelNS(void) const</newfuncname>
				<funcpos>85</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RGsmPhoneBook::GetInfoCancel(void) const</funcname>
				<newfuncname>RGsmPhoneBook::GetInfoCancelNS(void) const</newfuncname>
				<funcpos>86</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RSmsStorage::GetInfo(TRequestStatus &amp;, RSmsStorage::TInfo &amp;)</funcname>
				<newfuncname>RSmsStorage::GetInfoNS(TRequestStatus &amp;, RSmsStorage::TInfo &amp;)</newfuncname>
				<funcpos>87</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RGsmPhoneBook::GetInfo(TRequestStatus &amp;, MBasicGsmPhoneBookSupport::TPhoneBookInfo &amp;)</funcname>
				<newfuncname>RGsmPhoneBook::GetInfoNS(TRequestStatus &amp;, MBasicGsmPhoneBookSupport::TPhoneBookInfo &amp;)</newfuncname>
				<funcpos>88</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RSmsStorage::GetInfo(RSmsStorage::TInfo &amp;) const</funcname>
				<newfuncname>RSmsStorage::GetInfoNS(RSmsStorage::TInfo &amp;) const</newfuncname>
				<funcpos>89</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RGsmPhoneBook::GetInfo(MBasicGsmPhoneBookSupport::TPhoneBookInfo &amp;) const</funcname>
				<newfuncname>RGsmPhoneBook::GetInfoNS(MBasicGsmPhoneBookSupport::TPhoneBookInfo &amp;) const</newfuncname>
				<funcpos>90</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CGsmNetworkList::GetMaxNumEntries(int &amp;)</funcname>
				<newfuncname>CGsmNetworkList::GetMaxNumEntriesNS(int &amp;)</newfuncname>
				<funcpos>91</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RSmsMessaging::GetMessageStoreInfoCancel(void) const</funcname>
				<newfuncname>RSmsMessaging::GetMessageStoreInfoCancelNS(void) const</newfuncname>
				<funcpos>92</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RSmsMessaging::GetMessageStoreInfo(TRequestStatus &amp;, int, RSmsMessaging::TStoreInfo &amp;) const</funcname>
				<newfuncname>RSmsMessaging::GetMessageStoreInfoNS(TRequestStatus &amp;, int, RSmsMessaging::TStoreInfo &amp;) const</newfuncname>
				<funcpos>93</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RSmsMessaging::GetMessageStoreInfo(int, RSmsMessaging::TStoreInfo &amp;) const</funcname>
				<newfuncname>RSmsMessaging::GetMessageStoreInfoNS(int, RSmsMessaging::TStoreInfo &amp;) const</newfuncname>
				<funcpos>94</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RSmsMessaging::GetMode(RSmsMessaging::TMode &amp;) const</funcname>
				<newfuncname>RSmsMessaging::GetModeNS(RSmsMessaging::TMode &amp;) const</newfuncname>
				<funcpos>95</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::GetNetworkInfoCaps(MBasicGsmPhoneNetwork::TNetworkCapsFlags &amp;) const</funcname>
				<newfuncname>RBasicGsmPhone::GetNetworkInfoCapsNS(MBasicGsmPhoneNetwork::TNetworkCapsFlags &amp;) const</newfuncname>
				<funcpos>96</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::GetNetworkSearchMode(MBasicGsmPhoneNetwork::TNetworkSetMode &amp;) const</funcname>
				<newfuncname>RBasicGsmPhone::GetNetworkSearchModeNS(MBasicGsmPhoneNetwork::TNetworkSetMode &amp;) const</newfuncname>
				<funcpos>98</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CGsmNetworkList::GetNextEntry(MBasicGsmPhoneNetwork::TNetworkInfo &amp;)</funcname>
				<newfuncname>CGsmNetworkList::GetNextEntryNS(MBasicGsmPhoneNetwork::TNetworkInfo &amp;)</newfuncname>
				<funcpos>99</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CGsmPhoneBookResults::GetNextEntry(RGsmPhoneBook::TEntry &amp;)</funcname>
				<newfuncname>CGsmPhoneBookResults::GetNextEntryNS(RGsmPhoneBook::TEntry &amp;)</newfuncname>
				<funcpos>100</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::GetPhoneBookInfoCancel(void) const</funcname>
				<newfuncname>RBasicGsmPhone::GetPhoneBookInfoCancelNS(void) const</newfuncname>
				<funcpos>101</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::GetPhoneBookInfo(TRequestStatus &amp;, int, MBasicGsmPhoneBookSupport::TPhoneBookInfo &amp;) const</funcname>
				<newfuncname>RBasicGsmPhone::GetPhoneBookInfoNS(TRequestStatus &amp;, int, MBasicGsmPhoneBookSupport::TPhoneBookInfo &amp;) const</newfuncname>
				<funcpos>102</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::GetPhoneBookInfo(int, MBasicGsmPhoneBookSupport::TPhoneBookInfo &amp;) const</funcname>
				<newfuncname>RBasicGsmPhone::GetPhoneBookInfoNS(int, MBasicGsmPhoneBookSupport::TPhoneBookInfo &amp;) const</newfuncname>
				<funcpos>103</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CGsmNetworkList::GetPreviousEntry(MBasicGsmPhoneNetwork::TNetworkInfo &amp;)</funcname>
				<newfuncname>CGsmNetworkList::GetPreviousEntryNS(MBasicGsmPhoneNetwork::TNetworkInfo &amp;)</newfuncname>
				<funcpos>104</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CGsmPhoneBookResults::GetPreviousEntry(RGsmPhoneBook::TEntry &amp;)</funcname>
				<newfuncname>CGsmPhoneBookResults::GetPreviousEntryNS(RGsmPhoneBook::TEntry &amp;)</newfuncname>
				<funcpos>105</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::GetSignalCaps(MBasicGsmPhoneSignalandBer::TSignalAndBerCapsFlags &amp;) const</funcname>
				<newfuncname>RBasicGsmPhone::GetSignalCapsNS(MBasicGsmPhoneSignalandBer::TSignalAndBerCapsFlags &amp;) const</newfuncname>
				<funcpos>106</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::IndicatorNotificationCancel(void) const</funcname>
				<newfuncname>RBasicGsmPhone::IndicatorNotificationCancelNS(void) const</newfuncname>
				<funcpos>120</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::IndicatorNotification(TRequestStatus &amp;, MBasicGsmPhoneIndicator::TIndicatorInfo &amp;)</funcname>
				<newfuncname>RBasicGsmPhone::IndicatorNotificationNS(TRequestStatus &amp;, MBasicGsmPhoneIndicator::TIndicatorInfo &amp;)</newfuncname>
				<funcpos>121</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CGsmNetworkList::InsertEntryL(int, MBasicGsmPhoneNetwork::TNetworkInfo const &amp;)</funcname>
				<newfuncname>CGsmNetworkList::InsertEntryNSL(int, MBasicGsmPhoneNetwork::TNetworkInfo const &amp;)</newfuncname>
				<funcpos>122</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CGsmNetworkList::NewL(int)</funcname>
				<newfuncname>CGsmNetworkList::NewNSL(int)</newfuncname>
				<funcpos>128</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CGsmPhoneBookSearch::NewL(RGsmPhoneBook &amp;)</funcname>
				<newfuncname>CGsmPhoneBookSearch::NewNSL(RGsmPhoneBook &amp;)</newfuncname>
				<funcpos>129</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CGsmPhoneBookResults::NewL(int)</funcname>
				<newfuncname>CGsmPhoneBookResults::NewNSL(int)</newfuncname>
				<funcpos>130</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CBasicGsmRetrieveDetectedNetworks::NewL(RBasicGsmPhone &amp;)</funcname>
				<newfuncname>CBasicGsmRetrieveDetectedNetworks::NewNSL(RBasicGsmPhone &amp;)</newfuncname>
				<funcpos>131</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmCall::NotifyBasicGsmCapsCancel(void) const</funcname>
				<newfuncname>RBasicGsmCall::NotifyBasicGsmCapsCancelNS(void) const</newfuncname>
				<funcpos>132</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmCall::NotifyBasicGsmCaps(TRequestStatus &amp;, RBasicGsmCall::TCaps &amp;)</funcname>
				<newfuncname>RBasicGsmCall::NotifyBasicGsmCapsNS(TRequestStatus &amp;, RBasicGsmCall::TCaps &amp;)</newfuncname>
				<funcpos>133</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::NotifyChangeOfCurrentNetworkCancel(void) const</funcname>
				<newfuncname>RBasicGsmPhone::NotifyChangeOfCurrentNetworkCancelNS(void) const</newfuncname>
				<funcpos>134</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::NotifyChangeOfCurrentNetwork(TRequestStatus &amp;, MBasicGsmPhoneNetwork::TCurrentNetworkInfo &amp;)</funcname>
				<newfuncname>RBasicGsmPhone::NotifyChangeOfCurrentNetworkNS(TRequestStatus &amp;, MBasicGsmPhoneNetwork::TCurrentNetworkInfo &amp;)</newfuncname>
				<funcpos>135</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::NotifyChangeOfNetworkRegistrationStatusCancel(void) const</funcname>
				<newfuncname>RBasicGsmPhone::NotifyChangeOfNetworkRegistrationStatusCancelNS(void) const</newfuncname>
				<funcpos>136</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::NotifyChangeOfNetworkRegistrationStatus(TRequestStatus &amp;, MBasicGsmPhoneNetwork::TRegistrationStatus &amp;)</funcname>
				<newfuncname>RBasicGsmPhone::NotifyChangeOfNetworkRegistrationStatusNS(TRequestStatus &amp;, MBasicGsmPhoneNetwork::TRegistrationStatus &amp;)</newfuncname>
				<funcpos>137</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::NotifyChangeOfNetworkSearchModeCancel(void) const</funcname>
				<newfuncname>RBasicGsmPhone::NotifyChangeOfNetworkSearchModeCancelNS(void) const</newfuncname>
				<funcpos>138</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::NotifyChangeOfNetworkSearchMode(TRequestStatus &amp;, MBasicGsmPhoneNetwork::TNetworkSetMode &amp;)</funcname>
				<newfuncname>RBasicGsmPhone::NotifyChangeOfNetworkSearchModeNS(TRequestStatus &amp;, MBasicGsmPhoneNetwork::TNetworkSetMode &amp;)</newfuncname>
				<funcpos>139</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::NotifyClockCapsCancel(void) const</funcname>
				<newfuncname>RBasicGsmPhone::NotifyClockCapsCancelNS(void) const</newfuncname>
				<funcpos>140</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::NotifyClockCaps(TRequestStatus &amp;, MBasicGsmPhoneClockAndAlarm::TClockAndAlarmCapsFlags &amp;)</funcname>
				<newfuncname>RBasicGsmPhone::NotifyClockCapsNS(TRequestStatus &amp;, MBasicGsmPhoneClockAndAlarm::TClockAndAlarmCapsFlags &amp;)</newfuncname>
				<funcpos>141</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmCall::NotifyDynamicHscsdParamsCancel(void) const</funcname>
				<newfuncname>RBasicGsmCall::NotifyDynamicHscsdParamsCancelNS(void) const</newfuncname>
				<funcpos>142</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmCall::NotifyDynamicHscsdParams(TRequestStatus &amp;, RBasicGsmCall::THscsdDynamicParams &amp;) const</funcname>
				<newfuncname>RBasicGsmCall::NotifyDynamicHscsdParamsNS(TRequestStatus &amp;, RBasicGsmCall::THscsdDynamicParams &amp;) const</newfuncname>
				<funcpos>143</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmCall::NotifyHscsdGsmCapsCancel(void) const</funcname>
				<newfuncname>RBasicGsmCall::NotifyHscsdGsmCapsCancelNS(void) const</newfuncname>
				<funcpos>144</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmCall::NotifyHscsdGsmCaps(TRequestStatus &amp;, RBasicGsmCall::THscsdCaps &amp;) const</funcname>
				<newfuncname>RBasicGsmCall::NotifyHscsdGsmCapsNS(TRequestStatus &amp;, RBasicGsmCall::THscsdCaps &amp;) const</newfuncname>
				<funcpos>145</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::NotifySignalCapsCancel(void) const</funcname>
				<newfuncname>RBasicGsmPhone::NotifySignalCapsCancelNS(void) const</newfuncname>
				<funcpos>146</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::NotifySignalCaps(TRequestStatus &amp;, MBasicGsmPhoneSignalandBer::TSignalAndBerCapsFlags &amp;)</funcname>
				<newfuncname>RBasicGsmPhone::NotifySignalCapsNS(TRequestStatus &amp;, MBasicGsmPhoneSignalandBer::TSignalAndBerCapsFlags &amp;)</newfuncname>
				<funcpos>147</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RSmsMessaging::NotifySmsMessageArrivedCancel(void) const</funcname>
				<newfuncname>RSmsMessaging::NotifySmsMessageArrivedCancelNS(void) const</newfuncname>
				<funcpos>148</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RSmsMessaging::NotifySmsMessageArrived(TRequestStatus &amp;) const</funcname>
				<newfuncname>RSmsMessaging::NotifySmsMessageArrivedNS(TRequestStatus &amp;) const</newfuncname>
				<funcpos>149</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RSmsStorage::Open(RSmsMessaging &amp;, TDesC16 const &amp;)</funcname>
				<newfuncname>RSmsStorage::OpenNS(RSmsMessaging &amp;, TDesC16 const &amp;)</newfuncname>
				<funcpos>150</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RGsmPhoneBook::Open(RPhone &amp;, TDesC16 const &amp;)</funcname>
				<newfuncname>RGsmPhoneBook::OpenNS(RPhone &amp;, TDesC16 const &amp;)</newfuncname>
				<funcpos>151</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RSmsMessaging::Open(RPhone &amp;)</funcname>
				<newfuncname>RSmsMessaging::OpenNS(RPhone &amp;)</newfuncname>
				<funcpos>152</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RGsmPhoneBook::ReadCancel(void) const</funcname>
				<newfuncname>RGsmPhoneBook::ReadCancelNS(void) const</newfuncname>
				<funcpos>156</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::ReadClockCancel(void) const</funcname>
				<newfuncname>RBasicGsmPhone::ReadClockCancelNS(void) const</newfuncname>
				<funcpos>157</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::ReadClock(TGsmDateTime &amp;) const</funcname>
				<newfuncname>RBasicGsmPhone::ReadClockNS(TGsmDateTime &amp;) const</newfuncname>
				<funcpos>158</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::ReadClock(TRequestStatus &amp;, TGsmDateTime &amp;) const</funcname>
				<newfuncname>RBasicGsmPhone::ReadClockNS(TRequestStatus &amp;, TGsmDateTime &amp;) const</newfuncname>
				<funcpos>159</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RGsmPhoneBook::ReadFirstCancel(void) const</funcname>
				<newfuncname>RGsmPhoneBook::ReadFirstCancelNS(void) const</newfuncname>
				<funcpos>160</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RGsmPhoneBook::ReadFirst(TRequestStatus &amp;, RGsmPhoneBook::TEntry &amp;)</funcname>
				<newfuncname>RGsmPhoneBook::ReadFirstNS(TRequestStatus &amp;, RGsmPhoneBook::TEntry &amp;)</newfuncname>
				<funcpos>161</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RGsmPhoneBook::ReadFirst(RGsmPhoneBook::TEntry &amp;)</funcname>
				<newfuncname>RGsmPhoneBook::ReadFirstNS(RGsmPhoneBook::TEntry &amp;)</newfuncname>
				<funcpos>162</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RGsmPhoneBook::ReadNextCancel(void) const</funcname>
				<newfuncname>RGsmPhoneBook::ReadNextCancelNS(void) const</newfuncname>
				<funcpos>163</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RGsmPhoneBook::ReadNext(TRequestStatus &amp;, RGsmPhoneBook::TEntry &amp;)</funcname>
				<newfuncname>RGsmPhoneBook::ReadNextNS(TRequestStatus &amp;, RGsmPhoneBook::TEntry &amp;)</newfuncname>
				<funcpos>164</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RGsmPhoneBook::ReadNext(RGsmPhoneBook::TEntry &amp;)</funcname>
				<newfuncname>RGsmPhoneBook::ReadNextNS(RGsmPhoneBook::TEntry &amp;)</newfuncname>
				<funcpos>165</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RGsmPhoneBook::ReadPreviousCancel(void) const</funcname>
				<newfuncname>RGsmPhoneBook::ReadPreviousCancelNS(void) const</newfuncname>
				<funcpos>166</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RGsmPhoneBook::ReadPrevious(TRequestStatus &amp;, RGsmPhoneBook::TEntry &amp;)</funcname>
				<newfuncname>RGsmPhoneBook::ReadPreviousNS(TRequestStatus &amp;, RGsmPhoneBook::TEntry &amp;)</newfuncname>
				<funcpos>167</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RGsmPhoneBook::ReadPrevious(RGsmPhoneBook::TEntry &amp;)</funcname>
				<newfuncname>RGsmPhoneBook::ReadPreviousNS(RGsmPhoneBook::TEntry &amp;)</newfuncname>
				<funcpos>168</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RSmsStorage::ReadSmsCancel(void) const</funcname>
				<newfuncname>RSmsStorage::ReadSmsCancelNS(void) const</newfuncname>
				<funcpos>169</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RSmsMessaging::ReadSmsMessageCancel(void) const</funcname>
				<newfuncname>RSmsMessaging::ReadSmsMessageCancelNS(void) const</newfuncname>
				<funcpos>170</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RSmsMessaging::ReadSmsMessage(TRequestStatus &amp;, RSmsMessaging::TMsgLocation &amp;, TSms &amp;)</funcname>
				<newfuncname>RSmsMessaging::ReadSmsMessageNS(TRequestStatus &amp;, RSmsMessaging::TMsgLocation &amp;, TSms &amp;)</newfuncname>
				<funcpos>171</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RSmsStorage::ReadSms(TRequestStatus &amp;, int, RSmsStorage::TSmsMsgStoreEntry &amp;)</funcname>
				<newfuncname>RSmsStorage::ReadSmsNS(TRequestStatus &amp;, int, RSmsStorage::TSmsMsgStoreEntry &amp;)</newfuncname>
				<funcpos>172</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RSmsStorage::ReadSms(int, RSmsStorage::TSmsMsgStoreEntry &amp;) const</funcname>
				<newfuncname>RSmsStorage::ReadSmsNS(int, RSmsStorage::TSmsMsgStoreEntry &amp;) const</newfuncname>
				<funcpos>173</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RGsmPhoneBook::Read(TRequestStatus &amp;, RGsmPhoneBook::TEntry &amp;)</funcname>
				<newfuncname>RGsmPhoneBook::ReadNS(TRequestStatus &amp;, RGsmPhoneBook::TEntry &amp;)</newfuncname>
				<funcpos>174</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RGsmPhoneBook::Read(RGsmPhoneBook::TEntry &amp;)</funcname>
				<newfuncname>RGsmPhoneBook::ReadNS(RGsmPhoneBook::TEntry &amp;)</newfuncname>
				<funcpos>175</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CGsmNetworkList::Reset(void)</funcname>
				<newfuncname>CGsmNetworkList::ResetNS(void)</newfuncname>
				<funcpos>176</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CGsmPhoneBookResults::Reset(void)</funcname>
				<newfuncname>CGsmPhoneBookResults::ResetNS(void)</newfuncname>
				<funcpos>177</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CGsmNetworkList::RestoreL(TDesC8 const &amp;)</funcname>
				<newfuncname>CGsmNetworkList::RestoreNSL(TDesC8 const &amp;)</newfuncname>
				<funcpos>178</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CGsmPhoneBookResults::RestoreL(TDesC8 const &amp;)</funcname>
				<newfuncname>CGsmPhoneBookResults::RestoreNSL(TDesC8 const &amp;)</newfuncname>
				<funcpos>179</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::RetrieveDetectedNetworksLC(void)</funcname>
				<newfuncname>RBasicGsmPhone::RetrieveDetectedNetworksNSLC(void)</newfuncname>
				<funcpos>180</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CBasicGsmRetrieveDetectedNetworks::RetrieveResults(void) const</funcname>
				<newfuncname>CBasicGsmRetrieveDetectedNetworks::RetrieveResultsNS(void) const</newfuncname>
				<funcpos>181</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RGsmPhoneBook::SearchLC(TBuf&lt;100&gt; const &amp;)</funcname>
				<newfuncname>RGsmPhoneBook::SearchNSLC(TBuf&lt;100&gt; const &amp;)</newfuncname>
				<funcpos>182</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CGsmPhoneBookSearch::SearchResults(void) const</funcname>
				<newfuncname>CGsmPhoneBookSearch::SearchResultsNS(void) const</newfuncname>
				<funcpos>183</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RSmsMessaging::SendMessageCancel(void) const</funcname>
				<newfuncname>RSmsMessaging::SendMessageCancelNS(void) const</newfuncname>
				<funcpos>184</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RSmsMessaging::SendMessage(TRequestStatus &amp;, unsigned int &amp;, TSms &amp;)</funcname>
				<newfuncname>RSmsMessaging::SendMessageNS(TRequestStatus &amp;, unsigned int &amp;, TSms &amp;)</newfuncname>
				<funcpos>185</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::SetAlarmCancel(void) const</funcname>
				<newfuncname>RBasicGsmPhone::SetAlarmCancelNS(void) const</newfuncname>
				<funcpos>186</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::SetAlarm(TRequestStatus &amp;, int, MBasicGsmPhoneClockAndAlarm::TAlarm const &amp;) const</funcname>
				<newfuncname>RBasicGsmPhone::SetAlarmNS(TRequestStatus &amp;, int, MBasicGsmPhoneClockAndAlarm::TAlarm const &amp;) const</newfuncname>
				<funcpos>187</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::SetAlarm(int, MBasicGsmPhoneClockAndAlarm::TAlarm const &amp;) const</funcname>
				<newfuncname>RBasicGsmPhone::SetAlarmNS(int, MBasicGsmPhoneClockAndAlarm::TAlarm const &amp;) const</newfuncname>
				<funcpos>188</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::SetClockCancel(void) const</funcname>
				<newfuncname>RBasicGsmPhone::SetClockCancelNS(void) const</newfuncname>
				<funcpos>189</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::SetClock(TRequestStatus &amp;, TGsmDateTime const &amp;) const</funcname>
				<newfuncname>RBasicGsmPhone::SetClockNS(TRequestStatus &amp;, TGsmDateTime const &amp;) const</newfuncname>
				<funcpos>190</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::SetClock(TGsmDateTime const &amp;) const</funcname>
				<newfuncname>RBasicGsmPhone::SetClockNS(TGsmDateTime const &amp;) const</newfuncname>
				<funcpos>191</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RSmsMessaging::SetDefaultSCAddressCancel(void) const</funcname>
				<newfuncname>RSmsMessaging::SetDefaultSCAddressCancelNS(void) const</newfuncname>
				<funcpos>192</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RSmsMessaging::SetDefaultSCAddress(TRequestStatus &amp;, TGsmTelNumber const &amp;)</funcname>
				<newfuncname>RSmsMessaging::SetDefaultSCAddressNS(TRequestStatus &amp;, TGsmTelNumber const &amp;)</newfuncname>
				<funcpos>193</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RSmsMessaging::SetDefaultSCAddress(TGsmTelNumber const &amp;) const</funcname>
				<newfuncname>RSmsMessaging::SetDefaultSCAddressNS(TGsmTelNumber const &amp;) const</newfuncname>
				<funcpos>194</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmCall::SetDynamicHscsdParamsCancel(void) const</funcname>
				<newfuncname>RBasicGsmCall::SetDynamicHscsdParamsCancelNS(void) const</newfuncname>
				<funcpos>195</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmCall::SetDynamicHscsdParams(TRequestStatus &amp;, RBasicGsmCall::THscsdDynamicParams const &amp;) const</funcname>
				<newfuncname>RBasicGsmCall::SetDynamicHscsdParamsNS(TRequestStatus &amp;, RBasicGsmCall::THscsdDynamicParams const &amp;) const</newfuncname>
				<funcpos>196</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmCall::SetDynamicHscsdParams(RBasicGsmCall::THscsdDynamicParams const &amp;) const</funcname>
				<newfuncname>RBasicGsmCall::SetDynamicHscsdParamsNS(RBasicGsmCall::THscsdDynamicParams const &amp;) const</newfuncname>
				<funcpos>197</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmCall::SetHscsdParams(RBasicGsmCall::THscsdParams const &amp;) const</funcname>
				<newfuncname>RBasicGsmCall::SetHscsdParamsNS(RBasicGsmCall::THscsdParams const &amp;) const</newfuncname>
				<funcpos>199</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::SetManualNetworkCancel(void) const</funcname>
				<newfuncname>RBasicGsmPhone::SetManualNetworkCancelNS(void) const</newfuncname>
				<funcpos>200</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::SetManualNetwork(TRequestStatus &amp;, MBasicGsmPhoneNetwork::TBscNetworkId)</funcname>
				<newfuncname>RBasicGsmPhone::SetManualNetworkNS(TRequestStatus &amp;, MBasicGsmPhoneNetwork::TBscNetworkId)</newfuncname>
				<funcpos>201</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::SetManualNetwork(MBasicGsmPhoneNetwork::TBscNetworkId) const</funcname>
				<newfuncname>RBasicGsmPhone::SetManualNetworkNS(MBasicGsmPhoneNetwork::TBscNetworkId) const</newfuncname>
				<funcpos>202</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CGsmNetworkList::SetMaxNumEntries(int)</funcname>
				<newfuncname>CGsmNetworkList::SetMaxNumEntriesNS(int)</newfuncname>
				<funcpos>203</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RSmsMessaging::SetModeCancel(void) const</funcname>
				<newfuncname>RSmsMessaging::SetModeCancelNS(void) const</newfuncname>
				<funcpos>204</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RSmsMessaging::SetMode(TRequestStatus &amp;, RSmsMessaging::TMode const &amp;) const</funcname>
				<newfuncname>RSmsMessaging::SetModeNS(TRequestStatus &amp;, RSmsMessaging::TMode const &amp;) const</newfuncname>
				<funcpos>205</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RSmsMessaging::SetMode(RSmsMessaging::TMode const &amp;) const</funcname>
				<newfuncname>RSmsMessaging::SetModeNS(RSmsMessaging::TMode const &amp;) const</newfuncname>
				<funcpos>206</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::SetNetworkModeCancel(void) const</funcname>
				<newfuncname>RBasicGsmPhone::SetNetworkModeCancelNS(void) const</newfuncname>
				<funcpos>207</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::SetNetworkMode(TRequestStatus &amp;, MBasicGsmPhoneNetwork::TNetworkSetMode)</funcname>
				<newfuncname>RBasicGsmPhone::SetNetworkModeNS(TRequestStatus &amp;, MBasicGsmPhoneNetwork::TNetworkSetMode)</newfuncname>
				<funcpos>208</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RBasicGsmPhone::SetNetworkMode(MBasicGsmPhoneNetwork::TNetworkSetMode) const</funcname>
				<newfuncname>RBasicGsmPhone::SetNetworkModeNS(MBasicGsmPhoneNetwork::TNetworkSetMode) const</newfuncname>
				<funcpos>209</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CGsmPhoneBookSearch::StartPhase2L(void)</funcname>
				<newfuncname>CGsmPhoneBookSearch::StartPhaseNS2L(void)</newfuncname>
				<funcpos>219</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CGsmPhoneBookSearch::Start(TBuf&lt;100&gt; const &amp;, TRequestStatus &amp;)</funcname>
				<newfuncname>CGsmPhoneBookSearch::StartNS(TBuf&lt;100&gt; const &amp;, TRequestStatus &amp;)</newfuncname>
				<funcpos>220</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CBasicGsmRetrieveDetectedNetworks::Start(TRequestStatus &amp;)</funcname>
				<newfuncname>CBasicGsmRetrieveDetectedNetworks::StartNS(TRequestStatus &amp;)</newfuncname>
				<funcpos>221</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CGsmNetworkList::StoreLC(void)</funcname>
				<newfuncname>CGsmNetworkList::StoreNSLC(void)</newfuncname>
				<funcpos>222</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CGsmPhoneBookResults::StoreLC(void)</funcname>
				<newfuncname>CGsmPhoneBookResults::StoreNSLC(void)</newfuncname>
				<funcpos>223</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CGsmNetworkList::StoreL(TDes8 &amp;)</funcname>
				<newfuncname>CGsmNetworkList::StoreNSL(TDes8 &amp;)</newfuncname>
				<funcpos>224</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CGsmPhoneBookResults::StoreL(TDes8 &amp;)</funcname>
				<newfuncname>CGsmPhoneBookResults::StoreNSL(TDes8 &amp;)</newfuncname>
				<funcpos>225</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RSmsStorage::WriteCancel(void) const</funcname>
				<newfuncname>RSmsStorage::WriteCancelNS(void) const</newfuncname>
				<funcpos>228</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RGsmPhoneBook::WriteCancel(void) const</funcname>
				<newfuncname>RGsmPhoneBook::WriteCancelNS(void) const</newfuncname>
				<funcpos>229</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RSmsStorage::WriteNotificationCancel(void) const</funcname>
				<newfuncname>RSmsStorage::WriteNotificationCancelNS(void) const</newfuncname>
				<funcpos>230</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RSmsStorage::WriteNotification(TRequestStatus &amp;, int &amp;)</funcname>
				<newfuncname>RSmsStorage::WriteNotificationNS(TRequestStatus &amp;, int &amp;)</newfuncname>
				<funcpos>231</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RSmsStorage::Write(TRequestStatus &amp;, int &amp;, RSmsStorage::TSmsMsgStoreEntry const &amp;)</funcname>
				<newfuncname>RSmsStorage::WriteNS(TRequestStatus &amp;, int &amp;, RSmsStorage::TSmsMsgStoreEntry const &amp;)</newfuncname>
				<funcpos>232</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RGsmPhoneBook::Write(TRequestStatus &amp;, RGsmPhoneBook::TEntry &amp;)</funcname>
				<newfuncname>RGsmPhoneBook::WriteNS(TRequestStatus &amp;, RGsmPhoneBook::TEntry &amp;)</newfuncname>
				<funcpos>233</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RSmsStorage::Write(int &amp;, RSmsStorage::TSmsMsgStoreEntry const &amp;) const</funcname>
				<newfuncname>RSmsStorage::WriteNS(int &amp;, RSmsStorage::TSmsMsgStoreEntry const &amp;) const</newfuncname>
				<funcpos>234</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RGsmPhoneBook::Write(RGsmPhoneBook::TEntry &amp;) const</funcname>
				<newfuncname>RGsmPhoneBook::WriteNS(RGsmPhoneBook::TEntry &amp;) const</newfuncname>
				<funcpos>235</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CGsmNetworkList::AddEmptyEntriesL(void)</funcname>
				<newfuncname>CGsmNetworkList::AddEmptyEntriesNSL(void)</newfuncname>
				<funcpos>255</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\gsmbsc.lib</name>
			<comparefilename></comparefilename>
			<shortname>gsmbsc</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>1</typeid>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\gsmcus.lib</name>
			<comparefilename></comparefilename>
			<shortname>gsmcus</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>1</typeid>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\gsmu.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\gsmu.lib</comparefilename>
			<shortname>gsmu</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>6</typeid>
				<funcname>TGsmCompressionSettings::CharacterGroupID(int &amp;) const</funcname>
				<newfuncname>PanicStub1(void)</newfuncname>
				<funcpos>8</funcpos>
				<bc_severity>None</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>TGsmCompressionSettings::CharacterSet(TGsmCompressionSettings::TGsmCharacterSet &amp;) const</funcname>
				<newfuncname>PanicStub2(void)</newfuncname>
				<funcpos>9</funcpos>
				<bc_severity>None</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CSmsMessage::CompressionSettings(TGsmCompressionSettings &amp;) const</funcname>
				<newfuncname>PanicStub3(void)</newfuncname>
				<funcpos>14</funcpos>
				<bc_severity>None</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CSmsMessage::CompressionSupportedL(RFs &amp;)</funcname>
				<newfuncname>PanicStub4(void)</newfuncname>
				<funcpos>15</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CSmsMessage::DecodeMessagePDUsL(CArrayFix&lt;TSms&gt; const &amp;, int)</funcname>
				<newfuncname>PanicStub5(void)</newfuncname>
				<funcpos>19</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CSmsPDU::EncodeMessagePDUL(TSms &amp;, int) const</funcname>
				<newfuncname>PanicStub6(void)</newfuncname>
				<funcpos>24</funcpos>
				<bc_severity>None</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CSmsMessage::EncodeMessagePDUsL(CArrayFix&lt;TSms&gt; &amp;, int, int)</funcname>
				<newfuncname>PanicStub7(void)</newfuncname>
				<funcpos>25</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>TGsmCompressionSettings::ExternalizeL(RWriteStream &amp;) const</funcname>
				<newfuncname>PanicStub8(void)</newfuncname>
				<funcpos>30</funcpos>
				<bc_severity>None</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>TGsmCompressionSettings::HuffmanInitializationID(int &amp;) const</funcname>
				<newfuncname>PanicStub9(void)</newfuncname>
				<funcpos>41</funcpos>
				<bc_severity>None</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>TGsmCompressionSettings::InternalizeL(RReadStream &amp;)</funcname>
				<newfuncname>PanicStub10(void)</newfuncname>
				<funcpos>51</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>TGsmCompressionSettings::KeywordDictionaryID(int &amp;) const</funcname>
				<newfuncname>PanicStub11(void)</newfuncname>
				<funcpos>56</funcpos>
				<bc_severity>None</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CSmsMessage::NewL(CSmsPDU::TSmsPDUType, CSmsBufferBase *, int)</funcname>
				<newfuncname>PanicStub12(void)</newfuncname>
				<funcpos>69</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CSmsMessage::NewL(TSms const &amp;, CSmsBufferBase *, int, int, int)</funcname>
				<newfuncname>PanicStub13(void)</newfuncname>
				<funcpos>70</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CSmsPDU::NewL(TSms const &amp;, CCnvCharacterSetConverter &amp;, RFs &amp;, int, int, int)</funcname>
				<newfuncname>PanicStub14(void)</newfuncname>
				<funcpos>74</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CSARStore::OpenL(TDesC16 const &amp;, TUid)</funcname>
				<newfuncname>PanicStub15(void)</newfuncname>
				<funcpos>77</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CSmsPDU::ParsedServiceCenterAddress(TGsmTelNumber &amp;) const</funcname>
				<newfuncname>PanicStub16(void)</newfuncname>
				<funcpos>80</funcpos>
				<bc_severity>None</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CSmsPDU::ParsedToFromAddress(TGsmTelNumber &amp;) const</funcname>
				<newfuncname>PanicStub17(void)</newfuncname>
				<funcpos>81</funcpos>
				<bc_severity>None</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>TGsmCompressionSettings::PunctuatorID(int &amp;) const</funcname>
				<newfuncname>PanicStub18(void)</newfuncname>
				<funcpos>83</funcpos>
				<bc_severity>None</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>TGsmCompressionSettings::SetCharacterGroupID(int, int)</funcname>
				<newfuncname>PanicStub19(void)</newfuncname>
				<funcpos>98</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>TGsmCompressionSettings::SetCharacterSet(int, TGsmCompressionSettings::TGsmCharacterSet)</funcname>
				<newfuncname>PanicStub20(void)</newfuncname>
				<funcpos>99</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CSmsMessage::SetCompressionSettings(TGsmCompressionSettings const &amp;)</funcname>
				<newfuncname>PanicStub21(void)</newfuncname>
				<funcpos>103</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CSARStore::SetExtraStreamIdL(TStreamId)</funcname>
				<newfuncname>PanicStub22(void)</newfuncname>
				<funcpos>108</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>TGsmCompressionSettings::SetHuffmanInitializationID(int, int)</funcname>
				<newfuncname>PanicStub23(void)</newfuncname>
				<funcpos>111</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>TGsmCompressionSettings::SetKeywordDictionaryID(int, int)</funcname>
				<newfuncname>PanicStub24(void)</newfuncname>
				<funcpos>114</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CSmsPDU::SetParsedServiceCenterAddressL(TGsmTelNumber const &amp;)</funcname>
				<newfuncname>PanicStub25(void)</newfuncname>
				<funcpos>123</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CSmsPDU::SetParsedToFromAddressL(TGsmTelNumber const &amp;)</funcname>
				<newfuncname>PanicStub26(void)</newfuncname>
				<funcpos>124</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>TGsmCompressionSettings::SetPunctuatorID(int, int)</funcname>
				<newfuncname>PanicStub27(void)</newfuncname>
				<funcpos>126</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CGsmCompressionBase::CGsmCompressionBase(RFs &amp;)</funcname>
				<newfuncname>PanicStub28(void)</newfuncname>
				<funcpos>170</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>TGsmCompressionSettings::TGsmCompressionSettings(void)</funcname>
				<newfuncname>PanicStub29(void)</newfuncname>
				<funcpos>171</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CGsmCompressionBase::Reserved(void)</funcname>
				<newfuncname>PanicStub30(void)</newfuncname>
				<funcpos>175</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CSARStore::CloseFile(void)</funcname>
				<newfuncname>PanicStub31(void)</newfuncname>
				<funcpos>193</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CSARStore::OpenFileLC(void)</funcname>
				<newfuncname>PanicStub32(void)</newfuncname>
				<funcpos>194</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsPreDefAnimationIE::DuplicateL(void) const</newfuncname>
				<newfuncpos>197</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CSmsMessage::EncodeIntoSinglePDUL(CArrayFix&lt;TGsmSms&gt; &amp;)</newfuncname>
				<newfuncpos>198</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsPictureIE::GetBitmapL(void) const</newfuncname>
				<newfuncpos>199</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsAnimationIE::GetBitmapL(void) const</newfuncname>
				<newfuncpos>200</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CSmsMessage::GetEMSInformationElementsL(void) const</newfuncname>
				<newfuncpos>201</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CSmsEMSBufferSegmenter::NewLC(CSmsAlphabetConverter &amp;, CSmsBufferBase const &amp;, int)</newfuncname>
				<newfuncpos>202</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsSoundIE::NewL(TDesC8 const &amp;)</newfuncname>
				<newfuncpos>203</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsFormatIE::NewL(void)</newfuncname>
				<newfuncpos>204</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsPictureIE::NewL(CFbsBitmap const &amp;)</newfuncname>
				<newfuncpos>205</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsUserPrompt::NewL(unsigned int)</newfuncname>
				<newfuncpos>206</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsAnimationIE::NewL(CFbsBitmap const &amp;)</newfuncname>
				<newfuncpos>207</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsPreDefSoundIE::NewL(CEmsPreDefSoundIE::TPredefinedSound)</newfuncname>
				<newfuncpos>208</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsPreDefAnimationIE::NewL(CEmsPreDefAnimationIE::TAnimType)</newfuncname>
				<newfuncpos>209</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CSmsMessage::RemoveEMSInformationElementL(unsigned int, CSmsInformationElement::TSmsInformationElementIdentifier)</newfuncname>
				<newfuncpos>210</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CSmsMessage::RemoveEMSInformationElementsL(unsigned int, CSmsInformationElement::TSmsInformationElementIdentifier)</newfuncname>
				<newfuncpos>211</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CSmsMessage::ResetEMSL(void)</newfuncname>
				<newfuncpos>212</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CSmsEMSBufferSegmenter::SegmentNextL(TDes8 &amp;, int)</newfuncname>
				<newfuncpos>213</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsSoundIE::~CEmsSoundIE(void)</newfuncname>
				<newfuncpos>214</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsPictureIE::~CEmsPictureIE(void)</newfuncname>
				<newfuncpos>215</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsAnimationIE::~CEmsAnimationIE(void)</newfuncname>
				<newfuncpos>216</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CSmsMessage::AddEMSInformationElementL(CEmsInformationElement const &amp;)</newfuncname>
				<newfuncpos>217</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CSmsMessage::CopyEmsElementsL(CSmsMessage &amp;) const</newfuncname>
				<newfuncpos>218</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsFormatIE::Alignment(void) const</newfuncname>
				<newfuncpos>219</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsPreDefAnimationIE::Animation(void) const</newfuncname>
				<newfuncpos>220</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsFormatIE::Bold(void) const</newfuncname>
				<newfuncpos>221</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CSmsInformationElement::Data(void)</newfuncname>
				<newfuncpos>222</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CSmsInformationElement::Data(void) const</newfuncname>
				<newfuncpos>223</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsInformationElement::EncodeInformationElementL(void)</newfuncname>
				<newfuncpos>224</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsFormatIE::FontSize(void) const</newfuncname>
				<newfuncpos>225</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsFormatIE::FormatLength(void) const</newfuncname>
				<newfuncpos>226</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CSmsInformationElement::Identifier(void) const</newfuncname>
				<newfuncpos>227</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsFormatIE::Italic(void) const</newfuncname>
				<newfuncpos>228</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsInformationElement::Length(void) const</newfuncname>
				<newfuncpos>229</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsSoundIE::Melody(void) const</newfuncname>
				<newfuncpos>230</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsUserPrompt::ObjectCount(void) const</newfuncname>
				<newfuncpos>231</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsPreDefSoundIE::PredefinedSound(void) const</newfuncname>
				<newfuncpos>232</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsFormatIE::SetAlignment(CEmsFormatIE::TAlignment)</newfuncname>
				<newfuncpos>233</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsPreDefAnimationIE::SetAnimationL(CEmsPreDefAnimationIE::TAnimType)</newfuncname>
				<newfuncpos>234</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsFormatIE::SetBold(int)</newfuncname>
				<newfuncpos>235</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsFormatIE::SetFontSize(CEmsFormatIE::TFontSize)</newfuncname>
				<newfuncpos>236</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsFormatIE::SetFormatLength(unsigned int)</newfuncname>
				<newfuncpos>237</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsFormatIE::SetItalic(int)</newfuncname>
				<newfuncpos>238</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsUserPrompt::SetObjectCount(unsigned int)</newfuncname>
				<newfuncpos>239</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsInformationElement::SetStartPosition(unsigned int)</newfuncname>
				<newfuncpos>240</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsFormatIE::SetStrikethrough(int)</newfuncname>
				<newfuncpos>241</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsFormatIE::SetUnderline(int)</newfuncname>
				<newfuncpos>242</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsPictureIE::SizeInPixels(void) const</newfuncname>
				<newfuncpos>243</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsInformationElement::StartPosition(void) const</newfuncname>
				<newfuncpos>244</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsFormatIE::Strikethrough(void) const</newfuncname>
				<newfuncpos>245</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsFormatIE::Underline(void) const</newfuncname>
				<newfuncpos>246</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CSmsMessage::AddSlotL(TGsmSmsSlot const &amp;)</newfuncname>
				<newfuncpos>247</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CSmsMessage::MatchSlots(CArrayFixFlat&lt;TGsmSmsSlot&gt; const &amp;)</newfuncname>
				<newfuncpos>248</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>TGsmSmsSlot::TGsmSmsSlot(void)</newfuncname>
				<newfuncpos>249</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>TGsmSmsSlot::TGsmSmsSlot(RMobileSmsStore::TMobileGsmSmsEntryV1 const &amp;)</newfuncname>
				<newfuncpos>250</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsObjectDistribution::CopyL(CEmsObjectDistribution const &amp;)</newfuncname>
				<newfuncpos>251</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsObjectDistribution::DuplicateL(void) const</newfuncname>
				<newfuncpos>252</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsObjectDistribution::Forwarding(void) const</newfuncname>
				<newfuncpos>253</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsObjectDistribution::NewL(unsigned int, CEmsObjectDistribution::TAttrs)</newfuncname>
				<newfuncpos>254</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsObjectDistribution::ObjectCount(void) const</newfuncname>
				<newfuncpos>255</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsObjectDistribution::SetForwarding(CEmsObjectDistribution::TAttrs)</newfuncname>
				<newfuncpos>256</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsObjectDistribution::SetObjectCount(unsigned int)</newfuncname>
				<newfuncpos>257</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CSARStore::CommitTransactionL(void)</newfuncname>
				<newfuncpos>258</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>TGsmSmsTypeOfAddress::ConvertToETelMM(RMobilePhone::TMobileTON &amp;, RMobilePhone::TMobileNPI &amp;) const</newfuncname>
				<newfuncpos>259</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CSmsMessage::DecodeMessagePDUsL(CArrayFix&lt;TGsmSms&gt; const &amp;)</newfuncname>
				<newfuncpos>260</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CSmsPDU::EncodeMessagePDUL(TGsmSms &amp;) const</newfuncname>
				<newfuncpos>261</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CSmsMessage::EncodeMessagePDUsL(CArrayFix&lt;TGsmSms&gt; &amp;, int)</newfuncname>
				<newfuncpos>262</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CSmsMessage::NewL(RFs &amp;, CSmsPDU::TSmsPDUType, CSmsBufferBase *, int)</newfuncname>
				<newfuncpos>263</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CSmsMessage::NewL(RFs &amp;, TGsmSms const &amp;, CSmsBufferBase *, int, int)</newfuncname>
				<newfuncpos>264</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CSmsPDU::NewL(TGsmSms const &amp;, CCnvCharacterSetConverter &amp;, RFs &amp;, int, int)</newfuncname>
				<newfuncpos>265</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CSARStore::BeginTransactionLC(void)</newfuncname>
				<newfuncpos>266</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CSARStore::OpenL(TDesC16 const &amp;, TUid const &amp;)</newfuncname>
				<newfuncpos>267</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CSmsPDU::ParsedServiceCenterAddress(TGsmSmsTelNumber &amp;) const</newfuncname>
				<newfuncpos>268</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CSmsPDU::ParsedToFromAddress(TGsmSmsTelNumber &amp;) const</newfuncname>
				<newfuncpos>269</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CSARStore::SetExtraStreamIdL(TStreamId const &amp;)</newfuncname>
				<newfuncpos>270</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CSmsPDU::SetParsedServiceCenterAddressL(TGsmSmsTelNumber const &amp;)</newfuncname>
				<newfuncpos>271</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CSmsPDU::SetParsedToFromAddressL(TGsmSmsTelNumber const &amp;)</newfuncname>
				<newfuncpos>272</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CSmsPDU::SetShortMessageType(TSmsProtocolIdentifier::TSmsShortMessageType)</newfuncname>
				<newfuncpos>273</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CSmsPDU::ShortMessageType(void) const</newfuncname>
				<newfuncpos>274</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>TGsmSmsTypeOfAddress::SetFromETelMM(RMobilePhone::TMobileTON, RMobilePhone::TMobileNPI)</newfuncname>
				<newfuncpos>275</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CSARStore::DoOpenL(void)</newfuncname>
				<newfuncpos>276</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsSoundIE::CopyL(CEmsSoundIE const &amp;)</newfuncname>
				<newfuncpos>277</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsFormatIE::CopyL(CEmsFormatIE const &amp;)</newfuncname>
				<newfuncpos>278</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsPictureIE::CopyL(CEmsPictureIE const &amp;)</newfuncname>
				<newfuncpos>279</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsUserPrompt::CopyL(CEmsUserPrompt const &amp;)</newfuncname>
				<newfuncpos>280</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsAnimationIE::CopyL(CEmsAnimationIE const &amp;)</newfuncname>
				<newfuncpos>281</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsPreDefSoundIE::CopyL(CEmsPreDefSoundIE const &amp;)</newfuncname>
				<newfuncpos>282</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsPreDefAnimationIE::CopyL(CEmsPreDefAnimationIE const &amp;)</newfuncname>
				<newfuncpos>283</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsSoundIE::DuplicateL(void) const</newfuncname>
				<newfuncpos>284</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsFormatIE::DuplicateL(void) const</newfuncname>
				<newfuncpos>285</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsPictureIE::DuplicateL(void) const</newfuncname>
				<newfuncpos>286</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsUserPrompt::DuplicateL(void) const</newfuncname>
				<newfuncpos>287</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsAnimationIE::DuplicateL(void) const</newfuncname>
				<newfuncpos>288</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEmsPreDefSoundIE::DuplicateL(void) const</newfuncname>
				<newfuncpos>289</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CSmsMessage::UpdateSlotsL(TDesC8 &amp;)</newfuncname>
				<newfuncpos>290</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\hayes.lib</name>
			<comparefilename></comparefilename>
			<shortname>hayes</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>1</typeid>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\httptcphnd.lib</name>
			<comparefilename></comparefilename>
			<shortname>httptcphnd</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>1</typeid>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\imageuploaderui.lib</name>
			<comparefilename></comparefilename>
			<shortname>imageuploaderui</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>1</typeid>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\imut.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\imut.lib</comparefilename>
			<shortname>imut</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>6</typeid>
				<funcname>CImTextServerSession::QueueConnect(TRequestStatus &amp;, TDesC16 const &amp;, int, TCallBack, unsigned long, TCommDbDatabaseType, int)</funcname>
				<newfuncname>CImTextServerSession::QueueConnect(TRequestStatus &amp;, TDesC16 const &amp;, int, TCallBack, unsigned long, int, int)</newfuncname>
				<funcpos>52</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CImTextServerSession::QueueConnect(TRequestStatus &amp;, TDesC16 const &amp;, int, unsigned long, TCommDbDatabaseType, int)</funcname>
				<newfuncname>CImTextServerSession::QueueConnect(TRequestStatus &amp;, TDesC16 const &amp;, int, unsigned long, int, int)</newfuncname>
				<funcpos>54</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CImTextServerSession::QueueConnect(TRequestStatus &amp;, TDesC16 const &amp;, int, TCallBack, CImIAPPreferences const &amp;, TCommDbDatabaseType, int)</funcname>
				<newfuncname>CImTextServerSession::QueueConnect(TRequestStatus &amp;, TDesC16 const &amp;, int, TCallBack, CImIAPPreferences const &amp;, int, int)</newfuncname>
				<funcpos>88</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CImTextServerSession::QueueConnect(TRequestStatus &amp;, TDesC16 const &amp;, int, CImIAPPreferences const &amp;, TCommDbDatabaseType, int)</funcname>
				<newfuncname>CImTextServerSession::QueueConnect(TRequestStatus &amp;, TDesC16 const &amp;, int, CImIAPPreferences const &amp;, int, int)</newfuncname>
				<funcpos>89</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CImTextServerSession::SetSSLTLSResponseL(TDesC8 const &amp;)</newfuncname>
				<newfuncpos>96</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CImTextServerSession::SSLQueueConnectL(TRequestStatus &amp;, TDesC16 const &amp;, int, CImIAPPreferences const &amp;, int)</newfuncname>
				<newfuncpos>97</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CImTextServerSession::GetConnectionStage(void)</newfuncname>
				<newfuncpos>98</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\ircomm.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\ircomm.lib</comparefilename>
			<shortname>ircomm</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>6</typeid>
				<funcname>LibEntry</funcname>
				<newfuncname>LibEntry(void)</newfuncname>
				<funcpos>1</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\irda.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\irda.lib</comparefilename>
			<shortname>irda</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>6</typeid>
				<funcname>InstallIrda</funcname>
				<newfuncname>InstallIrda(void)</newfuncname>
				<funcpos>1</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\irda_via_pod.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\irda_via_pod.lib</comparefilename>
			<shortname>irda_via_pod</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>6</typeid>
				<funcname>InstallIrda</funcname>
				<newfuncname>InstallIrda(void)</newfuncname>
				<funcpos>1</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\irobex.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\irobex.lib</comparefilename>
			<shortname>irobex</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>6</typeid>
				<funcname>CObexBufObject::HurricaneGetStub(void)</funcname>
				<newfuncname>CObexBufObject::DataBuf(void)</newfuncname>
				<funcpos>42</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CObexServer::SetTargetChecking(CObexServer::TTargetChecking)</newfuncname>
				<newfuncpos>49</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\irobutil.lib</name>
			<comparefilename></comparefilename>
			<shortname>irobutil</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>1</typeid>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\kmidrun.lib</name>
			<comparefilename></comparefilename>
			<shortname>kmidrun</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>1</typeid>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\mediaclient.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\mediaclient.lib</comparefilename>
			<shortname>mediaclient</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>6</typeid>
				<funcname>RMdaSession::Connect(int)</funcname>
				<newfuncname>RDummyMdaSession::Connect(int)</newfuncname>
				<funcpos>4</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RMdaSession::ConnectL(int)</funcname>
				<newfuncname>RDummyMdaSession::ConnectL(int)</newfuncname>
				<funcpos>5</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RMdaSession::ConnectLC(int)</funcname>
				<newfuncname>RDummyMdaSession::ConnectLC(int)</newfuncname>
				<funcpos>6</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RMdaObject::SynchPackage(short, TMdaRawPackage const &amp;) const</funcname>
				<newfuncname>RDummyMdaObject::SynchPackage(short, TMdaRawPackage const &amp;) const</newfuncname>
				<funcpos>7</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RMdaObject::AsynchMessage(short, TRequestStatus &amp;, void const *, void const *) const</funcname>
				<newfuncname>RDummyMdaObject::AsynchMessage(short, TRequestStatus &amp;, void const *, void const *) const</newfuncname>
				<funcpos>8</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RMdaObject::AsynchPackageCreateMessage(RMdaObject const &amp;, short, TRequestStatus &amp;, TMdaOpenPackage &amp;)</funcname>
				<newfuncname>RDummyMdaObject::AsynchPackageCreateMessage(RDummyMdaObject const &amp;, short, TRequestStatus &amp;, TMdaOpenPackage &amp;)</newfuncname>
				<funcpos>9</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RMdaObject::AsynchPackageReturn(short, TRequestStatus &amp;, TMdaReturnPackage const &amp;, TMdaRawPackage *&amp;) const</funcname>
				<newfuncname>RDummyMdaObject::AsynchPackageReturn(short, TRequestStatus &amp;, TMdaReturnPackage const &amp;, TMdaRawPackage *&amp;) const</newfuncname>
				<funcpos>10</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RMdaObject::AsynchPackage(short, TRequestStatus &amp;, TMdaRawPackage const &amp;) const</funcname>
				<newfuncname>RDummyMdaObject::AsynchPackage(short, TRequestStatus &amp;, TMdaRawPackage const &amp;) const</newfuncname>
				<funcpos>11</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RMdaObject::BlindMessageL(short, void const *, void const *, void const *) const</funcname>
				<newfuncname>RDummyMdaObject::BlindMessageL(short, void const *, void const *, void const *) const</newfuncname>
				<funcpos>12</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RMdaObject::BlindMessage(short, void const *, void const *, void const *) const</funcname>
				<newfuncname>RDummyMdaObject::BlindMessage(short, void const *, void const *, void const *) const</newfuncname>
				<funcpos>13</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RMdaObject::CancelCreateMessage(TRequestStatus &amp;)</funcname>
				<newfuncname>RDummyMdaObject::CancelCreateMessage(TRequestStatus &amp;)</newfuncname>
				<funcpos>14</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RMdaSession::CancelGetListenerEvents(void)</funcname>
				<newfuncname>RDummyMdaSession::CancelGetListenerEvents(void)</newfuncname>
				<funcpos>15</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RMdaObject::CancelMessage(TRequestStatus &amp;) const</funcname>
				<newfuncname>RDummyMdaObject::CancelMessage(TRequestStatus &amp;) const</newfuncname>
				<funcpos>16</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RMdaObject::Close(void)</funcname>
				<newfuncname>RDummyMdaObject::Close(void)</newfuncname>
				<funcpos>17</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RMdaSession::GetListenerEvents(TMdaEventPackage &amp;, TRequestStatus &amp;)</funcname>
				<newfuncname>RDummyMdaSession::GetListenerEvents(TMdaEventPackage &amp;, TRequestStatus &amp;)</newfuncname>
				<funcpos>18</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RMdaSession::ListenToL(RMdaObject const &amp;)</funcname>
				<newfuncname>RDummyMdaSession::ListenToL(RDummyMdaObject const &amp;)</newfuncname>
				<funcpos>19</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RMdaSession::ListenTo(RMdaObject const &amp;)</funcname>
				<newfuncname>RDummyMdaSession::ListenTo(RDummyMdaObject const &amp;)</newfuncname>
				<funcpos>20</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RMdaSession::SetListenerParametersL(TMdaEventPackage &amp;, int)</funcname>
				<newfuncname>RDummyMdaSession::SetListenerParametersL(TMdaEventPackage &amp;, int)</newfuncname>
				<funcpos>21</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RMdaSession::SetListenerParameters(TMdaEventPackage &amp;, int)</funcname>
				<newfuncname>RDummyMdaSession::SetListenerParameters(TMdaEventPackage &amp;, int)</newfuncname>
				<funcpos>22</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RMdaSession::StopListeningTo(RMdaObject const &amp;)</funcname>
				<newfuncname>RDummyMdaSession::StopListeningTo(RDummyMdaObject const &amp;)</newfuncname>
				<funcpos>23</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RMdaObject::SynchCreateMessageLC(RMdaObject const &amp;, short, void *)</funcname>
				<newfuncname>RDummyMdaObject::SynchCreateMessageLC(RDummyMdaObject const &amp;, short, void *)</newfuncname>
				<funcpos>24</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RMdaObject::SynchCreateMessageL(RMdaObject const &amp;, short, void *)</funcname>
				<newfuncname>RDummyMdaObject::SynchCreateMessageL(RDummyMdaObject const &amp;, short, void *)</newfuncname>
				<funcpos>25</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RMdaObject::SynchCreateMessage(RMdaObject const &amp;, short, void *)</funcname>
				<newfuncname>RDummyMdaObject::SynchCreateMessage(RDummyMdaObject const &amp;, short, void *)</newfuncname>
				<funcpos>26</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RMdaObject::SynchMessageL(short, void const *, void const *, void const *) const</funcname>
				<newfuncname>RDummyMdaObject::SynchMessageL(short, void const *, void const *, void const *) const</newfuncname>
				<funcpos>27</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RMdaObject::SynchMessage(short, void const *, void const *, void const *) const</funcname>
				<newfuncname>RDummyMdaObject::SynchMessage(short, void const *, void const *, void const *) const</newfuncname>
				<funcpos>28</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RMdaObject::SynchPackageCreateMessageLC(RMdaObject const &amp;, short, TMdaOpenPackage &amp;)</funcname>
				<newfuncname>RDummyMdaObject::SynchPackageCreateMessageLC(RDummyMdaObject const &amp;, short, TMdaOpenPackage &amp;)</newfuncname>
				<funcpos>29</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RMdaObject::SynchPackageCreateMessageL(RMdaObject const &amp;, short, TMdaOpenPackage &amp;)</funcname>
				<newfuncname>RDummyMdaObject::SynchPackageCreateMessageL(RDummyMdaObject const &amp;, short, TMdaOpenPackage &amp;)</newfuncname>
				<funcpos>30</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RMdaObject::SynchPackageCreateMessage(RMdaObject const &amp;, short, TMdaOpenPackage &amp;)</funcname>
				<newfuncname>RDummyMdaObject::SynchPackageCreateMessage(RDummyMdaObject const &amp;, short, TMdaOpenPackage &amp;)</newfuncname>
				<funcpos>31</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RMdaObject::SynchPackageL(short, TMdaRawPackage const &amp;) const</funcname>
				<newfuncname>RDummyMdaObject::SynchPackageL(short, TMdaRawPackage const &amp;) const</newfuncname>
				<funcpos>32</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RMdaObject::SynchPackageReturnLC(short, TMdaReturnPackage const &amp;, TMdaRawPackage *&amp;) const</funcname>
				<newfuncname>RDummyMdaObject::SynchPackageReturnLC(short, TMdaReturnPackage const &amp;, TMdaRawPackage *&amp;) const</newfuncname>
				<funcpos>33</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RMdaObject::SynchPackageReturnL(short, TMdaReturnPackage const &amp;, TMdaRawPackage *&amp;) const</funcname>
				<newfuncname>RDummyMdaObject::SynchPackageReturnL(short, TMdaReturnPackage const &amp;, TMdaRawPackage *&amp;) const</newfuncname>
				<funcpos>34</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RMdaObject::SynchPackageReturn(short, TMdaReturnPackage const &amp;, TMdaRawPackage *&amp;) const</funcname>
				<newfuncname>RDummyMdaObject::SynchPackageReturn(short, TMdaReturnPackage const &amp;, TMdaRawPackage *&amp;) const</newfuncname>
				<funcpos>35</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RMdaObject::AsynchCreateMessage(RMdaObject const &amp;, short, TRequestStatus &amp;, void *)</funcname>
				<newfuncname>RDummyMdaObject::AsynchCreateMessage(RDummyMdaObject const &amp;, short, TRequestStatus &amp;, void *)</newfuncname>
				<funcpos>36</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CMdaRecognizer::CMdaRecognizer(void)</funcname>
				<newfuncname>CDummyMdaRecognizer::CDummyMdaRecognizer(void)</newfuncname>
				<funcpos>37</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CMdaRecognizer::BuildListL(void)</funcname>
				<newfuncname>CDummyMdaRecognizer::BuildListL(void)</newfuncname>
				<funcpos>38</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CMdaController::ConnectL(MMdaSrcPort *, MMdaDstPort *, TUid)</funcname>
				<newfuncname>CDummyMdaController::ConnectL(MDummyMdaSrcPort *, MDummyMdaDstPort *, TUid)</newfuncname>
				<funcpos>39</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CMdaRecognizer::Match(TDesC16 const &amp;, TDesC8 const &amp;)</funcname>
				<newfuncname>CDummyMdaRecognizer::Match(TDesC16 const &amp;, TDesC8 const &amp;)</newfuncname>
				<funcpos>42</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CMdaRecognizer::MimeString(void)</funcname>
				<newfuncname>CDummyMdaRecognizer::MimeString(void)</newfuncname>
				<funcpos>43</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CMdaController::NewL(CMdaServer *, MMdaObjectStateChangeObserver &amp;)</funcname>
				<newfuncname>CDummyMdaController::NewL(CMdaServer *, MMdaObjectStateChangeObserver &amp;)</newfuncname>
				<funcpos>45</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CMdaRecognizer::NumMimeTypes(void)</funcname>
				<newfuncname>CDummyMdaRecognizer::NumMimeTypes(void)</newfuncname>
				<funcpos>46</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CMdaController::Pause(void)</funcname>
				<newfuncname>CDummyMdaController::Pause(void)</newfuncname>
				<funcpos>47</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CMdaController::Play(void)</funcname>
				<newfuncname>CDummyMdaController::Play(void)</newfuncname>
				<funcpos>48</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CMdaController::Prepare(void)</funcname>
				<newfuncname>CDummyMdaController::Prepare(void)</newfuncname>
				<funcpos>49</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CMdaController::Prime(void)</funcname>
				<newfuncname>CDummyMdaController::Prime(void)</newfuncname>
				<funcpos>50</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CMdaController::Reset(void)</funcname>
				<newfuncname>CDummyMdaController::Reset(void)</newfuncname>
				<funcpos>52</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CMdaController::SetPriorityL(int, TMdaPriorityPreference)</funcname>
				<newfuncname>CDummyMdaController::SetPriorityL(int, TMdaPriorityPreference)</newfuncname>
				<funcpos>53</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CMdaController::Stop(void)</funcname>
				<newfuncname>CDummyMdaController::Stop(void)</newfuncname>
				<funcpos>55</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CMdaRecognizer::SupportedDataTypeL(int) const</funcname>
				<newfuncname>CDummyMdaRecognizer::SupportedDataTypeL(int) const</newfuncname>
				<funcpos>56</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CMdaController::Unprepare(void)</funcname>
				<newfuncname>CDummyMdaController::Unprepare(void)</newfuncname>
				<funcpos>57</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CMdaController::~CMdaController(void)</funcname>
				<newfuncname>CDummyMdaController::~CDummyMdaController(void)</newfuncname>
				<funcpos>59</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CMdaRecognizer::~CMdaRecognizer(void)</funcname>
				<newfuncname>CDummyMdaRecognizer::~CDummyMdaRecognizer(void)</newfuncname>
				<funcpos>60</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CMdaResource::CMdaResource(int)</funcname>
				<newfuncname>CDummyMdaResource::CDummyMdaResource(int)</newfuncname>
				<funcpos>61</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>RMdaSession::Close(void)</funcname>
				<newfuncname>RDummyMdaSession::Close(void)</newfuncname>
				<funcpos>63</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\mediaclientaudio.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\mediaclientaudio.lib</comparefilename>
			<shortname>mediaclientaudio</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>6</typeid>
				<funcname>CMdaAudioPlayerUtility::NewDesPlayerL(TDes8 &amp;, MMdaAudioPlayerCallback &amp;, int, TMdaPriorityPreference, CMdaServer *)</funcname>
				<newfuncname>CMdaAudioPlayerUtility::NewDesPlayerL(TDesC8 const &amp;, MMdaAudioPlayerCallback &amp;, int, TMdaPriorityPreference, CMdaServer *)</newfuncname>
				<funcpos>4</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>PadFunction1(void)</newfuncname>
				<newfuncpos>8</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>PadFunction2(void)</newfuncname>
				<newfuncpos>9</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>PadFunction3(void)</newfuncname>
				<newfuncpos>10</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioConvertUtility::DestinationBitRateL(void)</newfuncname>
				<newfuncpos>11</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioRecorderUtility::DestinationBitRateL(void)</newfuncname>
				<newfuncpos>12</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioConvertUtility::DestinationDataTypeL(void)</newfuncname>
				<newfuncpos>13</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioRecorderUtility::DestinationDataTypeL(void)</newfuncname>
				<newfuncpos>14</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioConvertUtility::DestinationFormatL(void)</newfuncname>
				<newfuncpos>15</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioRecorderUtility::DestinationFormatL(void)</newfuncname>
				<newfuncpos>16</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioConvertUtility::DestinationNumberOfChannelsL(void)</newfuncname>
				<newfuncpos>17</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioRecorderUtility::DestinationNumberOfChannelsL(void)</newfuncname>
				<newfuncpos>18</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioConvertUtility::DestinationSampleRateL(void)</newfuncname>
				<newfuncpos>19</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioRecorderUtility::DestinationSampleRateL(void)</newfuncname>
				<newfuncpos>20</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioToneUtility::GetBalanceL(void)</newfuncname>
				<newfuncpos>21</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioPlayerUtility::GetBalance(int &amp;)</newfuncname>
				<newfuncpos>22</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioRecorderUtility::GetGain(int &amp;)</newfuncname>
				<newfuncpos>23</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioPlayerUtility::GetMetaDataEntryL(int)</newfuncname>
				<newfuncpos>24</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioRecorderUtility::GetMetaDataEntryL(int)</newfuncname>
				<newfuncpos>25</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioPlayerUtility::GetNumberOfMetaDataEntries(int &amp;)</newfuncname>
				<newfuncpos>26</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioRecorderUtility::GetNumberOfMetaDataEntries(int &amp;)</newfuncname>
				<newfuncpos>27</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioRecorderUtility::GetPlaybackBalance(int &amp;)</newfuncname>
				<newfuncpos>28</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioPlayerUtility::GetPosition(TTimeIntervalMicroSeconds &amp;)</newfuncname>
				<newfuncpos>29</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioRecorderUtility::GetRecordBalance(int &amp;)</newfuncname>
				<newfuncpos>30</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioRecorderUtility::GetSupportedBitRatesL(RArray&lt;unsigned int&gt; &amp;)</newfuncname>
				<newfuncpos>31</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioConvertUtility::GetSupportedConversionBitRatesL(RArray&lt;unsigned int&gt; &amp;)</newfuncname>
				<newfuncpos>32</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioConvertUtility::GetSupportedConversionNumberOfChannelsL(RArray&lt;unsigned int&gt; &amp;)</newfuncname>
				<newfuncpos>33</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioConvertUtility::GetSupportedConversionSampleRatesL(RArray&lt;unsigned int&gt; &amp;)</newfuncname>
				<newfuncpos>34</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioConvertUtility::GetSupportedDestinationDataTypesL(RArray&lt;TFourCC&gt; &amp;)</newfuncname>
				<newfuncpos>35</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioRecorderUtility::GetSupportedDestinationDataTypesL(RArray&lt;TFourCC&gt; &amp;)</newfuncname>
				<newfuncpos>36</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioRecorderUtility::GetSupportedNumberOfChannelsL(RArray&lt;unsigned int&gt; &amp;)</newfuncname>
				<newfuncpos>37</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioRecorderUtility::GetSupportedSampleRatesL(RArray&lt;unsigned int&gt; &amp;)</newfuncname>
				<newfuncpos>38</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioPlayerUtility::GetVolume(int &amp;)</newfuncname>
				<newfuncpos>39</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioRecorderUtility::GetVolume(int &amp;)</newfuncname>
				<newfuncpos>40</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioToneUtility::NewL(MMdaAudioToneObserver &amp;, CMdaServer *, int, TMdaPriorityPreference)</newfuncname>
				<newfuncpos>41</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioPlayerUtility::NewL(MMdaAudioPlayerCallback &amp;, int, TMdaPriorityPreference)</newfuncname>
				<newfuncpos>42</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>PadFunction4(void)</newfuncname>
				<newfuncpos>43</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>PadFunction5(void)</newfuncname>
				<newfuncpos>44</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>PadFunction6(void)</newfuncname>
				<newfuncpos>45</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioPlayerUtility::OpenDesL(TDesC8 const &amp;)</newfuncname>
				<newfuncpos>46</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioRecorderUtility::OpenDesL(TDes8 &amp;, TUid, TUid, TUid, TFourCC)</newfuncname>
				<newfuncpos>47</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioPlayerUtility::OpenFileL(TDesC16 const &amp;)</newfuncname>
				<newfuncpos>48</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioRecorderUtility::OpenFileL(TDesC16 const &amp;, TUid, TUid, TUid, TFourCC)</newfuncname>
				<newfuncpos>49</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioConvertUtility::OpenL(TMdaClipLocation *, TMdaClipLocation *, TUid, TUid, TFourCC)</newfuncname>
				<newfuncpos>50</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioPlayerUtility::OpenUrlL(TDesC16 const &amp;, int, TDesC8 const &amp;)</newfuncname>
				<newfuncpos>51</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioRecorderUtility::OpenUrlL(TDesC16 const &amp;, int, TUid, TUid, TUid, TFourCC)</newfuncname>
				<newfuncpos>52</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioRecorderUtility::OpenUrlL(TDesC16 const &amp;, int, TDesC8 const &amp;)</newfuncname>
				<newfuncpos>53</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioPlayerUtility::Pause(void)</newfuncname>
				<newfuncpos>54</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioRecorderUtility::RemoveMetaDataEntry(int)</newfuncname>
				<newfuncpos>55</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioRecorderUtility::ReplaceMetaDataEntryL(int, CMMFMetaDataEntry &amp;)</newfuncname>
				<newfuncpos>56</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioToneUtility::SetBalanceL(int)</newfuncname>
				<newfuncpos>57</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioPlayerUtility::SetBalance(int)</newfuncname>
				<newfuncpos>58</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioConvertUtility::SetDestinationBitRateL(unsigned int)</newfuncname>
				<newfuncpos>59</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioRecorderUtility::SetDestinationBitRateL(unsigned int)</newfuncname>
				<newfuncpos>60</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioConvertUtility::SetDestinationDataTypeL(TFourCC)</newfuncname>
				<newfuncpos>61</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioRecorderUtility::SetDestinationDataTypeL(TFourCC)</newfuncname>
				<newfuncpos>62</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioConvertUtility::SetDestinationFormatL(TUid)</newfuncname>
				<newfuncpos>63</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioRecorderUtility::SetDestinationFormatL(TUid)</newfuncname>
				<newfuncpos>64</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioConvertUtility::SetDestinationNumberOfChannelsL(unsigned int)</newfuncname>
				<newfuncpos>65</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioRecorderUtility::SetDestinationNumberOfChannelsL(unsigned int)</newfuncname>
				<newfuncpos>66</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioConvertUtility::SetDestinationSampleRateL(unsigned int)</newfuncname>
				<newfuncpos>67</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioRecorderUtility::SetDestinationSampleRateL(unsigned int)</newfuncname>
				<newfuncpos>68</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioPlayerUtility::SetPlayWindow(TTimeIntervalMicroSeconds const &amp;, TTimeIntervalMicroSeconds const &amp;)</newfuncname>
				<newfuncpos>69</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioRecorderUtility::SetPlaybackBalance(int)</newfuncname>
				<newfuncpos>70</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioPlayerUtility::SetPosition(TTimeIntervalMicroSeconds const &amp;)</newfuncname>
				<newfuncpos>71</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioPlayerUtility::SetPriority(int, TMdaPriorityPreference)</newfuncname>
				<newfuncpos>72</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioRecorderUtility::SetPriority(int, TMdaPriorityPreference)</newfuncname>
				<newfuncpos>73</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioRecorderUtility::SetRecordBalance(int)</newfuncname>
				<newfuncpos>74</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioConvertUtility::SourceBitRateL(void)</newfuncname>
				<newfuncpos>75</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioConvertUtility::SourceDataTypeL(void)</newfuncname>
				<newfuncpos>76</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioConvertUtility::SourceFormatL(void)</newfuncname>
				<newfuncpos>77</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioConvertUtility::SourceNumberOfChannelsL(void)</newfuncname>
				<newfuncpos>78</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioConvertUtility::SourceSampleRateL(void)</newfuncname>
				<newfuncpos>79</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioRecorderUtility::AddMetaDataEntryL(CMMFMetaDataEntry &amp;)</newfuncname>
				<newfuncpos>80</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioRecorderUtility::OpenDesL(TDes8 &amp;)</newfuncname>
				<newfuncpos>81</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioRecorderUtility::AudioPlayControllerImplementationInformationL(void)</newfuncname>
				<newfuncpos>82</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioRecorderUtility::AudioRecorderControllerImplementationInformationL(void)</newfuncname>
				<newfuncpos>83</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioPlayerUtility::ControllerImplementationInformationL(void)</newfuncname>
				<newfuncpos>84</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioConvertUtility::ControllerImplementationInformationL(void)</newfuncname>
				<newfuncpos>85</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioPlayerUtility::CustomCommandAsync(TPckgBuf&lt;TMMFMessageDestination&gt; const &amp;, int, TDesC8 const &amp;, TDesC8 const &amp;, TRequestStatus &amp;)</newfuncname>
				<newfuncpos>86</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioPlayerUtility::CustomCommandAsync(TPckgBuf&lt;TMMFMessageDestination&gt; const &amp;, int, TDesC8 const &amp;, TDesC8 const &amp;, TDes8 &amp;, TRequestStatus &amp;)</newfuncname>
				<newfuncpos>87</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioConvertUtility::CustomCommandAsync(TPckgBuf&lt;TMMFMessageDestination&gt; const &amp;, int, TDesC8 const &amp;, TDesC8 const &amp;, TRequestStatus &amp;)</newfuncname>
				<newfuncpos>88</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioConvertUtility::CustomCommandAsync(TPckgBuf&lt;TMMFMessageDestination&gt; const &amp;, int, TDesC8 const &amp;, TDesC8 const &amp;, TDes8 &amp;, TRequestStatus &amp;)</newfuncname>
				<newfuncpos>89</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioPlayerUtility::CustomCommandSync(TPckgBuf&lt;TMMFMessageDestination&gt; const &amp;, int, TDesC8 const &amp;, TDesC8 const &amp;)</newfuncname>
				<newfuncpos>90</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioPlayerUtility::CustomCommandSync(TPckgBuf&lt;TMMFMessageDestination&gt; const &amp;, int, TDesC8 const &amp;, TDesC8 const &amp;, TDes8 &amp;)</newfuncname>
				<newfuncpos>91</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioConvertUtility::CustomCommandSync(TPckgBuf&lt;TMMFMessageDestination&gt; const &amp;, int, TDesC8 const &amp;, TDesC8 const &amp;)</newfuncname>
				<newfuncpos>92</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioConvertUtility::CustomCommandSync(TPckgBuf&lt;TMMFMessageDestination&gt; const &amp;, int, TDesC8 const &amp;, TDesC8 const &amp;, TDes8 &amp;)</newfuncname>
				<newfuncpos>93</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioPlayerUtility::GetAudioLoadingProgressL(int &amp;)</newfuncname>
				<newfuncpos>94</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioRecorderUtility::GetAudioLoadingProgressL(int &amp;)</newfuncname>
				<newfuncpos>95</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioRecorderUtility::PlayControllerCustomCommandAsync(TPckgBuf&lt;TMMFMessageDestination&gt; const &amp;, int, TDesC8 const &amp;, TDesC8 const &amp;, TRequestStatus &amp;)</newfuncname>
				<newfuncpos>96</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioRecorderUtility::PlayControllerCustomCommandAsync(TPckgBuf&lt;TMMFMessageDestination&gt; const &amp;, int, TDesC8 const &amp;, TDesC8 const &amp;, TDes8 &amp;, TRequestStatus &amp;)</newfuncname>
				<newfuncpos>97</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioRecorderUtility::PlayControllerCustomCommandSync(TPckgBuf&lt;TMMFMessageDestination&gt; const &amp;, int, TDesC8 const &amp;, TDesC8 const &amp;)</newfuncname>
				<newfuncpos>98</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioRecorderUtility::PlayControllerCustomCommandSync(TPckgBuf&lt;TMMFMessageDestination&gt; const &amp;, int, TDesC8 const &amp;, TDesC8 const &amp;, TDes8 &amp;)</newfuncname>
				<newfuncpos>99</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioRecorderUtility::RecordControllerCustomCommandAsync(TPckgBuf&lt;TMMFMessageDestination&gt; const &amp;, int, TDesC8 const &amp;, TDesC8 const &amp;, TRequestStatus &amp;)</newfuncname>
				<newfuncpos>100</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioRecorderUtility::RecordControllerCustomCommandAsync(TPckgBuf&lt;TMMFMessageDestination&gt; const &amp;, int, TDesC8 const &amp;, TDesC8 const &amp;, TDes8 &amp;, TRequestStatus &amp;)</newfuncname>
				<newfuncpos>101</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioRecorderUtility::RecordControllerCustomCommandSync(TPckgBuf&lt;TMMFMessageDestination&gt; const &amp;, int, TDesC8 const &amp;, TDesC8 const &amp;)</newfuncname>
				<newfuncpos>102</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioRecorderUtility::RecordControllerCustomCommandSync(TPckgBuf&lt;TMMFMessageDestination&gt; const &amp;, int, TDesC8 const &amp;, TDesC8 const &amp;, TDes8 &amp;)</newfuncname>
				<newfuncpos>103</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioPlayerUtility::RegisterForAudioLoadingNotification(MAudioLoadingObserver &amp;)</newfuncname>
				<newfuncpos>104</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioRecorderUtility::RegisterForAudioLoadingNotification(MAudioLoadingObserver &amp;)</newfuncname>
				<newfuncpos>105</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioPlayerUtility::ClearPlayWindow(void)</newfuncname>
				<newfuncpos>106</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioPlayerUtility::Close(void)</newfuncname>
				<newfuncpos>107</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioConvertUtility::ConvertL(void)</newfuncname>
				<newfuncpos>108</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\mediaclientaudiostream.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\mediaclientaudiostream.lib</comparefilename>
			<shortname>mediaclientaudiostream</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioOutputStreamPadFunction1(void)</newfuncname>
				<newfuncpos>2</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioOutputStream::GetBalanceL(void) const</newfuncname>
				<newfuncpos>3</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioOutputStream::GetBytes(void)</newfuncname>
				<newfuncpos>4</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioOutputStream::SetBalanceL(int)</newfuncname>
				<newfuncpos>5</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioOutputStream::DataType(void) const</newfuncname>
				<newfuncpos>6</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioOutputStream::SetDataTypeL(TFourCC)</newfuncname>
				<newfuncpos>7</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaAudioOutputStream::NewL(MMdaAudioOutputStreamCallback &amp;, int, TMdaPriorityPreference)</newfuncname>
				<newfuncpos>8</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\mediaclientimage.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\mediaclientimage.lib</comparefilename>
			<shortname>mediaclientimage</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>6</typeid>
				<funcname>CMdaImageUtility::FrameInfo(int, TFrameInfo &amp;) const</funcname>
				<newfuncname>CMdaImageUtility::FrameInfo(int, TFrameInfoMCL &amp;) const</newfuncname>
				<funcpos>17</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMdaImageDataReadUtility::FrameCommentL(int)</newfuncname>
				<newfuncpos>35</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>ImageReadUtilSourcePort_Reserved(void)</newfuncname>
				<newfuncpos>36</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\mediaservervideo.lib</name>
			<comparefilename></comparefilename>
			<shortname>mediaservervideo</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>1</typeid>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\mp4lib.lib</name>
			<comparefilename></comparefilename>
			<shortname>mp4lib</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>1</typeid>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\mrouteragent.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\mrouteragent.lib</comparefilename>
			<shortname>mrouteragent</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>4</typeid>
				<funcname>RMRouterAgent::Open(void)</funcname>
				<funcpos>2</funcpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>4</typeid>
				<funcname>RMRouterAgent::Start(RMRouterAgent::TConnectType)</funcname>
				<funcpos>3</funcpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\mrouterclient.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\mrouterclient.lib</comparefilename>
			<shortname>mrouterclient</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>6</typeid>
				<funcname>CConnectionStatus::NewL(RSocketServ &amp;, RNif &amp;, MmRConnectionStateObserver &amp;)</funcname>
				<newfuncname>CConnectionStatus::NewL(RmRouterClient &amp;, MmRConnectionStateObserver &amp;)</newfuncname>
				<funcpos>14</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>RmRouterClient::USBListenStartL(TmRUSBProperties const &amp;)</newfuncname>
				<newfuncpos>19</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>RmRouterClient::USBListenStatusL(TUSBListenStatus *)</newfuncname>
				<newfuncpos>20</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>RmRouterClient::USBListenStopL(void)</newfuncname>
				<newfuncpos>21</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>RmRouterClient::MRCancelWaitForStatusChange(void)</newfuncname>
				<newfuncpos>22</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>RmRouterClient::MRGetRConnectionNameL(TBuf&lt;128&gt; *)</newfuncname>
				<newfuncpos>23</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>RmRouterClient::MRWaitForStatusChange(TPckgBuf&lt;TmRStatus&gt; *, TRequestStatus &amp;)</newfuncname>
				<newfuncpos>24</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>RmRouterClient::MRConfigL(TmRConfigEx *)</newfuncname>
				<newfuncpos>25</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>RmRouterClient::MRSetConfigExL(TmRConfigEx const &amp;)</newfuncname>
				<newfuncpos>26</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\msgeditormodel.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\msgeditormodel.lib</comparefilename>
			<shortname>msgeditormodel</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>7</typeid>
				<newfuncname>MsgEditorCommons::MaxBodyHeight(void)</newfuncname>
				<newfuncpos>79</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>MsgEditorCommons::MsgBaseLineDelta(void)</newfuncname>
				<newfuncpos>80</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\msgs.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\msgs.lib</comparefilename>
			<shortname>msgs</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMtmDllInfo::CapabilitiesAvailable(void) const</newfuncname>
				<newfuncpos>374</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMtmDllInfo::MessagingCapability(void) const</newfuncname>
				<newfuncpos>375</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMtmDllInfo::SendBodyCapability(void) const</newfuncname>
				<newfuncpos>376</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMsvOperationActiveSchedulerWait::NewLC(int)</newfuncname>
				<newfuncpos>377</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMsvOperationActiveSchedulerWait::Start(void)</newfuncname>
				<newfuncpos>378</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMsvOperationActiveSchedulerWait::~CMsvOperationActiveSchedulerWait(void)</newfuncname>
				<newfuncpos>379</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMsvServerEntry::CopyEntriesL(CMsvEntrySelection const &amp;, long, CMsvEntrySelection &amp;, TRequestStatus &amp;)</newfuncname>
				<newfuncpos>380</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CMsvServerEntry::CopyEntryL(long, long, long &amp;, TRequestStatus &amp;)</newfuncname>
				<newfuncpos>381</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\mtur.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\mtur.lib</comparefilename>
			<shortname>mtur</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>7</typeid>
				<newfuncname>MturUtils::LaunchEditorAndWaitL(long)</newfuncname>
				<newfuncpos>34</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\muiu.lib</name>
			<comparefilename></comparefilename>
			<shortname>muiu</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>1</typeid>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\nifman.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\nifman.lib</comparefilename>
			<shortname>nifman</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>6</typeid>
				<funcname>CNifCompanionSession::CNifCompanionSession(CSession &amp;)</funcname>
				<newfuncname>NonExistentImport1</newfuncname>
				<funcpos>98</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CNetwork::AddAgentL(CNifAgentBase *)</newfuncname>
				<newfuncpos>107</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CNetworkControllerBase::AddBearerL(CBearerBase *)</newfuncname>
				<newfuncpos>108</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CNetworkControllerBase::AddNetworkL(CNetwork *)</newfuncname>
				<newfuncpos>109</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CBearerBase::AnyBearerAvailable(int &amp;)</newfuncname>
				<newfuncpos>110</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentBase::Authenticate(TDes16 &amp;, TDes16 &amp;)</newfuncname>
				<newfuncpos>111</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CDialogProcessor::Authenticate(MDialogProcessorObserver &amp;, TDes16 &amp;, TDes16 &amp;, int)</newfuncname>
				<newfuncpos>112</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CBearerBase::AvailableBearerSet(void) const</newfuncname>
				<newfuncpos>113</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentBase::CancelAuthenticate(void)</newfuncname>
				<newfuncpos>114</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CStateMachineAgentBase::CancelConnect(void)</newfuncname>
				<newfuncpos>115</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CDialogProcessor::CancelEverything(void)</newfuncname>
				<newfuncpos>116</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentBase::CancelReconnect(void)</newfuncname>
				<newfuncpos>117</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentBase::CancelRequestNotificationOfServiceChange(MAgentSessionNotify *)</newfuncname>
				<newfuncpos>118</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEventLogger::Cancel(void)</newfuncname>
				<newfuncpos>119</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CDialogProcessor::ClosePct(void)</newfuncname>
				<newfuncpos>120</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCommsDbAccess::Close(void)</newfuncname>
				<newfuncpos>121</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentSMBase::CompleteState(int)</newfuncname>
				<newfuncpos>122</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CStateMachineAgentBase::Connect(TAgentConnectType)</newfuncname>
				<newfuncpos>123</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CStateMachineAgentBase::Connect(TAgentConnectType, CStoreableOverrideSettings *)</newfuncname>
				<newfuncpos>124</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentSMBase::ConnectionComplete(int)</newfuncname>
				<newfuncpos>125</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentSMBase::ConnectionComplete(int, int)</newfuncname>
				<newfuncpos>126</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CStateMachineAgentBase::ConnectionComplete(int)</newfuncname>
				<newfuncpos>127</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CStateMachineAgentBase::ConnectionComplete(int, int)</newfuncname>
				<newfuncpos>128</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentSMBase::ConnectionContinuation(CAgentSMBase::TSMContinueConnectType)</newfuncname>
				<newfuncpos>129</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentBase::ConnectionSettingsL(void)</newfuncname>
				<newfuncpos>130</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentBase::ConstructL(void)</newfuncname>
				<newfuncpos>131</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CBearerBase::ConstructL(void)</newfuncname>
				<newfuncpos>132</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CStateMachineAgentBase::ConstructL(void)</newfuncname>
				<newfuncpos>133</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CNetwork::ConstructL(void)</newfuncname>
				<newfuncpos>134</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CNifAgentBase::Control(unsigned int, unsigned int, TDes8 &amp;)</newfuncname>
				<newfuncpos>135</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>Nif::CreateAgentL(TDesC16 const &amp;, int)</newfuncname>
				<newfuncpos>136</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>Nif::CreateInterfaceL(TDesC16 const &amp;, MNifIfNotify *)</newfuncname>
				<newfuncpos>137</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentSMBase::Db(void)</newfuncname>
				<newfuncpos>138</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CDialogProcessor::DestroyPctNotification(MDialogProcessorObserver &amp;)</newfuncname>
				<newfuncpos>139</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentSMBase::DisconnectComplete(void)</newfuncname>
				<newfuncpos>140</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CStateMachineAgentBase::DisconnectComplete(void)</newfuncname>
				<newfuncpos>141</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CStateMachineAgentBase::Disconnect(int)</newfuncname>
				<newfuncpos>142</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentSMBase::DlgPrc(void)</newfuncname>
				<newfuncpos>143</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentSMBase::DoCancel(void)</newfuncname>
				<newfuncpos>144</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CNetwork::FindAgentByIap(unsigned long, CNifAgentBase *&amp;) const</newfuncname>
				<newfuncpos>145</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CNetworkControllerBase::FindNetworkById(unsigned long, CNetwork *&amp;) const</newfuncname>
				<newfuncpos>146</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCommsDbAccess::GetBearerAvailabilityTsyNameL(TDes16 &amp;)</newfuncname>
				<newfuncpos>147</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCommsDbAccess::GetBoolL(TDesC16 const &amp;, TDesC16 const &amp;, int &amp;)</newfuncname>
				<newfuncpos>148</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCommsDbAccess::GetConnectionAttempts(void)</newfuncname>
				<newfuncpos>149</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCommsDbAccess::GetConnectionDirection(void) const</newfuncname>
				<newfuncpos>150</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCommsDbAccess::GetCurrentSettingsL(TConnectionSettings &amp;, TCommDbConnectionDirection, unsigned long)</newfuncname>
				<newfuncpos>151</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCommsDbAccess::GetDesL(TDesC16 const &amp;, TDesC16 const &amp;, TDes8 &amp;)</newfuncname>
				<newfuncpos>152</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCommsDbAccess::GetDesL(TDesC16 const &amp;, TDesC16 const &amp;, TDes16 &amp;)</newfuncname>
				<newfuncpos>153</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CStateMachineAgentBase::GetExcessData(TDes8 &amp;)</newfuncname>
				<newfuncpos>154</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCommsDbAccess::GetGlobalL(TDesC16 const &amp;, unsigned long &amp;)</newfuncname>
				<newfuncpos>155</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCommsDbAccess::GetIntL(TDesC16 const &amp;, TDesC16 const &amp;, unsigned long &amp;)</newfuncname>
				<newfuncpos>156</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentSMBase::GetLastError(int &amp;)</newfuncname>
				<newfuncpos>157</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CStateMachineAgentBase::GetLastError(int &amp;)</newfuncname>
				<newfuncpos>158</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCommsDbAccess::GetLengthOfLongDesL(TDesC16 const &amp;, TDesC16 const &amp;)</newfuncname>
				<newfuncpos>159</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCommsDbAccess::GetLongDesLC(TDesC16 const &amp;, TDesC16 const &amp;)</newfuncname>
				<newfuncpos>160</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCommsDbAccess::GetServiceSettingsL(TConnectionSettings &amp;)</newfuncname>
				<newfuncpos>161</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCommsDbAccess::GetServiceTypeL(TDes16 &amp;)</newfuncname>
				<newfuncpos>162</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCommsDbAccess::GetTsyNameL(TDes16 &amp;)</newfuncname>
				<newfuncpos>163</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentSMBase::IncomingConnectionReceived(void)</newfuncname>
				<newfuncpos>164</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CStateMachineAgentBase::IncomingConnectionReceived(void)</newfuncname>
				<newfuncpos>165</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentBase::IsActive(void) const</newfuncname>
				<newfuncpos>166</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CStateMachineAgentBase::IsReconnect(void) const</newfuncname>
				<newfuncpos>167</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCommsDbAccess::IsTelNumLengthZeroForRasConnectionL(TConnectionSettings &amp;)</newfuncname>
				<newfuncpos>168</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentStateBase::JumpToRunl(int)</newfuncname>
				<newfuncpos>169</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCommsDbAccess::LocationId(void) const</newfuncname>
				<newfuncpos>170</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEventLogger::LogCallEnd(TRequestStatus &amp;)</newfuncname>
				<newfuncpos>171</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEventLogger::LogCallStart(TDesC16 const &amp;, int, TDesC16 const &amp;, TUid, TRequestStatus &amp;)</newfuncname>
				<newfuncpos>172</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEventLogger::LogDataTransferred(TInt64, TInt64, TUid, TRequestStatus &amp;)</newfuncname>
				<newfuncpos>173</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CDialogProcessor::Login(MDialogProcessorObserver &amp;, TDes16 &amp;, TDes16 &amp;, int)</newfuncname>
				<newfuncpos>174</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentBase::MDPOAuthenticateComplete(int)</newfuncname>
				<newfuncpos>175</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>MDialogProcessorObserver::MDPOAuthenticateComplete(int)</newfuncname>
				<newfuncpos>176</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>MDialogProcessorObserver::MDPODestroyPctComplete(int)</newfuncname>
				<newfuncpos>177</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>MDialogProcessorObserver::MDPOLoginComplete(int)</newfuncname>
				<newfuncpos>178</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>MDialogProcessorObserver::MDPOQoSWarningComplete(int, int)</newfuncname>
				<newfuncpos>179</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>MDialogProcessorObserver::MDPOReadPctComplete(int)</newfuncname>
				<newfuncpos>180</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>MDialogProcessorObserver::MDPOReconnectComplete(int)</newfuncname>
				<newfuncpos>181</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>MDialogProcessorObserver::MDPOSelectComplete(int, TConnectionSettings const &amp;)</newfuncname>
				<newfuncpos>182</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>MDialogProcessorObserver::MDPOSelectModemAndLocationComplete(int, TConnectionSettings const &amp;)</newfuncname>
				<newfuncpos>183</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>MDialogProcessorObserver::MDPOWarnComplete(int, int)</newfuncname>
				<newfuncpos>184</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCommsDbAccess::ModemTable(void)</newfuncname>
				<newfuncpos>185</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CNetwork::NetworkId(void) const</newfuncname>
				<newfuncpos>186</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCommsDbAccess::NetworkMode(void) const</newfuncname>
				<newfuncpos>187</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>Nif::NewConnectionL(MConnectionNotify *)</newfuncname>
				<newfuncpos>188</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CNifIfFactory::NewInterfaceL(TDesC16 const &amp;, MNifIfNotify *)</newfuncname>
				<newfuncpos>189</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CNetwork::NewLC(unsigned long, CNetworkControllerBase *)</newfuncname>
				<newfuncpos>190</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEventLogger::NewL(void)</newfuncname>
				<newfuncpos>191</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCommsDbAccess::NewL(void)</newfuncname>
				<newfuncpos>192</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CDialogProcessor::NewL(int)</newfuncname>
				<newfuncpos>193</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CNetwork::NewL(unsigned long, CNetworkControllerBase *)</newfuncname>
				<newfuncpos>194</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentSMBase::Notification(TAgentToNifEventType, void *)</newfuncname>
				<newfuncpos>195</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CStateMachineAgentBase::Notification(TAgentToNifEventType, void *)</newfuncname>
				<newfuncpos>196</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CStateMachineAgentBase::Notification(TNifToAgentEventType, void *)</newfuncname>
				<newfuncpos>197</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CDialogProcessor::OpenPct(void)</newfuncname>
				<newfuncpos>198</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentBase::OverridesL(void)</newfuncname>
				<newfuncpos>199</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentSMBase::PreventConnectionRetries(void)</newfuncname>
				<newfuncpos>200</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CStateMachineAgentBase::PreventConnectionRetries(void)</newfuncname>
				<newfuncpos>201</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CDialogProcessor::QoSWarning(MDialogProcessorObserver &amp;)</newfuncname>
				<newfuncpos>202</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentBase::ReadBool(TDesC16 const &amp;, int &amp;)</newfuncname>
				<newfuncpos>203</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCommsDbAccess::ReadBool(TDesC16 const &amp;, int &amp;)</newfuncname>
				<newfuncpos>204</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentBase::ReadDes(TDesC16 const &amp;, TDes8 &amp;)</newfuncname>
				<newfuncpos>205</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentBase::ReadDes(TDesC16 const &amp;, TDes16 &amp;)</newfuncname>
				<newfuncpos>206</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCommsDbAccess::ReadDes(TDesC16 const &amp;, TDes8 &amp;)</newfuncname>
				<newfuncpos>207</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCommsDbAccess::ReadDes(TDesC16 const &amp;, TDes16 &amp;)</newfuncname>
				<newfuncpos>208</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentBase::ReadInt(TDesC16 const &amp;, unsigned long &amp;)</newfuncname>
				<newfuncpos>209</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCommsDbAccess::ReadInt(TDesC16 const &amp;, unsigned long &amp;)</newfuncname>
				<newfuncpos>210</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentBase::ReadLongDesLC(TDesC16 const &amp;)</newfuncname>
				<newfuncpos>211</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCommsDbAccess::ReadLongDesLC(TDesC16 const &amp;)</newfuncname>
				<newfuncpos>212</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CDialogProcessor::ReadPct(MDialogProcessorObserver &amp;, TDes16 &amp;)</newfuncname>
				<newfuncpos>213</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentBase::ReconnectComplete(int)</newfuncname>
				<newfuncpos>214</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentBase::Reconnect(void)</newfuncname>
				<newfuncpos>215</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CDialogProcessor::Reconnect(MDialogProcessorObserver &amp;)</newfuncname>
				<newfuncpos>216</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CBearerBase::RemoveAgentL(CNifAgentBase *)</newfuncname>
				<newfuncpos>217</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CNetwork::RemoveAgentL(CNifAgentBase *)</newfuncname>
				<newfuncpos>218</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentBase::RequestNotificationOfServiceChangeL(MAgentSessionNotify *)</newfuncname>
				<newfuncpos>219</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentSMBase::RunL(void)</newfuncname>
				<newfuncpos>220</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CBearerBase::SecondPhaseAvailability(void)</newfuncname>
				<newfuncpos>221</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentBase::SelectComplete(TDesC16 const &amp;)</newfuncname>
				<newfuncpos>222</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentBase::SelectComplete(int)</newfuncname>
				<newfuncpos>223</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CDialogProcessor::SelectConnection(MDialogProcessorObserver &amp;, TConnectionPrefs const &amp;)</newfuncname>
				<newfuncpos>224</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CDialogProcessor::SelectConnection(MDialogProcessorObserver &amp;, TConnectionPrefs const &amp;, int)</newfuncname>
				<newfuncpos>225</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CDialogProcessor::SelectModemAndLocation(MDialogProcessorObserver &amp;)</newfuncname>
				<newfuncpos>226</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentBase::ServiceChangeNotification(unsigned long, TDesC16 const &amp;)</newfuncname>
				<newfuncpos>227</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentSMBase::ServiceStarted(void)</newfuncname>
				<newfuncpos>228</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CStateMachineAgentBase::ServiceStarted(void)</newfuncname>
				<newfuncpos>229</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCommsDbAccess::SetCommPortL(RCall::TCommPort const &amp;)</newfuncname>
				<newfuncpos>230</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentBase::SetConnectionSettingsL(TConnectionSettings const &amp;)</newfuncname>
				<newfuncpos>231</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCommsDbAccess::SetCurrentSettingsL(TConnectionSettings const &amp;)</newfuncname>
				<newfuncpos>232</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCommsDbAccess::SetModemAndLocationL(TConnectionSettings const &amp;)</newfuncname>
				<newfuncpos>233</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCommsDbAccess::SetNetworkMode(RMobilePhone::TMobilePhoneNetworkMode)</newfuncname>
				<newfuncpos>234</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentBase::SetOverridesL(CStoreableOverrideSettings *)</newfuncname>
				<newfuncpos>235</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCommsDbAccess::SetOverridesL(CCommDbOverrideSettings *)</newfuncname>
				<newfuncpos>236</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>RNif::Start(void *, TRequestStatus &amp;)</newfuncname>
				<newfuncpos>237</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CBearerBase::SupportedBearerSet(void) const</newfuncname>
				<newfuncpos>238</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CBearerBase::UpdateObserver(void)</newfuncname>
				<newfuncpos>239</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentSMBase::UpdateProgress(int, int)</newfuncname>
				<newfuncpos>240</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CStateMachineAgentBase::UpdateProgress(int, int)</newfuncname>
				<newfuncpos>241</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CDialogProcessor::WarnNewConnection(MDialogProcessorObserver &amp;, TConnectionPrefs const &amp;, TDesC16 const *, TIspConnectionNames const *, int)</newfuncname>
				<newfuncpos>242</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentBase::WriteBool(TDesC16 const &amp;, int)</newfuncname>
				<newfuncpos>243</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCommsDbAccess::WriteBool(TDesC16 const &amp;, int)</newfuncname>
				<newfuncpos>244</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentBase::WriteDes(TDesC16 const &amp;, TDesC8 const &amp;)</newfuncname>
				<newfuncpos>245</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentBase::WriteDes(TDesC16 const &amp;, TDesC16 const &amp;)</newfuncname>
				<newfuncpos>246</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCommsDbAccess::WriteDes(TDesC16 const &amp;, TDesC8 const &amp;)</newfuncname>
				<newfuncpos>247</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCommsDbAccess::WriteDes(TDesC16 const &amp;, TDesC16 const &amp;)</newfuncname>
				<newfuncpos>248</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentBase::WriteInt(TDesC16 const &amp;, unsigned long)</newfuncname>
				<newfuncpos>249</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCommsDbAccess::WriteInt(TDesC16 const &amp;, unsigned long)</newfuncname>
				<newfuncpos>250</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CDialogProcessor::WritePct(TDesC16 const &amp;)</newfuncname>
				<newfuncpos>251</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentBase::~CAgentBase(void)</newfuncname>
				<newfuncpos>252</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CBearerBase::~CBearerBase(void)</newfuncname>
				<newfuncpos>253</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentSMBase::~CAgentSMBase(void)</newfuncname>
				<newfuncpos>254</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEventLogger::~CEventLogger(void)</newfuncname>
				<newfuncpos>255</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCommsDbAccess::~CCommsDbAccess(void)</newfuncname>
				<newfuncpos>256</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentStateBase::~CAgentStateBase(void)</newfuncname>
				<newfuncpos>257</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CDialogProcessor::~CDialogProcessor(void)</newfuncname>
				<newfuncpos>258</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CNetworkControllerBase::~CNetworkControllerBase(void)</newfuncname>
				<newfuncpos>259</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CStateMachineAgentBase::~CStateMachineAgentBase(void)</newfuncname>
				<newfuncpos>260</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CNetwork::~CNetwork(void)</newfuncname>
				<newfuncpos>261</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentBase::CAgentBase(void)</newfuncname>
				<newfuncpos>262</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CBearerBase::CBearerBase(MBearerObserver *)</newfuncname>
				<newfuncpos>263</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentSMBase::CAgentSMBase(MAgentNotify &amp;, CDialogProcessor *, CCommsDbAccess &amp;)</newfuncname>
				<newfuncpos>264</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CAgentStateBase::CAgentStateBase(MAgentStateMachineEnv &amp;)</newfuncname>
				<newfuncpos>265</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>TConnectionSettings::TConnectionSettings(void)</newfuncname>
				<newfuncpos>266</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CNetworkControllerBase::CNetworkControllerBase(void)</newfuncname>
				<newfuncpos>267</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CStateMachineAgentBase::CStateMachineAgentBase(void)</newfuncname>
				<newfuncpos>268</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CNetwork::CNetwork(unsigned long, CNetworkControllerBase *)</newfuncname>
				<newfuncpos>269</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CBearerBase::AddAgentL(CNifAgentBase *)</newfuncname>
				<newfuncpos>270</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CNifIfLink::Restart(CNifIfBase *)</newfuncname>
				<newfuncpos>271</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCommsDbAccess::CancelRequestNotificationOfServiceChange(MServiceChangeObserver *)</newfuncname>
				<newfuncpos>272</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCommsDbAccess::RequestNotificationOfServiceChangeL(MServiceChangeObserver *)</newfuncname>
				<newfuncpos>273</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEventLogger::LogDataAddEvent(int, TDesC16 const &amp;, int, TDesC16 const &amp;, TUid)</newfuncname>
				<newfuncpos>274</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEventLogger::LogDataNotifyLastEventUpdate(TRequestStatus *)</newfuncname>
				<newfuncpos>275</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEventLogger::LogDataUpdateEvent(int, TUid const &amp;)</newfuncname>
				<newfuncpos>276</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CEventLogger::LogDataUpdateEvent(int, TUid const &amp;, TInt64 const &amp;, TInt64 const &amp;)</newfuncname>
				<newfuncpos>277</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCommsDbAccess::GetPreferedIapL(unsigned long &amp;, TCommDbConnectionDirection, unsigned long)</newfuncname>
				<newfuncpos>278</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCommsDbAccess::SetPreferedIapL(unsigned long &amp;, TCommDbConnectionDirection, unsigned long)</newfuncname>
				<newfuncpos>279</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CCommsDbAccess::DoesIapExistL(unsigned long)</newfuncname>
				<newfuncpos>280</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\obexmtmutil.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\obexmtmutil.lib</comparefilename>
			<shortname>obexmtmutil</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>5</typeid>
				<newfuncname>CObexHeader::CObexHeader(TUid, long)</newfuncname>
				<newfuncpos>1</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CObexMtmFileNameExternaliser::CommitStoreL(void)</funcname>
				<funcpos>1</funcpos>
				<newfuncpos>4</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CObexMtmFileNameExternaliser::ExternaliseAndCommit1FileNameL(CMsvEntry *, TUid, TDesC16 const *)</funcname>
				<newfuncname>CObexHeader::BaseExternalizeL(RMsvWriteStream &amp;) const</newfuncname>
				<funcpos>2</funcpos>
				<bc_severity>None</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>5</typeid>
				<newfuncname>CObexHeader::BaseInternalizeL(RMsvReadStream &amp;)</newfuncname>
				<newfuncpos>3</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CObexMtmFileNameExternaliser::ExternaliseFileNameL(TDesC16 const *)</funcname>
				<funcpos>3</funcpos>
				<newfuncpos>12</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>4</typeid>
				<funcname>CObexMtmFileNameExternaliser::Internalise1FileNameL(CMsvEntry *, TUid, TDes16 *)</funcname>
				<funcpos>4</funcpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CObexMtmFileNameExternaliser::InternaliseFileNamesLC(CMsvStore &amp;, TUid)</funcname>
				<newfuncname>CObexHeader::ConnectionID(void) const</newfuncname>
				<funcpos>5</funcpos>
				<bc_severity>None</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CObexMtmFileNameExternaliser::NewL(CMsvSession *, long, TUid)</funcname>
				<newfuncname>CContainer::CopyOfDataLC(void)</newfuncname>
				<funcpos>6</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CContainer::CopyOfDataLC(int)</newfuncname>
				<newfuncpos>7</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CObexFileContainer::CopyOfDataLC(void)</newfuncname>
				<newfuncpos>8</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CObexFileContainer::CopyOfDataLC(int)</newfuncname>
				<newfuncpos>9</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CContainer::CopyToFileContainerLC(RFs &amp;, TDesC16 const &amp;)</newfuncname>
				<newfuncpos>10</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CObexMtmFileNameExternaliser::ExternaliseAndCommit1FileNameL(CMsvEntry *, TDesC16 const *)</newfuncname>
				<newfuncpos>11</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>ObexInternalUtils::ExternalizeL(HBufC8 const *, RWriteStream &amp;)</newfuncname>
				<newfuncpos>13</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>ObexInternalUtils::ExternalizeL(HBufC16 const *, RWriteStream &amp;)</newfuncname>
				<newfuncpos>14</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>ObexInternalUtils::ExternalizeL(TDes8 const &amp;, RWriteStream &amp;)</newfuncname>
				<newfuncpos>15</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>ObexInternalUtils::ExternalizeL(TDes16 const &amp;, RWriteStream &amp;)</newfuncname>
				<newfuncpos>16</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CObexUtils::FinaliseObexMessageL(CMsvSession &amp;, long)</newfuncname>
				<newfuncpos>17</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CBaseContainer::GetHeaderDetailsL(CObexBaseObject &amp;) const</newfuncname>
				<newfuncpos>18</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>ObexPasswordExternaliser::GetPasswordLC(CMsvSession &amp;, TUid const &amp;)</newfuncname>
				<newfuncpos>19</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>ObexPasswordExternaliser::GetPasswordLC(CMsvEntry &amp;)</newfuncname>
				<newfuncpos>20</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CObexMtmFileNameExternaliser::Internalise1FileNameL(CMsvEntry *, TDes16 *)</newfuncname>
				<newfuncpos>21</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CObexMtmFileNameExternaliser::InternaliseFileNamesLC(CMsvStore &amp;)</newfuncname>
				<newfuncpos>22</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>ObexInternalUtils::InternalizeL(TDes8 &amp;, RReadStream &amp;)</newfuncname>
				<newfuncpos>23</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>ObexInternalUtils::InternalizeL(TDes16 &amp;, RReadStream &amp;)</newfuncname>
				<newfuncpos>24</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>ObexInternalUtils::InternalizeL(HBufC8 *&amp;, RReadStream &amp;)</newfuncname>
				<newfuncpos>25</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>ObexInternalUtils::InternalizeL(HBufC16 *&amp;, RReadStream &amp;)</newfuncname>
				<newfuncpos>26</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CObexHeader::Length(void) const</newfuncname>
				<newfuncpos>27</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CContainer::MoveToFile(RFs &amp;, TDesC16 const &amp;)</newfuncname>
				<newfuncpos>28</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CObexFileContainer::MoveToFile(RFs &amp;, TDesC16 const &amp;)</newfuncname>
				<newfuncpos>29</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CObexHeader::Name(void) const</newfuncname>
				<newfuncpos>30</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CObexSdpUtils::NewLC(MObexSdpUtilsObserver &amp;)</newfuncname>
				<newfuncpos>31</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CContainer::NewL(void)</newfuncname>
				<newfuncpos>32</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CContainer::NewL(CBufBase *)</newfuncname>
				<newfuncpos>33</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CObexSdpUtils::NewL(MObexSdpUtilsObserver &amp;)</newfuncname>
				<newfuncpos>34</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CObexFileContainer::NewL(TDesC16 const &amp;)</newfuncname>
				<newfuncpos>35</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CObexMtmFileNameExternaliser::NewL(CMsvSession *, long)</newfuncname>
				<newfuncpos>36</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CContainer::ObexBaseObject(void) const</newfuncname>
				<newfuncpos>37</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CObexFileContainer::ObexBaseObject(void) const</newfuncname>
				<newfuncpos>38</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>ObexInternalUtils::Panic(ObexInternalUtils::TObexInternalUtilsPanic)</newfuncname>
				<newfuncpos>39</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CObexSdpUtils::RemoteBtObexQueryL(TBTDevAddr)</newfuncname>
				<newfuncpos>40</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CObexUtils::RemoveFromInboxL(CMsvSession &amp;, long)</newfuncname>
				<newfuncpos>41</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>ObexPasswordExternaliser::ResetPasswordL(CMsvSession &amp;, TUid const &amp;)</newfuncname>
				<newfuncpos>42</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>ObexPasswordExternaliser::ResetPasswordL(CMsvEntry &amp;)</newfuncname>
				<newfuncpos>43</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CObexHeader::RestoreL(CMsvStore const &amp;)</newfuncname>
				<newfuncpos>44</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CObexUtils::SaveObjToInboxL(CMsvSession &amp;, CBaseContainer &amp;, TUid, long &amp;, TDesC16 &amp;)</newfuncname>
				<newfuncpos>45</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CObexHeader::SetConnectionIDL(TDesC8 const &amp;)</newfuncname>
				<newfuncpos>46</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CBaseContainer::SetHeaderDetailsL(CObexBaseObject &amp;)</newfuncname>
				<newfuncpos>47</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CObexHeader::SetLength(int)</newfuncname>
				<newfuncpos>48</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CObexHeader::SetNameL(TDesC16 const &amp;)</newfuncname>
				<newfuncpos>49</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>ObexPasswordExternaliser::SetPasswordL(CMsvSession &amp;, TUid const &amp;, TDesC16 const &amp;)</newfuncname>
				<newfuncpos>50</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>ObexPasswordExternaliser::SetPasswordL(CMsvEntry &amp;, TDesC16 const &amp;)</newfuncname>
				<newfuncpos>51</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CObexHeader::SetSubjectL(TDesC16 const &amp;)</newfuncname>
				<newfuncpos>52</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CObexHeader::SetTargetL(TDesC8 const &amp;)</newfuncname>
				<newfuncpos>53</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CObexHeader::SetTime(TTime const &amp;)</newfuncname>
				<newfuncpos>54</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CObexHeader::SetTypeL(TDesC8 const &amp;)</newfuncname>
				<newfuncpos>55</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CObexHeader::StoreL(CMsvStore &amp;) const</newfuncname>
				<newfuncpos>56</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CObexHeader::Subject(void) const</newfuncname>
				<newfuncpos>57</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CObexHeader::Target(void) const</newfuncname>
				<newfuncpos>58</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CObexHeader::Time(void) const</newfuncname>
				<newfuncpos>59</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CObexHeader::Type(void) const</newfuncname>
				<newfuncpos>60</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CContainer::~CContainer(void)</newfuncname>
				<newfuncpos>61</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CObexHeader::~CObexHeader(void)</newfuncname>
				<newfuncpos>62</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CObexFileContainer::~CObexFileContainer(void)</newfuncname>
				<newfuncpos>63</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CObexHeader::BaseConstructL(void)</newfuncname>
				<newfuncpos>64</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\obexservermtm.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\obexservermtm.lib</comparefilename>
			<shortname>obexservermtm</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>5</typeid>
				<newfuncname>CObexServerSendOperation::CObexServerSendOperation(TUid, CMsvServerEntry &amp;, int, int, TRequestStatus &amp;)</newfuncname>
				<newfuncpos>1</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CObexSrvMtm::CObexSrvMtm(CRegisteredMtmDll &amp;, CMsvServerEntry *)</funcname>
				<funcpos>1</funcpos>
				<newfuncpos>25</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>5</typeid>
				<newfuncname>CObexServerSendOperation::ConstructL(TDesC16 const *)</newfuncname>
				<newfuncpos>4</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CObexSrvMtm::CopyFromLocalL(CMsvEntrySelection const &amp;, long, TRequestStatus &amp;)</funcname>
				<funcpos>4</funcpos>
				<newfuncpos>5</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CObexSrvMtm::CopyToLocalL(CMsvEntrySelection const &amp;, long, TRequestStatus &amp;)</funcname>
				<funcpos>5</funcpos>
				<newfuncpos>6</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CObexSrvMtm::CopyWithinServiceL(CMsvEntrySelection const &amp;, long, TRequestStatus &amp;)</funcname>
				<funcpos>6</funcpos>
				<newfuncpos>7</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CObexSrvMtm::CreateL(TMsvEntry, TRequestStatus &amp;)</funcname>
				<funcpos>7</funcpos>
				<newfuncpos>8</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CObexSrvMtm::DeleteAllL(CMsvEntrySelection const &amp;, TRequestStatus &amp;)</funcname>
				<funcpos>8</funcpos>
				<newfuncpos>9</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CObexSrvMtm::DeleteL(CMsvEntrySelection const &amp;, TRequestStatus &amp;)</funcname>
				<funcpos>9</funcpos>
				<newfuncpos>10</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CObexSrvMtm::DoCancel(void)</funcname>
				<funcpos>10</funcpos>
				<newfuncpos>11</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CObexSrvMtm::DoComplete(int)</funcname>
				<funcpos>11</funcpos>
				<newfuncpos>13</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>5</typeid>
				<newfuncname>CObexServerSendOperation::DoCancel(void)</newfuncname>
				<newfuncpos>12</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CObexSrvMtm::DoRunL(void)</funcname>
				<funcpos>12</funcpos>
				<newfuncpos>14</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CObexSrvMtm::MoveFromLocalL(CMsvEntrySelection const &amp;, long, TRequestStatus &amp;)</funcname>
				<funcpos>13</funcpos>
				<newfuncpos>16</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CObexSrvMtm::MoveToLocalL(CMsvEntrySelection const &amp;, long, TRequestStatus &amp;)</funcname>
				<funcpos>14</funcpos>
				<newfuncpos>17</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>5</typeid>
				<newfuncname>CObexServerSendOperation::GetUserPasswordL(TDesC16 const &amp;)</newfuncname>
				<newfuncpos>15</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CObexSrvMtm::MoveWithinServiceL(CMsvEntrySelection const &amp;, long, TRequestStatus &amp;)</funcname>
				<funcpos>15</funcpos>
				<newfuncpos>18</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CObexSrvMtm::Progress(void)</funcname>
				<funcpos>16</funcpos>
				<newfuncpos>20</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CObexSrvMtm::SetInitialEntry(CMsvServerEntry *)</funcname>
				<funcpos>17</funcpos>
				<newfuncpos>22</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>4</typeid>
				<funcname>CObexSrvMtm::StartCommandL(CMsvEntrySelection &amp;, int, TDesC8 const &amp;, TRequestStatus &amp;)</funcname>
				<funcpos>18</funcpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>5</typeid>
				<newfuncname>CObexServerSendOperation::ProgressL(void)</newfuncname>
				<newfuncpos>19</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CObexSrvMtm::~CObexSrvMtm(void)</funcname>
				<funcpos>19</funcpos>
				<newfuncpos>23</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CObexSrvMtm::ChangeL(TMsvEntry, TRequestStatus &amp;)</funcname>
				<funcpos>20</funcpos>
				<newfuncpos>26</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CObexServerSendOperation::RunL(void)</newfuncname>
				<newfuncpos>21</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CObexServerSendOperation::~CObexServerSendOperation(void)</newfuncname>
				<newfuncpos>24</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CObexServerSendOperation::SecondPhaseObexClientInitL(void)</newfuncname>
				<newfuncpos>27</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CObexServerSendOperation::CObexServerSendOperation(TUid, CMsvServerEntry &amp;, int, int, TRequestStatus &amp;, int)</newfuncname>
				<newfuncpos>28</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CObexServerSendOperation::CompletingObserver(int)</newfuncname>
				<newfuncpos>29</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\palette.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\palette.lib</comparefilename>
			<shortname>palette</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>6</typeid>
				<funcname>Color16array(void)</funcname>
				<newfuncname>DynamicPalette::Color16array(void)</newfuncname>
				<funcpos>1</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>Color16inverse(void)</funcname>
				<newfuncname>DynamicPalette::Color16inverse(void)</newfuncname>
				<funcpos>2</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>DefaultColor256Util(void)</funcname>
				<newfuncname>DynamicPalette::DefaultColor256Util(void)</newfuncname>
				<funcpos>3</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>SetSeries60ColorScheme(TSeries60ColorScheme)</funcname>
				<newfuncname>DynamicPalette::SetColor256Util(DynamicPalette::TIndex)</newfuncname>
				<funcpos>4</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\pbkeng.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\pbkeng.lib</comparefilename>
			<shortname>pbkeng</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>6</typeid>
				<funcname>PbkSimEntryCopyFactory::CreateLC(CPbkSimEntry &amp;, CPbkContactEngine &amp;)</funcname>
				<newfuncname>__PbkEngine_DummyExport2(void)</newfuncname>
				<funcpos>214</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CPbkSimEntry::Empty(void) const</funcname>
				<newfuncname>__PbkEngine_DummyExport3(void)</newfuncname>
				<funcpos>292</funcpos>
				<bc_severity>None</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CPbkSimEntryManager::FindEmptyEntryL(void)</funcname>
				<newfuncname>__PbkEngine_DummyExport4(void)</newfuncname>
				<funcpos>293</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CPbkSimEntry::Index(void) const</funcname>
				<newfuncname>__PbkEngine_DummyExport5(void)</newfuncname>
				<funcpos>294</funcpos>
				<bc_severity>None</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CPbkSimEntryManager::MaxNumberLength(void) const</funcname>
				<newfuncname>__PbkEngine_DummyExport6(void)</newfuncname>
				<funcpos>295</funcpos>
				<bc_severity>None</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CPbkSimEntryManager::MaxTextLength(void) const</funcname>
				<newfuncname>__PbkEngine_DummyExport7(void)</newfuncname>
				<funcpos>296</funcpos>
				<bc_severity>None</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CPbkSimEntry::Name(void) const</funcname>
				<newfuncname>__PbkEngine_DummyExport8(void)</newfuncname>
				<funcpos>297</funcpos>
				<bc_severity>None</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CPbkSimEntry::NewL(RGsmPhoneBook::TEntry const &amp;, int)</funcname>
				<newfuncname>__PbkEngine_DummyExport9(void)</newfuncname>
				<funcpos>298</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CPbkSimEntryManager::NewL(MPbkSimEntryManagerObserver &amp;)</funcname>
				<newfuncname>__PbkEngine_DummyExport10(void)</newfuncname>
				<funcpos>299</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CPbkSimEntry::Number(void) const</funcname>
				<newfuncname>__PbkEngine_DummyExport11(void)</newfuncname>
				<funcpos>300</funcpos>
				<bc_severity>None</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CPbkSimEntryManager::ReadLC(int)</funcname>
				<newfuncname>__PbkEngine_DummyExport12(void)</newfuncname>
				<funcpos>301</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CPbkSimEntry::SetName(TDesC16 const &amp;)</funcname>
				<newfuncname>__PbkEngine_DummyExport13(void)</newfuncname>
				<funcpos>302</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CPbkSimEntry::SetNumber(TDesC16 const &amp;)</funcname>
				<newfuncname>__PbkEngine_DummyExport14(void)</newfuncname>
				<funcpos>303</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CPbkSimEntryManager::TotalSimEntries(void) const</funcname>
				<newfuncname>__PbkEngine_DummyExport15(void)</newfuncname>
				<funcpos>304</funcpos>
				<bc_severity>None</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CPbkSimEntry::ValidLocation(void) const</funcname>
				<newfuncname>__PbkEngine_DummyExport16(void)</newfuncname>
				<funcpos>305</funcpos>
				<bc_severity>None</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CPbkSimEntryManager::WriteAccess(void) const</funcname>
				<newfuncname>CPbkContactSubView::AddContactL(long)</newfuncname>
				<funcpos>306</funcpos>
				<bc_severity>None</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CPbkSimEntryManager::WriteL(CPbkSimEntry &amp;)</funcname>
				<newfuncname>CPbkContactSubView::RemoveContact(long)</newfuncname>
				<funcpos>307</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CPbkContactEngine::SetNameDisplayOrderL(CPbkContactEngine::TPbkNameOrder)</newfuncname>
				<newfuncpos>326</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CPbkContactEngine::NameDisplayOrderL(void)</newfuncname>
				<newfuncpos>327</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\pbkui.lib</name>
			<comparefilename></comparefilename>
			<shortname>pbkui</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>1</typeid>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\pbkview.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\pbkview.lib</comparefilename>
			<shortname>pbkview</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>6</typeid>
				<funcname>CPbkVoiceTagListBaseDlg::ExecuteLD(void)</funcname>
				<newfuncname>__PbkView_DummyExport10(void)</newfuncname>
				<funcpos>35</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>__PbkView_DummyExport15(void)</funcname>
				<newfuncname>__PbkView_DummyExport12(void)</newfuncname>
				<funcpos>88</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CPbkDummyControlExtension::~CPbkDummyControlExtension(void)</funcname>
				<newfuncname>CPbkIconInfoContainer::AppendIconsFromResourceL(int)</newfuncname>
				<funcpos>263</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CPbkDummyControlExtension::CPbkDummyControlExtension(void)</funcname>
				<newfuncname>__PbkView_DummyExport16(void)</newfuncname>
				<funcpos>264</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CPbkSettingsDlg::ExecuteLD(void)</newfuncname>
				<newfuncpos>266</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CPbkSettingsDlg::NewL(CPbkContactEngine &amp;)</newfuncname>
				<newfuncpos>267</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CPbkURLAddressSelect::AddressField(TPbkContactItemField const &amp;) const</newfuncname>
				<newfuncpos>268</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CPbkURLAddressSelect::ExecuteLD(CPbkURLAddressSelect::TParams &amp;)</newfuncname>
				<newfuncpos>269</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CPbkURLAddressSelect::NoAddressesL(void)</newfuncname>
				<newfuncpos>270</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CPbkURLAddressSelect::QuerySoftkeysResource(void) const</newfuncname>
				<newfuncpos>271</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CPbkURLAddressSelect::QueryTitleL(void)</newfuncname>
				<newfuncpos>272</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CPbkURLAddressSelect::~CPbkURLAddressSelect(void)</newfuncname>
				<newfuncpos>273</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CPbkURLAddressSelect::CPbkURLAddressSelect(void)</newfuncname>
				<newfuncpos>274</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CPbkURLAddressSelect::TParams::TParams(CPbkContactItem const &amp;)</newfuncname>
				<newfuncpos>275</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\pkixcert.lib</name>
			<comparefilename></comparefilename>
			<shortname>pkixcert</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>1</typeid>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\rbinterpreter.lib</name>
			<comparefilename></comparefilename>
			<shortname>rbinterpreter</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>1</typeid>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\sdpdatabase.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\sdpdatabase.lib</comparefilename>
			<shortname>sdpdatabase</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>6</typeid>
				<funcname>CSdpDatabase::ParseDbL(void)</funcname>
				<newfuncname>CSdpDatabase::ParseDbL_Obscelete_DoesNothing(void)</newfuncname>
				<funcpos>71</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\secui.lib</name>
			<comparefilename></comparefilename>
			<shortname>secui</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>1</typeid>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\sml.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\sml.lib</comparefilename>
			<shortname>sml</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>3</typeid>
				<funcname>smlCloseTLS</funcname>
				<funcpos>2</funcpos>
				<newfuncpos>3</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlDeleteCmd</funcname>
				<funcpos>3</funcpos>
				<newfuncpos>5</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>5</typeid>
				<newfuncname>smlCopyCmd</newfuncname>
				<newfuncpos>4</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlEndMessage</funcname>
				<funcpos>4</funcpos>
				<newfuncpos>7</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlEndSync</funcname>
				<funcpos>5</funcpos>
				<newfuncpos>9</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>5</typeid>
				<newfuncname>smlEndAtomic</newfuncname>
				<newfuncpos>6</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlFreeAlert</funcname>
				<funcpos>6</funcpos>
				<newfuncpos>60</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlFreeAtomic</funcname>
				<funcpos>7</funcpos>
				<newfuncpos>61</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>5</typeid>
				<newfuncname>smlEndSequence</newfuncname>
				<newfuncpos>8</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlFreeChalPtr</funcname>
				<funcpos>8</funcpos>
				<newfuncpos>62</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlFreeCredPtr</funcname>
				<funcpos>9</funcpos>
				<newfuncpos>63</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>5</typeid>
				<newfuncname>smlExecCmd</newfuncname>
				<newfuncpos>10</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlFreeExec</funcname>
				<funcpos>10</funcpos>
				<newfuncpos>64</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlFreeGeneric</funcname>
				<funcpos>11</funcpos>
				<newfuncpos>65</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlFreeGetPut</funcname>
				<funcpos>12</funcpos>
				<newfuncpos>66</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlFreeItemList</funcname>
				<funcpos>13</funcpos>
				<newfuncpos>67</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlFreeItemPtr</funcname>
				<funcpos>14</funcpos>
				<newfuncpos>68</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlFreeMap</funcname>
				<funcpos>15</funcpos>
				<newfuncpos>69</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlFreeMapItemList</funcname>
				<funcpos>16</funcpos>
				<newfuncpos>70</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlFreeMapItemPtr</funcname>
				<funcpos>17</funcpos>
				<newfuncpos>71</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlFreeMetinfAnchor</funcname>
				<funcpos>18</funcpos>
				<newfuncpos>72</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlFreeMetinfMem</funcname>
				<funcpos>19</funcpos>
				<newfuncpos>73</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlFreeMetinfMetinf</funcname>
				<funcpos>20</funcpos>
				<newfuncpos>74</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlFreePcdata</funcname>
				<funcpos>21</funcpos>
				<newfuncpos>11</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlFreePcdataList</funcname>
				<funcpos>22</funcpos>
				<newfuncpos>75</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlFreeProtoElement</funcname>
				<funcpos>23</funcpos>
				<newfuncpos>12</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlFreeResults</funcname>
				<funcpos>24</funcpos>
				<newfuncpos>76</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlFreeSearch</funcname>
				<funcpos>25</funcpos>
				<newfuncpos>77</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlFreeSourceList</funcname>
				<funcpos>26</funcpos>
				<newfuncpos>78</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlFreeSourceRefList</funcname>
				<funcpos>27</funcpos>
				<newfuncpos>79</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlFreeSourceTargetPtr</funcname>
				<funcpos>28</funcpos>
				<newfuncpos>80</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlFreeStatus</funcname>
				<funcpos>29</funcpos>
				<newfuncpos>81</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlFreeSync</funcname>
				<funcpos>30</funcpos>
				<newfuncpos>82</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlFreeSyncHdr</funcname>
				<funcpos>31</funcpos>
				<newfuncpos>83</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlFreeTargetRefList</funcname>
				<funcpos>32</funcpos>
				<newfuncpos>84</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlGetCmd</funcname>
				<funcpos>33</funcpos>
				<newfuncpos>13</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlGetFreeBuffer</funcname>
				<funcpos>34</funcpos>
				<newfuncpos>14</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlInit</funcname>
				<funcpos>35</funcpos>
				<newfuncpos>15</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlInitInstance</funcname>
				<funcpos>36</funcpos>
				<newfuncpos>16</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlLibFree</funcname>
				<funcpos>37</funcpos>
				<newfuncpos>17</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlLibMalloc</funcname>
				<funcpos>38</funcpos>
				<newfuncpos>18</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlLibMemcmp</funcname>
				<funcpos>39</funcpos>
				<newfuncpos>19</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlLibMemcpy</funcname>
				<funcpos>40</funcpos>
				<newfuncpos>20</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlLibMemmove</funcname>
				<funcpos>41</funcpos>
				<newfuncpos>21</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlLibMemset</funcname>
				<funcpos>42</funcpos>
				<newfuncpos>22</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlLibPrint</funcname>
				<funcpos>43</funcpos>
				<newfuncpos>23</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlLibRealloc</funcname>
				<funcpos>44</funcpos>
				<newfuncpos>24</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>5</typeid>
				<newfuncname>smlSearchCmd</newfuncname>
				<newfuncpos>45</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlLibStrcat</funcname>
				<funcpos>45</funcpos>
				<newfuncpos>25</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlLibStrchr</funcname>
				<funcpos>46</funcpos>
				<newfuncpos>26</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlLibStrcmp</funcname>
				<funcpos>47</funcpos>
				<newfuncpos>27</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlLibStrcpy</funcname>
				<funcpos>48</funcpos>
				<newfuncpos>28</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlLibStrdup</funcname>
				<funcpos>49</funcpos>
				<newfuncpos>29</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>5</typeid>
				<newfuncname>smlStartAtomic</newfuncname>
				<newfuncpos>50</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlLibStrlen</funcname>
				<funcpos>50</funcpos>
				<newfuncpos>30</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlLibStrncat</funcname>
				<funcpos>51</funcpos>
				<newfuncpos>31</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>5</typeid>
				<newfuncname>smlStartSequence</newfuncname>
				<newfuncpos>52</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlLibStrncmp</funcname>
				<funcpos>52</funcpos>
				<newfuncpos>32</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlLibStrncpy</funcname>
				<funcpos>53</funcpos>
				<newfuncpos>33</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlLibStrstr</funcname>
				<funcpos>54</funcpos>
				<newfuncpos>34</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>4</typeid>
				<funcname>smlLibVprintf</funcname>
				<funcpos>55</funcpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlLockReadBuffer</funcname>
				<funcpos>56</funcpos>
				<newfuncpos>35</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlLockWriteBuffer</funcname>
				<funcpos>57</funcpos>
				<newfuncpos>36</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlMapCmd</funcname>
				<funcpos>58</funcpos>
				<newfuncpos>37</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>5</typeid>
				<newfuncname>smlAddCmd</newfuncname>
				<newfuncpos>59</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlOpenTLS</funcname>
				<funcpos>59</funcpos>
				<newfuncpos>38</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlPcdata2String</funcname>
				<funcpos>60</funcpos>
				<newfuncpos>39</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlPcdataDup</funcname>
				<funcpos>61</funcpos>
				<newfuncpos>40</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlProcessData</funcname>
				<funcpos>62</funcpos>
				<newfuncpos>41</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlPutCmd</funcname>
				<funcpos>63</funcpos>
				<newfuncpos>42</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlReplaceCmd</funcname>
				<funcpos>64</funcpos>
				<newfuncpos>43</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlResultsCmd</funcname>
				<funcpos>65</funcpos>
				<newfuncpos>44</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlSetCallbacks</funcname>
				<funcpos>66</funcpos>
				<newfuncpos>46</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlSetEncoding</funcname>
				<funcpos>67</funcpos>
				<newfuncpos>47</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlSetSyncMLOptions</funcname>
				<funcpos>68</funcpos>
				<newfuncpos>48</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlSetUserData</funcname>
				<funcpos>69</funcpos>
				<newfuncpos>49</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlStartMessage</funcname>
				<funcpos>70</funcpos>
				<newfuncpos>51</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlStartSync</funcname>
				<funcpos>71</funcpos>
				<newfuncpos>53</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlStatusCmd</funcname>
				<funcpos>72</funcpos>
				<newfuncpos>54</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlString2Pcdata</funcname>
				<funcpos>73</funcpos>
				<newfuncpos>55</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlTerminate</funcname>
				<funcpos>74</funcpos>
				<newfuncpos>56</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlTerminateInstance</funcname>
				<funcpos>75</funcpos>
				<newfuncpos>57</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlUnlockReadBuffer</funcname>
				<funcpos>76</funcpos>
				<newfuncpos>58</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>smlAlertCmd</funcname>
				<funcpos>77</funcpos>
				<newfuncpos>2</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\smsu.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\smsu.lib</comparefilename>
			<shortname>smsu</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>3</typeid>
				<funcname>TSmsAddr::IdentifierMatch(void) const</funcname>
				<funcpos>2</funcpos>
				<newfuncpos>9</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>5</typeid>
				<newfuncname>CSmsuActiveBase::CompleteMyself(int, int)</newfuncname>
				<newfuncpos>3</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>TSmsSettings::InternalizeL(RReadStream &amp;)</funcname>
				<funcpos>3</funcpos>
				<newfuncpos>10</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>5</typeid>
				<newfuncname>CSmsuActiveBase::Complete(int)</newfuncname>
				<newfuncpos>4</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>TSmsAddr::SetIdentifierMatch(int)</funcname>
				<funcpos>4</funcpos>
				<newfuncpos>15</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>5</typeid>
				<newfuncname>CSmsuActiveBase::ConstructTimeoutL(void)</newfuncname>
				<newfuncpos>5</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>TSmsAddr::SetSmsAddrFamily(TSmsAddrFamily)</funcname>
				<funcpos>5</funcpos>
				<newfuncpos>16</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>TSmsAddr::SetTextMatch(TDesC8 const &amp;)</funcname>
				<funcpos>6</funcpos>
				<newfuncpos>17</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>TSmsAddr::SmsAddrFamily(void) const</funcname>
				<funcpos>7</funcpos>
				<newfuncpos>18</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>TSmsAddr::TextMatch(void) const</funcname>
				<funcpos>8</funcpos>
				<newfuncpos>19</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>TSmsSettings::TSmsSettings(void)</funcname>
				<funcpos>9</funcpos>
				<newfuncpos>23</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>RSmsSocketReadStream::RSmsSocketReadStream(RSocket &amp;)</funcname>
				<funcpos>10</funcpos>
				<newfuncpos>25</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>RSmsSocketWriteStream::RSmsSocketWriteStream(RSocket &amp;)</funcname>
				<funcpos>11</funcpos>
				<newfuncpos>26</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>5</typeid>
				<newfuncname>CSmsuActiveBase::Queue(TRequestStatus &amp;)</newfuncname>
				<newfuncpos>12</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>TSmsAddr::TSmsAddr(void)</funcname>
				<funcpos>12</funcpos>
				<newfuncpos>27</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>5</typeid>
				<newfuncname>CSmsuActiveBase::RunError(int)</newfuncname>
				<newfuncpos>13</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>TSmsSettings::ExternalizeL(RWriteStream &amp;) const</funcname>
				<funcpos>13</funcpos>
				<newfuncpos>7</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>5</typeid>
				<newfuncname>CSmsuActiveBase::RunL(void)</newfuncname>
				<newfuncpos>14</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CSmsEventLogger::ChangeEvent(TRequestStatus &amp;, CSmsMessage const &amp;, TLogSmsPduData const &amp;, int *)</funcname>
				<funcpos>14</funcpos>
				<newfuncpos>2</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CSmsEventLogger::GetEvent(TRequestStatus &amp;, long)</funcname>
				<funcpos>15</funcpos>
				<newfuncpos>8</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CSmsEventLogger::NewL(RFs &amp;, int)</funcname>
				<funcpos>16</funcpos>
				<newfuncpos>11</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CSmsEventLogger::AddEvent(TRequestStatus &amp;, CSmsMessage const &amp;, TLogSmsPduData const &amp;, int *)</funcname>
				<funcpos>17</funcpos>
				<newfuncpos>28</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CSmsEventLogger::DeleteEvent(TRequestStatus &amp;)</funcname>
				<funcpos>18</funcpos>
				<newfuncpos>6</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CSmsEventLogger::~CSmsEventLogger(void)</funcname>
				<funcpos>19</funcpos>
				<newfuncpos>21</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CSmsuActiveBase::TimedSetActive(TTimeIntervalMicroSeconds32 const &amp;)</newfuncname>
				<newfuncpos>20</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CSmsuActiveBase::~CSmsuActiveBase(void)</newfuncname>
				<newfuncpos>22</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CSmsuActiveBase::CSmsuActiveBase(int)</newfuncname>
				<newfuncpos>24</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CSmsuBackupObserver::IsBackupOperationRunning(void) const</newfuncname>
				<newfuncpos>29</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CSmsuBackupObserver::NewL(int, MBackupOperationObserver &amp;, int)</newfuncname>
				<newfuncpos>30</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CSmsuBackupObserver::Start(void)</newfuncname>
				<newfuncpos>31</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CSmsuBackupObserver::~CSmsuBackupObserver(void)</newfuncname>
				<newfuncpos>32</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\smum.lib</name>
			<comparefilename></comparefilename>
			<shortname>smum</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>1</typeid>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\spdctrl.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\spdctrl.lib</comparefilename>
			<shortname>spdctrl</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>4</typeid>
				<funcname>CSpdiaControl::CSpdiaControl(CPbkContactEngine *)</funcname>
				<funcpos>1</funcpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>5</typeid>
				<newfuncname>CSpdiaControl::NumberType(int) const</newfuncname>
				<newfuncpos>17</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CSpdiaControl::Number(int) const</funcname>
				<funcpos>17</funcpos>
				<newfuncpos>18</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CSpdiaControl::PbkEngine(void) const</funcname>
				<funcpos>18</funcpos>
				<newfuncpos>19</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CSpdiaControl::PhoneDialNumber(int) const</funcname>
				<funcpos>19</funcpos>
				<newfuncpos>20</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CSpdiaControl::PhoneNumber(int) const</funcname>
				<funcpos>20</funcpos>
				<newfuncpos>21</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CSpdiaControl::RemoveDialIndexL(int, int)</funcname>
				<funcpos>21</funcpos>
				<newfuncpos>22</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CSpdiaControl::SetLayout(TRect const &amp;)</funcname>
				<funcpos>22</funcpos>
				<newfuncpos>23</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CSpdiaControl::Size(void) const</funcname>
				<funcpos>23</funcpos>
				<newfuncpos>24</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CSpdiaControl::SpdIconIndex(int) const</funcname>
				<funcpos>24</funcpos>
				<newfuncpos>25</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CSpdiaControl::ThumbIndex(int) const</funcname>
				<funcpos>25</funcpos>
				<newfuncpos>26</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CSpdiaControl::VMBoxPosition(void) const</funcname>
				<funcpos>26</funcpos>
				<newfuncpos>27</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CSpdiaControl::VoiceMailL(TDes16 &amp;)</funcname>
				<funcpos>27</funcpos>
				<newfuncpos>28</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CSpdiaControl::~CSpdiaControl(void)</funcname>
				<funcpos>28</funcpos>
				<newfuncpos>1</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>4</typeid>
				<funcname>CSpdiaControl::CSpdiaControl(void)</funcname>
				<funcpos>29</funcpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CSpdiaControl::ApplyCellSpdiaPaneStyleL(CAknGrid &amp;, TSize &amp;)</funcname>
				<funcpos>30</funcpos>
				<newfuncpos>29</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\spi.lib</name>
			<comparefilename></comparefilename>
			<shortname>spi</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>1</typeid>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\testbed.lib</name>
			<comparefilename></comparefilename>
			<shortname>testbed</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>1</typeid>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\uiklaf.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\uiklaf.lib</comparefilename>
			<shortname>uiklaf</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>6</typeid>
				<funcname>LafShutdown::CreateShutdownManager(MShutdownEventObserver &amp;)</funcname>
				<newfuncname>LafShutdown::CreateShutdownManagerL(MShutdownEventObserver &amp;)</newfuncname>
				<funcpos>28</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\ws32.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\ws32.lib</comparefilename>
			<shortname>ws32</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>6</typeid>
				<funcname>RWsSession::HeapSetFail(RHeap::TAllocFail, int)</funcname>
				<newfuncname>RWsSession::HeapSetFail(int, int)</newfuncname>
				<funcpos>136</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>RSoundPlugIn::IsLoaded(int &amp;)</newfuncname>
				<newfuncpos>358</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>RSoundPlugIn::Load(TDesC16 const &amp;)</newfuncname>
				<newfuncpos>359</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>RSoundPlugIn::Unload(void)</newfuncname>
				<newfuncpos>360</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>RSoundPlugIn::RSoundPlugIn(void)</newfuncname>
				<newfuncpos>361</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>RSoundPlugIn::RSoundPlugIn(RWsSession &amp;)</newfuncname>
				<newfuncpos>362</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>CWsScreenDevice::CurrentScreenMode(void) const</newfuncname>
				<newfuncpos>363</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>RWindowGroup::CancelCaptureLongKey(long)</newfuncname>
				<newfuncpos>364</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>RWindowGroup::CaptureLongKey(TTimeIntervalMicroSeconds32, unsigned int, unsigned int, unsigned int, unsigned int, int, unsigned int)</newfuncname>
				<newfuncpos>365</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>RWindowGroup::CaptureLongKey(unsigned int, unsigned int, unsigned int, unsigned int, int, unsigned int)</newfuncname>
				<newfuncpos>366</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>RWsSession::SendEventToOneWindowGroupsPerClient(TWsEvent const &amp;)</newfuncname>
				<newfuncpos>367</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>RSoundPlugIn::KeyClickEnabled(void)</newfuncname>
				<newfuncpos>368</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>RSoundPlugIn::PenClickEnabled(void)</newfuncname>
				<newfuncpos>369</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>RSoundPlugIn::SetKeyClick(int)</newfuncname>
				<newfuncpos>370</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>RSoundPlugIn::SetPenClick(int)</newfuncname>
				<newfuncpos>371</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>RWindowGroup::CaptureKeyUpAndDowns(unsigned int, unsigned int, unsigned int, int)</newfuncname>
				<newfuncpos>372</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>RWindowGroup::CaptureKey(unsigned int, unsigned int, unsigned int, int)</newfuncname>
				<newfuncpos>373</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>RWsSession::LogCommand(RWsSession::TLoggingCommand)</newfuncname>
				<newfuncpos>374</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>RSoundPlugIn::Close(void)</newfuncname>
				<newfuncpos>375</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>RSoundPlugIn::CommandReply(int, TPtrC8 const &amp;)</newfuncname>
				<newfuncpos>376</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>RSoundPlugIn::Construct(TUid)</newfuncname>
				<newfuncpos>377</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>RSoundPlugIn::Destroy(void)</newfuncname>
				<newfuncpos>378</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>7</typeid>
				<newfuncname>RWsSession::SetCustomTextCursor(int, TArray&lt;TSpriteMember&gt; const &amp;, unsigned int, RWsSession::TCustomTextCursorAlignment)</newfuncname>
				<newfuncpos>379</newfuncpos>
				<bc_severity>Informative</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\wtlscert.lib</name>
			<comparefilename></comparefilename>
			<shortname>wtlscert</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>1</typeid>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\wutil.lib</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\wutil.lib</comparefilename>
			<shortname>wutil</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>4</typeid>
				<funcname>CUrl::operator==(CUrl &amp;) const</funcname>
				<funcpos>1</funcpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>4</typeid>
				<funcname>CUrl::Compare(CUrl &amp;, int) const</funcname>
				<funcpos>2</funcpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>4</typeid>
				<funcname>CUrl::Component(CUrl::TComponent) const</funcname>
				<funcpos>3</funcpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CAttributeLookupTable::Debug(CAttributeLookupTable::TDebugSelectorType, void *, void *)</funcname>
				<funcpos>4</funcpos>
				<newfuncpos>1</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CAttributeLookupTable::Des2IDL(TDesC16 const &amp;)</funcname>
				<funcpos>5</funcpos>
				<newfuncpos>2</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CAttributeLookupTable::KeyExists(TDesC16 const &amp;)</funcname>
				<funcpos>6</funcpos>
				<newfuncpos>3</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>5</typeid>
				<newfuncname>CUrl::Stub7(void)</newfuncname>
				<newfuncpos>7</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CAttributeLookupTable::NewL(void)</funcname>
				<funcpos>7</funcpos>
				<newfuncpos>4</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CUrl::NewL(TParseBase const &amp;)</funcname>
				<newfuncname>CUrl::Stub8(void)</newfuncname>
				<funcpos>8</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CUrl::NewL(TDesC16 const &amp;)</funcname>
				<newfuncname>CUrl::Stub9(void)</newfuncname>
				<funcpos>9</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>5</typeid>
				<newfuncname>CUrl::Stub10(void)</newfuncname>
				<newfuncpos>10</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CAttributeLookupTable::Reset(void)</funcname>
				<funcpos>10</funcpos>
				<newfuncpos>5</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CUrl::ResolveL(CUrl &amp;, CUrl &amp;)</funcname>
				<newfuncname>CUrl::Stub11(void)</newfuncname>
				<funcpos>11</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CUrl::SetL(CUrl &amp;)</funcname>
				<newfuncname>CUrl::Stub12(void)</newfuncname>
				<funcpos>12</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>5</typeid>
				<newfuncname>CUrl::Stub13(void)</newfuncname>
				<newfuncpos>13</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>3</typeid>
				<funcname>CAttributeLookupTable::~CAttributeLookupTable(void)</funcname>
				<funcpos>13</funcpos>
				<newfuncpos>6</newfuncpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CUrl::AllocL(void) const</funcname>
				<newfuncname>CUrl::Stub14(void)</newfuncname>
				<funcpos>14</funcpos>
				<bc_severity>None</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CUrl::UrlEscapedL(void) const</funcname>
				<newfuncname>CUrl::Stub15(void)</newfuncname>
				<funcpos>15</funcpos>
				<bc_severity>None</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CUrl::UrlUnescapedL(void) const</funcname>
				<newfuncname>CUrl::Stub16(void)</newfuncname>
				<funcpos>16</funcpos>
				<bc_severity>None</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CUrl::EscapeEncodeL(TDesC16 const &amp;)</funcname>
				<newfuncname>CUrl::Stub18(void)</newfuncname>
				<funcpos>18</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CUrl::~CUrl(void)</funcname>
				<newfuncname>CUrl::Stub19(void)</newfuncname>
				<funcpos>19</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CUrl::AllocL(CUrl::TComponent) const</funcname>
				<newfuncname>CUrl::Stub20(void)</newfuncname>
				<funcpos>20</funcpos>
				<bc_severity>None</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CUrl::SetComponentL(CUrl::TComponent, TDesC16 const &amp;)</funcname>
				<newfuncname>CUrl::Stub21(void)</newfuncname>
				<funcpos>21</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>4</typeid>
				<funcname>CUrl::ConvertFromUnicodeToUtf8L(TDesC16 const &amp;)</funcname>
				<funcpos>23</funcpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>4</typeid>
				<funcname>CUrl::ConvertToUnicodeFromUtf8L(TDesC8 const &amp;)</funcname>
				<funcpos>24</funcpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\baseplatform\lib\yclaunch.lib</name>
			<comparefilename></comparefilename>
			<shortname>yclaunch</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>1</typeid>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
		</library>
		<library>
			<name></name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC007\currentplatform\lib\xmlelemt.lib</comparefilename>
			<shortname>xmlelemt</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>2</typeid>
				<bc_severity>Informative</bc_severity>
				<sc_severity>Informative</sc_severity>
			</issue>
		</library>
	</issuelist>
</bbcresults>
