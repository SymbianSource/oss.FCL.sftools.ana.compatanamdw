//
// Copyright (c) 2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
//
//! @file
//! @SYMTestSuiteName		GRAPHICS-FBSERV-FbsBitmap-PublicApi
//! @SYMScriptTestEnvironment	This test script requires a basic ROM.

/////////////////////////////////////////////////////////////////////
// GRAPHICS-FBSERV-FbsBitmap-PublicAPI.script
//
// Copyright (c) 2006-2008 Symbian Software Ltd. All rights reserved.
//
// Tests all public elements of the CFbsBitmap class
// as a means of confidence that the APIs work as expected.
//
// The purpose is to provide a regression test suite of PublishedAll APIs for CFbsBitmap.
// Negative testing is performed to confirm that correct errors are returned when incorrect parameters are given.
// The tests are fully automated.
/////////////////////////////////////////////////////////////////////

LOAD_SUITE	T_FBServAPI


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0001
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0001
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		22/03/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::Load() (Load(const TDesC \&aFileName, TInt32 aId=0, TBool aShareIfLoaded=ETrue) version) test. Load a bitmap file with no file offset, without using RFile,
//!				making it available for sharing between font and bitmap server clients.
//!				Uses API elements: Load()
//! @SYMTestActions		1. Load a bitmap from a multi-bitmap file.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The Load() method call returns KErrNone and doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Load		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0001-001command4Load
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0001

START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0002
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0002
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		22/03/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::Load() (Load(RFile \&aFile, TInt32 aId=0, TBool aShareIfLoaded=ETrue) version) test.
//!				Load a bitmap file with no file offset, using RFile,
//!				not making it available for sharing between font and bitmap server clients.
//!				Uses API elements: Load()
//! @SYMTestActions		1. Load a bitmap from a multi-bitmap file.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The Load() method call returns KErrNone and doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Load		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0002-001command4Load
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0002

START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0003
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0003
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		22/03/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::Load() (Load(const TDesC \&aFileName, TInt32 aId, TBool aShareIfLoaded, TUint aFileOffset) version) test.
//!				Load a bitmap file with a file offset, without using RFile,
//!				not making it available for sharing between font and bitmap server clients.
//!				Uses API elements: Load()
//! @SYMTestActions		1. Load a bitmap from a multi-bitmap file.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The Load() method call returns KErrNone and doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Load		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0003-001command4Load
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0003

START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0004
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0004
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		22/03/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::Load() (Load(RFile \&aFile, TInt32 aId, TBool aShareIfLoaded, TUint aFileOffset) version) test.
//!				Load a bitmap file with a file offset, using RFile,
//!				making it available for sharing between font and bitmap server clients.
//!				Uses API elements: Load(), IsCompressedInRAM()
//! @SYMTestActions		1. Load a bitmap from a multi-bitmap file.
//!				2. Check bitmap is not compressed in RAM.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The Load() method call returns KErrNone and doesn't cause panic. IsCompressedInRAM() returns false.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI		\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Load			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0004-001command4Load
		COMMAND		CFbsBitmap1	IsCompressedInRAM	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0004-001command5IsCompressedInRAM
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0004

START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0005
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0005
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		22/03/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::LoadAndCompress() (LoadAndCompress(const TDesC \&aFileName, TInt32 aId=0, TBool aShareIfLoaded=ETrue) version) test.
//!				Load and compress a bitmap file with no file offset, without using RFile,
//!				making it available for sharing between font and bitmap server clients.
//!				Uses API elements: LoadAndCompress(), IsCompressedInRAM()
//! @SYMTestActions		1. Load and compress a bitmap from a multi-bitmap file.
//!				2. Check bitmap is compressed in RAM.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The LoadAndCompress() method call returns KErrNone and doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI		\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	LoadAndCompress		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0005-001command4LoadAndCompress
		COMMAND		CFbsBitmap1	IsCompressedInRAM	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0005-001command5IsCompressedInRAM
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0005

START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0006
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0006
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		22/03/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::LoadAndCompress() (LoadAndCompress(RFile \&aFile, TInt32 aId=0, TBool aShareIfLoaded=ETrue) version) test.
//!				Load and compress a bitmap file with no file offset, using RFile,
//!				not making it available for sharing between font and bitmap server clients.
//!				Uses API elements: LoadAndCompress(), IsCompressedInRAM()
//! @SYMTestActions		1. Load and compress a bitmap from a multi-bitmap file.
//!				2. Check bitmap is compressed in RAM.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The LoadAndCompress() method call returns KErrNone and doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI		\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	LoadAndCompress		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0006-001command4LoadAndCompress
		COMMAND		CFbsBitmap1	IsCompressedInRAM	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0006-001command5IsCompressedInRAM
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0006

START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0007
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0007
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		22/03/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::LoadAndCompress() (LoadAndCompress(const TDesC \&aFileName, TInt32 aId, TBool aShareIfLoaded, TUint aFileOffset) version) test.
//!				Load and compress a bitmap file with a file offset, without using RFile,
//!				not making it available for sharing between font and bitmap server clients.
//!				Uses API elements: LoadAndCompress(), IsCompressedInRAM()
//! @SYMTestActions		1. Load and compress a bitmap from a multi-bitmap file.
//!				2. Check bitmap is compressed in RAM.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The LoadAndCompress() method call returns KErrNone and doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI		\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	LoadAndCompress		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0007-001command4LoadAndCompress
		COMMAND		CFbsBitmap1	IsCompressedInRAM	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0007-001command5IsCompressedInRAM
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0007

START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0008
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0008
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		22/03/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::LoadAndCompress() (LoadAndCompress(RFile \&aFile, TInt32 aId, TBool aShareIfLoaded, TUint aFileOffset) version) test.
//!				Load and compress a bitmap file with a file offset, using RFile,
//!				making it available for sharing between font and bitmap server clients.
//!				Uses API elements: LoadAndCompress(), IsCompressedInRAM()
//! @SYMTestActions		1. Load and compress a bitmap from a multi-bitmap file.
//!				2. Check bitmap is compressed in RAM.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The LoadAndCompress() method call returns KErrNone and doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI		\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	LoadAndCompress		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0008-001command4LoadAndCompress
		COMMAND		CFbsBitmap1	IsCompressedInRAM	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0008-001command5IsCompressedInRAM
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0008

START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0009
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0009
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		22/03/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		Load then compress a bitmap file.
//!				Uses API elements: Load(), Compress(), IsCompressedInRAM()
//! @SYMTestActions		1. Load a bitmap from a multi-bitmap file.
//!				2. Compress bitmap.
//!				3. Check bitmap is compressed in RAM.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The Load() method call returns KErrNone and doesn't cause panic. IsCompressedInRAM() returns true.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI		\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Load			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0009-001command4Load
		COMMAND		CFbsBitmap1	Compress
		COMMAND		CFbsBitmap1	IsCompressedInRAM	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0009-001command6IsCompressedInRAM
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0009


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0012
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0012
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		22/03/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		Load a bitmap and then releases it.
//!				Uses API elements: Load(), Reset()
//! @SYMTestActions		1. Load a bitmap from a multi-bitmap file.
//!				2. Release bitmap's handle from font and bitmap server.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The Reset() method call doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Load		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0012-001command4Load
		COMMAND		CFbsBitmap1	Reset
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0012

START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0013
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0013
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		22/03/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		Create bitmaps with various sizes in all display modes.
//!				Uses API elements: Create()
//! @SYMTestActions		1-11. Create bitmaps with various sizes in all display modes except ENone, ERgb, EColorLast.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The Create() method call returns KErrNone and doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0013-001command4Create
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0013-001command5Create
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0013-001command6Create
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0013-001command7Create
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0013-001command8Create
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0013-001command9Create
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0013-001command10Create
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0013-001command11Create
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0013-001command12Create
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0013-001command13Create
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0013-001command14Create
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0013

START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0014
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0014
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		22/03/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::Save() (Save(const TDesC \&aFilename) version) test. Create bitmap and save to file, without using RFile.
//!				Uses API elements: Create(), Save()
//! @SYMTestActions		1. Create bitmap.
//!				2. Save bitmap to file.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The Save() method call returns KErrNone and doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0014-001command4Create
		COMMAND		CFbsBitmap1	Save		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0014-001command5Save
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0014

START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0015
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0015
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		22/03/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::Save() (Save(RFile \&aFile) version) test. Create bitmap and save to file, using RFile.
//!				Uses API elements: Create(), Save()
//! @SYMTestActions		1. Create bitmap.
//!				2. Save bitmap to file.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The Save() method call returns KErrNone and doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0015-001command4Create
		COMMAND		CFbsBitmap1	Save		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0015-001command5Save
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0015

START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0016
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0016
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		22/03/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::StoreL() (StoreL(const TDesC \&aFilename, TInt aNumSources, const TDesC *aSources[], TInt32 aSourceIds[]) version) test.
//!				Create bitmaps and store them in a multi-bitmap file, without using RFile.
//!				Uses API elements: Create(), StoreL()
//! @SYMTestActions		1-3. Create 3 bitmaps saving them into 3 different files right after creation.
//!				4. Call Store() to create a multi-bitmap file using those 3 files.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The StoreL() method call doesn't leave and doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0016-001command4Create
		COMMAND		CFbsBitmap1	Save		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0016-001command5Save
		COMMAND		CFbsBitmap1	Reset
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0016-001command7Create
		COMMAND		CFbsBitmap1	Save		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0016-001command8Save
		COMMAND		CFbsBitmap1	Reset
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0016-001command10Create
		COMMAND		CFbsBitmap1	Save		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0016-001command11Save
		COMMAND		CFbsBitmap1	Reset
		COMMAND		CFbsBitmap1	StoreL		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0016-001command13StoreL
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0016

START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0017
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0017
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		23/03/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::StoreL() (StoreL(RFile \&aFile, TInt aNumSources, const TDesC *aSources[], TInt32 aSourceIds[]) version) test.
//!				Create bitmaps and store them in a multi-bitmap file, using RFile.
//!				Uses API elements: Create(), StoreL()
//! @SYMTestActions		1-3. Create 3 bitmaps saving them into 3 different files right after creation.
//!				4. Store bitmaps in a multi-bitmap file.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The StoreL() method call doesn't leave and doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0017-001command4Create
		COMMAND		CFbsBitmap1	Save		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0017-001command5Save
		COMMAND		CFbsBitmap1	Reset
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0017-001command7Create
		COMMAND		CFbsBitmap1	Save		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0017-001command8Save
		COMMAND		CFbsBitmap1	Reset
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0017-001command10Create
		COMMAND		CFbsBitmap1	Save		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0017-001command11Save
		COMMAND		CFbsBitmap1	Reset
		COMMAND		CFbsBitmap1	StoreL		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0017-001command13StoreL
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0017

START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0018
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0018
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		23/03/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		Load bitmap, duplicate it and save duplicate to file.
//!				Uses API elements: Load(), Duplicate(), Save()
//! @SYMTestActions		1. Load bitmap from file.
//!				2. Instantiate another bitmap.
//!				2. Duplicate loaded bitmap by the second one.
//!				3. Save duplicate to file.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The methods return KErrNone and don't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap2
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Load		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0018-001command4Load
		COMMAND		CFbsBitmap1	Handle
		COMMAND		CFbsBitmap2	new
		COMMAND		CFbsBitmap2	Duplicate	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0018-001command7Duplicate
		COMMAND		CFbsBitmap2	Save		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0018-001command8Save
		COMMAND		CFbsBitmap1	~
		COMMAND		CFbsBitmap2	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0018

START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0019
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0019
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		23/03/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		Load bitmap and externalized it to a write stream.
//!				Uses API elements: Create(), ExternalizeL(), InternalizeL()
//! @SYMTestActions		1. Create a bitmap.
//!				2. Externalize bitmap to write stream.
//!				3. Internalize bitmap from read stream.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Methods ExternalizeL() and InternalizeL() don't leave and don't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0019-001command4Create
		COMMAND		CFbsBitmap1	ExternalizeL	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0019-001command5ExternalizeL
		COMMAND		CFbsBitmap1	InternalizeL	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0019-001command6InternalizeL
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0019

START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0020
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0020
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		23/03/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		Load bitmap and externalized part of it to a write stream.
//!				Uses API elements: Create(), ExternalizeRectangleL(), InternalizeL()
//! @SYMTestActions		1. Create a bitmap.
//!				2. Externalize part of bitmap to write stream.
//!				3. Internalize bitmap from read stream.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Methods ExternalizeRectangleL() and InternalizeL() don't leave and don't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI		\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0020-001command4Create
		COMMAND		CFbsBitmap1	ExternalizeRectangleL	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0020-001command5ExternalizeRectangleL
		COMMAND		CFbsBitmap1	InternalizeL		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0020-001command6InternalizeL
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0020




START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0022
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0022
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		23/03/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		Load bitmap and set it to all display modes.
//!				Uses API elements: Load(), SetDisplayMode(), DisplayMode(), InitialDisplayMode()
//! @SYMTestActions		1. Create bitmap with a certain display mode (take EColor256 = 6).
//!				2. Call DisplayMode() to check the display mode.
//!				3-15. Set then get all display modes that could be fit into EColor256 (1, 2, 3, 4, 5, 6)
//!				16. Get initial display mode.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Display modes are correctly set without causing panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI		\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0022-001command4Create
		COMMAND		CFbsBitmap1	DisplayMode		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0022-001command5DisplayMode
		COMMAND		CFbsBitmap1	SetDisplayMode		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0022-001command6SetDisplayMode
		COMMAND		CFbsBitmap1	DisplayMode		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0022-001command7DisplayMode
		COMMAND		CFbsBitmap1	SetDisplayMode		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0022-001command8SetDisplayMode
		COMMAND		CFbsBitmap1	DisplayMode		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0022-001command9DisplayMode
		COMMAND		CFbsBitmap1	SetDisplayMode		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0022-001command10SetDisplayMode
		COMMAND		CFbsBitmap1	DisplayMode		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0022-001command11DisplayMode
		COMMAND		CFbsBitmap1	SetDisplayMode		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0022-001command12SetDisplayMode
		COMMAND		CFbsBitmap1	DisplayMode		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0022-001command13DisplayMode
		COMMAND		CFbsBitmap1	SetDisplayMode		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0022-001command14SetDisplayMode
		COMMAND		CFbsBitmap1	DisplayMode		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0022-001command15DisplayMode
		COMMAND		CFbsBitmap1	SetDisplayMode		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0022-001command16SetDisplayMode
		COMMAND		CFbsBitmap1	DisplayMode		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0022-001command17DisplayMode
		COMMAND		CFbsBitmap1	InitialDisplayMode	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0022-001command18InitialDisplayMode
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0022

START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0023
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0023
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		23/03/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::GetScanLine() (GetScanLine(TDes8 \&aBuf, const TPoint \&aPixel, TInt aLength, TDisplayMode aDispMode) version),
//!				CFbsBitmap::SetScanLine(), GetVerticalScanLine() (both GetVerticalScanLine(TDes8 \&aBuf, TInt aX, TDisplayMode aDispMode) and
//!				GetVerticalScanLine(TDes8 \&aBuf, TInt aX, const TPoint \&aDitherOffset, TDisplayMode aDispMode) versions) test.
//!				Load bitmap and test setting/getting scanlines.
//!				Uses API elements: Load(), SetScanLine(), GetScanLine(), GetVerticalScanLine()
//! @SYMTestActions		1. Create bitmap (10x10, EColor256).
//!				2. Set horizontal scanline using position 0 from data-file
//!				3. Get horizontal scanline with the same display mode starting at (0,0) and 10 bytes long
//!				4. Get vertical scanline of 0-th vertical with the same display mode
//!				5. Get vertical scanline of 0-th vertical with the same display mode using dithering offset (0,0)
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Scanlines are correctly set without causing panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI		\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0023-001command4Create
		COMMAND		CFbsBitmap1	SetScanLine		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0023-001command5SetScanLine
		COMMAND		CFbsBitmap1	GetScanLine		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0023-001command6GetScanLine
		COMMAND		CFbsBitmap1	GetVerticalScanLine	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0023-001command7GetVerticalScanLine
		COMMAND		CFbsBitmap1	GetVerticalScanLine	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0023-001command8GetVerticalScanLine
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0023

START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0024
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0024
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		23/03/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::SizeInTwips(), CFbsBitmap::SetSizeInTwips() (both SetSizeInTwips(const MGraphicsDeviceMap *aMap) and SetSizeInTwips(const TSize \&aSizeInTwips) versions) test.
//!				Load bitmap and test setting/getting size in twips.
//!				Uses API elements: Load(), SetSizeInTwips(), SizeInTwips()
//! @SYMTestActions		1. Create bitmap.
//!				2-4. Set then get various twips sizes, checking that sizes match.
//!				5. Create a bitmap device object.
//!				6. Set twips size using the graphics device map.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Sizes in twips are correctly set without causing panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI		\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession		RFbsSession1
		CREATE_OBJECT	CFbsBitmap		CFbsBitmap1
		CREATE_OBJECT	CFbsBitmapDevice	CFbsBitmapDevice1
		COMMAND		RFbsSession1		Connect
		COMMAND		CFbsBitmap1		new
		COMMAND		CFbsBitmap1		Load			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0024-001command4Load
		COMMAND		CFbsBitmap1		SetSizeInTwips		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0024-001command5SetSizeInTwips
		COMMAND		CFbsBitmap1		SizeInTwips		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0024-001command6SizeInTwips
		COMMAND		CFbsBitmap1		SetSizeInTwips		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0024-001command7SetSizeInTwips
		COMMAND		CFbsBitmap1		SizeInTwips		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0024-001command8SizeInTwips
		COMMAND		CFbsBitmap1		SetSizeInTwips		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0024-001command9SetSizeInTwips
		COMMAND		CFbsBitmap1		SizeInTwips		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0024-001command10SizeInTwips
		COMMAND		CFbsBitmap1		SetSizeInTwips		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0024-001command11SetSizeInTwips
		COMMAND		CFbsBitmap1		~
		COMMAND		RFbsSession1		Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0024

START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0025
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0025
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		23/03/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		Open bitmap files and test various get methods.
//!				Uses API elements: Load(), DataStride(), Handle(), IsLargeBitmap(),
//!				IsMonochrome(), SizeInPixels()
//! @SYMTestActions		1. Load bitmap file.
//!				2. Get length in bytes between scanlines in memory.
//!				3. Get handle number of the bitmap.
//!				4. Get whether bitmap is large and check it to be as expected.
//!				5. Get whether bitmap is monochrome and check it to be as expected.
//!				6. Get pixel-size of bitmap.
//!				7-12. Repeat 1-6 for another file.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Get methods work correctly without causing panic for images loaded.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap2
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Load		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0025-001command4Load
		COMMAND		CFbsBitmap1	DataStride
		COMMAND		CFbsBitmap1	Handle
		COMMAND		CFbsBitmap1	IsLargeBitmap	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0025-001command7IsLargeBitmap
		COMMAND		CFbsBitmap1	IsMonochrome	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0025-001command8IsMonochrome
		COMMAND		CFbsBitmap1	SizeInPixels	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0025-001command9SizeInPixels
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Load		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0025-001command12Load
		COMMAND		CFbsBitmap1	DataStride
		COMMAND		CFbsBitmap1	Handle
		COMMAND		CFbsBitmap1	IsLargeBitmap	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0025-001command15IsLargeBitmap
		COMMAND		CFbsBitmap1	IsMonochrome	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0025-001command16IsMonochrome
		COMMAND		CFbsBitmap1	SizeInPixels	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0025-001command17SizeInPixels
		COMMAND		CFbsBitmap1	~
		COMMAND		CFbsBitmap2	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0025

START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0026
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0026
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		23/03/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		Load bitmap and get RGB value of various pixels.
//!				Uses API elements: Load(), GetPixel()
//! @SYMTestActions		1. Load bitmap.
//!				2-6. Get RGB value of various pixels and check them to be as expected.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	RGB values of pixels are returned without causing panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Load		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0026-001command4Load
		COMMAND		CFbsBitmap1	GetPixel	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0026-001command5GetPixel
		COMMAND		CFbsBitmap1	GetPixel	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0026-001command6GetPixel
		COMMAND		CFbsBitmap1	GetPixel	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0026-001command7GetPixel
		COMMAND		CFbsBitmap1	GetPixel	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0026-001command8GetPixel
		COMMAND		CFbsBitmap1	GetPixel	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0026-001command9GetPixel
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0026


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0028
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0028
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		23/03/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		Get scanline length for all legal display modes.
//!				Uses API elements: ScanLineLength()
//! @SYMTestActions		1-11. Get scanline lengths for all display modes (except ENone, ERgb, EColorLast) and various lengths and check them to be as expected.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Scanline lengths are correctly returned without causing panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	ScanLineLength	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0028-001command3ScanLineLength
		COMMAND		CFbsBitmap1	ScanLineLength	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0028-001command4ScanLineLength
		COMMAND		CFbsBitmap1	ScanLineLength	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0028-001command5ScanLineLength
		COMMAND		CFbsBitmap1	ScanLineLength	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0028-001command6ScanLineLength
		COMMAND		CFbsBitmap1	ScanLineLength	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0028-001command7ScanLineLength
		COMMAND		CFbsBitmap1	ScanLineLength	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0028-001command8ScanLineLength
		COMMAND		CFbsBitmap1	ScanLineLength	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0028-001command9ScanLineLength
		COMMAND		CFbsBitmap1	ScanLineLength	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0028-001command10ScanLineLength
		COMMAND		CFbsBitmap1	ScanLineLength	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0028-001command11ScanLineLength
		COMMAND		CFbsBitmap1	ScanLineLength	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0028-001command12ScanLineLength
		COMMAND		CFbsBitmap1	ScanLineLength	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0028-001command13ScanLineLength
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0028

START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0029
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0029
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		23/03/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		Load bitmap and resize several times.
//!				Uses API elements: Load(), Resize(), SwapWidthAndHeight(), SizeInPixels()
//! @SYMTestActions		1. Load bitmap.
//!				2. Resize bitmap to larger than original size.
//!				3. Get size of bitmap.
//!				4. Resize bitmap back to original size.
//!				5. Get size of bitmap.
//!				6. Resize bitmap to small than original size.
//!				7. Get size of bitmap.
//!				8. Swap width and height of bitmap.
//!				9. Get size of bitmap.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Bitmap is resized correctly without causing panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI		\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Load			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0029-001command4Load
		COMMAND		CFbsBitmap1	SizeInPixels		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0029-001command5SizeInPixels
		COMMAND		CFbsBitmap1	Resize			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0029-001command6Resize
		COMMAND		CFbsBitmap1	SizeInPixels		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0029-001command7SizeInPixels
		COMMAND		CFbsBitmap1	Resize			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0029-001command8Resize
		COMMAND		CFbsBitmap1	SizeInPixels		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0029-001command9SizeInPixels
		COMMAND		CFbsBitmap1	Resize			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0029-001command10Resize
		COMMAND		CFbsBitmap1	SizeInPixels		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0029-001command11SizeInPixels
		COMMAND		CFbsBitmap1	SwapWidthAndHeight
		COMMAND		CFbsBitmap1	SizeInPixels		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0029-001command13SizeInPixels
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0029

START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0030
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0030
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		23/03/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		Load bitmap and convert horiz/vert dimensions on graphics device between pixels and twips.
//!				Uses API elements: Load(), HorizontalPixelsToTwips(), HorizontalTwipsToPixels(),
//!				VerticalPixelsToTwips(), VerticalTwipsToPixels()
//! @SYMTestActions		1. Load bitmap.
//!				2. Convert horiz dimensions on graphics device from pixels to twips and check it to be as expected.
//!				3. Convert horiz dimensions on graphics device back to pixels from twips and check it to be as expected.
//!				4. Convert vert dimensions on graphics device from pixels to twips and check it to be as expected.
//!				5. Convert vert dimensions on graphics device back to pixels from twips and check it to be as expected.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Conversions are done correctly without causing panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI		\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Load			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0030-001command4Load
		COMMAND		CFbsBitmap1	HorizontalPixelsToTwips	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0030-001command5HorizontalPixelsToTwips
		COMMAND		CFbsBitmap1	HorizontalTwipsToPixels	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0030-001command6HorizontalTwipsToPixels
		COMMAND		CFbsBitmap1	VerticalPixelsToTwips	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0030-001command7VerticalPixelsToTwips
		COMMAND		CFbsBitmap1	VerticalTwipsToPixels	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0030-001command8VerticalTwipsToPixels
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0030

START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0031
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0031
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		24/03/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		Load bitmap and lock/unlock the global bitmap heap.
//!				Uses API elements: Load(), LockHeap(), LockHeapLC(), both version of UnlockHeap(), DataAddress()
//! @SYMTestActions		1. Load a large bitmap (larger than 64Kb).
//!				2. Lock the global bitmap heap, using the always flag.
//!				3. Get address of first pixel in the bitmap.
//!				4. Unlock the global bitmap heap, using the always flag.
//!				5-7. Repeat 2-4 without using the always flag using static UnlockHeap().
//!				8. Lock the global bitmap heap (leaving a pointer to TCleanupItem), using the always flag.
//!				9. Get address of first pixel in the bitmap.
//!				10. Unlock the global bitmap heap and call PopAndDestroy().
//!				11-13. Repeat 8-10 without using the always flag in locking.
//!				14-26. Repeat 1-13 for a small bitmap (smaller than 64Kb), but don't use static UnlockHeap() if always flag is not used.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The global bitmap heap is locked/unlocked without causing panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Load		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0031-001command4Load
		COMMAND		CFbsBitmap1	LockHeap	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0031-001command5LockHeap
		COMMAND		CFbsBitmap1	DataAddress
		COMMAND		CFbsBitmap1	UnlockHeap
		COMMAND		CFbsBitmap1	LockHeap	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0031-001command8LockHeap
		COMMAND		CFbsBitmap1	DataAddress
		COMMAND		CFbsBitmap1	UnlockHeap	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0031-001command10UnlockHeap
		COMMAND		CFbsBitmap1	LockHeapLC	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0031-001command11LockHeapLC
		COMMAND		CFbsBitmap1	DataAddress
		COMMAND		CFbsBitmap1	UnlockHeap
		COMMAND		CFbsBitmap1	LockHeapLC	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0031-001command14LockHeapLC
		COMMAND		CFbsBitmap1	DataAddress
		COMMAND		CFbsBitmap1	UnlockHeap
		COMMAND		CFbsBitmap1	Reset
		COMMAND		CFbsBitmap1	Load		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0031-001command18Load
		COMMAND		CFbsBitmap1	LockHeap	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0031-001command19LockHeap
		COMMAND		CFbsBitmap1	DataAddress
		COMMAND		CFbsBitmap1	UnlockHeap	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0031-001command21UnlockHeap
		COMMAND		CFbsBitmap1	LockHeap	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0031-001command22LockHeap
		COMMAND		CFbsBitmap1	DataAddress
		COMMAND		CFbsBitmap1	UnlockHeap
		COMMAND		CFbsBitmap1	LockHeapLC	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0031-001command25LockHeapLC
		COMMAND		CFbsBitmap1	DataAddress
		COMMAND		CFbsBitmap1	UnlockHeap	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0031-001command27UnlockHeap
		COMMAND		CFbsBitmap1	LockHeapLC	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0031-001command28LockHeapLC
		COMMAND		CFbsBitmap1	DataAddress
		COMMAND		CFbsBitmap1	UnlockHeap
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0031


///////////////////////////////////////////////////////////////////////////////////
// NEGATIVE TESTS
///////////////////////////////////////////////////////////////////////////////////


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0032
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0032
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		30/03/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		Load bitmap and set it to invalid display mode.
//!				Uses API elements: SetDisplayMode()
//! @SYMTestActions		1. Create bitmap.
//!				2. Set invalid display mode.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	KErrArgument is returned.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND			CFbsBitmap1	new
		COMMAND			CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0032-001command4Create
		COMMAND	!Error=-6	CFbsBitmap1	SetDisplayMode	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0032-001command5SetDisplayMode
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0032

START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0033
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0033
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		30/03/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		Set a bitmap to use the bitmap image stored in ROM, giving a bad pointer value.
//!				Uses API elements: SetRomBitmapL()
//! @SYMTestActions		1. Set a bitmap to use the bitmap image stored in ROM.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	KErrUnknown is returned.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND			CFbsBitmap1	new
		COMMAND	!Error=-19	CFbsBitmap1	SetRomBitmapL	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0033-001command4SetRomBitmapL
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0033

START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0034
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0034
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		30/03/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		Create bitmap with negative width.
//!				Uses API elements: Create()
//! @SYMTestActions		1. Create bitmap with negative width.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	KErrArgument is returned.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND			CFbsBitmap1	new
		COMMAND	!Error=-6	CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0034-001command4Create
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0034

START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0035
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0035
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		22/03/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		Create bitmap with display mode ENone.
//!				Uses API elements: Create()
//! @SYMTestActions		1. Create bitmap with display modes ENone.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Create() call must return error KErrArgument (-6).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND			CFbsBitmap1	new
		COMMAND	!Error=-6	CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0035-001command4Create
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0035

START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0036
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0036
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		22/03/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		Create bitmap with display mode ERgb.
//!				Uses API elements: Create()
//! @SYMTestActions		1. Create bitmap with display modes ERgb.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Create() call must return error KErrArgument (-6).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND			CFbsBitmap1	new
		COMMAND	!Error=-6	CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0036-001command4Create
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0036

START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0037
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0037
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		30/03/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		Duplicate it with invalid handle.
//!				Uses API elements: Load(), Duplicate()
//! @SYMTestActions		1. Duplicate bitmap with invalid handle.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	KErrUnknown is returned.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap2
		COMMAND			RFbsSession1	Connect
		COMMAND			CFbsBitmap1	new
		COMMAND			CFbsBitmap2	new
		COMMAND	!Error=-19	CFbsBitmap2	Duplicate	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0037-001command6Duplicate
		COMMAND			CFbsBitmap1	~
		COMMAND			CFbsBitmap2	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0037

START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0038
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0038
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		19/05/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::Header() test.
//!				Uses API elements: Create(), Header()
//! @SYMTestActions		1. Create bitmap.
//!				2. Call Header() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The function Header() call doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0038-001command4Create
		COMMAND		CFbsBitmap1	Header
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0038


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0039
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0039
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		19/05/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		Test of not supported (by the documentation of Symbian OS 9.3) CFbsBitmap::PaletteAttributes().
//!				Uses API elements: PaletteAttributes()
//! @SYMTestActions		1. Create bitmap.
//!				2. Call PaletteAttributes() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	PaletteAttributes() call must raise panic
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI		\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0039-001command4Create
		COMMAND		CFbsBitmap1	PaletteAttributes
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0039


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0040
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0040
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		19/05/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		Test of not supported (by the documentation of Symbian OS 9.3) CFbsBitmap::SetPalette().
//!				Uses API elements: SetPalette()
//! @SYMTestActions		1. Create bitmap.
//!				2. Call SetPalette() for different defualt palettes (all display modes)
//!				3. Call SetPalette() for different custom palettes having  different number of colors
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The function SetPalette() call doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		CREATE_OBJECT	CPalette	CPalette1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0040-001command4Create
		COMMAND		CPalette1	NewDefaultL	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0040-001command6NewDefaultL
		COMMAND		CFbsBitmap1	SetPalette	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0040-001command8SetPalette
		COMMAND		CPalette1	NewDefaultL	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0040-001command10NewDefaultL
		COMMAND		CFbsBitmap1	SetPalette	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0040-001command12SetPalette
		COMMAND		CPalette1	NewDefaultL	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0040-001command14NewDefaultL
		COMMAND		CFbsBitmap1	SetPalette	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0040-001command16SetPalette
		COMMAND		CPalette1	NewDefaultL	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0040-001command18NewDefaultL
		COMMAND		CFbsBitmap1	SetPalette	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0040-001command20SetPalette
		COMMAND		CPalette1	NewDefaultL	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0040-001command22NewDefaultL
		COMMAND		CFbsBitmap1	SetPalette	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0040-001command24SetPalette
		COMMAND		CPalette1	NewDefaultL	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0040-001command26NewDefaultL
		COMMAND		CFbsBitmap1	SetPalette	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0040-001command28SetPalette
		COMMAND		CPalette1	NewL		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0040-001command30NewL
		COMMAND		CFbsBitmap1	SetPalette	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0040-001command32SetPalette
		COMMAND		CPalette1	NewL		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0040-001command34NewL
		COMMAND		CFbsBitmap1	SetPalette	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0040-001command36SetPalette
		COMMAND		CPalette1	NewL		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0040-001command38NewL
		COMMAND		CFbsBitmap1	SetPalette	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0040-001command40SetPalette
		COMMAND		CPalette1	NewL		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0040-001command42NewL
		COMMAND		CFbsBitmap1	SetPalette	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0040-001command44SetPalette
		COMMAND		CPalette1	NewL		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0040-001command46NewL
		COMMAND		CFbsBitmap1	SetPalette	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0040-001command48SetPalette
		COMMAND		CPalette1	NewL		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0040-001command50NewL
		COMMAND		CFbsBitmap1	SetPalette	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0040-001command52SetPalette
		COMMAND		CPalette1	NewL		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0040-001command54NewL
		COMMAND		CFbsBitmap1	SetPalette	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0040-001command56SetPalette
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
		COMMAND		CPalette1	~
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0040


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0041
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0041
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		19/05/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		Test of not supported (by the documentation of Symbian OS 9.3) CFbsBitmap::SetPalette().
//!				Uses API elements: SetPalette()
//! @SYMTestActions		1. Create bitmap.
//!				2. Call SetPalette() passing NULL pointer
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The function SetPalette() call doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		CREATE_OBJECT	CPalette	CPalette1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0041-001command4Create
		COMMAND		CFbsBitmap1	SetPalette	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0041-001command5SetPalette
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0041


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0042
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0042
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		19/05/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		Test of not supported (by the documentation of Symbian OS 9.3) CFbsBitmap::GetPalette().
//!				Uses API elements: GetPalette()
//! @SYMTestActions		1. Create bitmap.
//!				2. Call GetPalette() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	GetPalette() call must return KErrNotSupported (-5).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND			CFbsBitmap1	new
		COMMAND			CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0042-001command4Create
		COMMAND	!Error=-5	CFbsBitmap1	GetPalette
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0042


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0046
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0046
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Louis Henry Nayegon
//! @SYMCreationDate		18/07/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		Load then get data address of a bitmap.
//!				Uses API elements: Load(), LockHeap(), DataAddress(), UnlockHeap()
//! @SYMTestActions		1. Load a bitmap from a multi-bitmap file.
//!				2. Lock the heap.
//!				3. Get the data address.
//!				4. Unlock the heap
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Data address is aquired
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Load		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0046-001command4Load
		COMMAND		CFbsBitmap1	LockHeap
		COMMAND		CFbsBitmap1	DataAddress
		COMMAND		CFbsBitmap1	UnlockHeap
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0046

START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0047
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0047
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Louis Henry Nayegon
//! @SYMCreationDate		18/07/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		Load then get data address of a bitmap.
//!				Uses API elements: Load(), LockHeapLC(), DataAddress(), UnlockHeap()
//! @SYMTestActions		1. Load a bitmap from a multi-bitmap file.
//!				2. Lock the heap.
//!				3. Get the data address.
//!				4. Unlock the heap
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Data address is aquired
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Load		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0047-001command4Load
		COMMAND		CFbsBitmap1	LockHeapLC
		COMMAND		CFbsBitmap1	DataAddress
		COMMAND		CFbsBitmap1	UnlockHeap
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0047


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0048
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0048
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		Calls Reset() on bitmap that wasn't neither created nor loaded.
//!				Uses API elements: Load(), Reset()
//! @SYMTestActions		1. Construct a bitmap instance using new operator.
//!				2. Call Reset() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The function Reset() call doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Reset
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0048


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0049
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0049
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		ScanLineLength() with negative length test
//!				Uses API elements: ScanLineLength()
//! @SYMTestActions		1. Call ScanLineLength() with length -1 and check it to be as expected.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The function ScanLineLength() call doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	ScanLineLength	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0049-001command3ScanLineLength
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0049


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0050
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0050
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		ScanLineLength() with not allowed display mode ENone test
//!				Uses API elements: ScanLineLength()
//! @SYMTestActions		1. Call ScanLineLength() with display mode ENone and check it to be as expected.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The function ScanLineLength() call doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	ScanLineLength	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0050-001command3ScanLineLength
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0050


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0051
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0051
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		Call ScanLineLength() with not allowed display mode ERgb test
//!				Uses API elements: ScanLineLength()
//! @SYMTestActions		1. Call ScanLineLength() with display mode ERgb and check it to be as expected.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The function ScanLineLength() call doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI		\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	ScanLineLength		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0051-001command3ScanLineLength
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0051


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0053
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0053
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		Call ScanLineLength() with invalid display mode test
//!				Uses API elements: ScanLineLength()
//! @SYMTestActions		1. Call ScanLineLength() with display mode -1 and check it to be as expected.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Operation must panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI		\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	ScanLineLength		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0053-001command3ScanLineLength
	END_TEST_BLOCK	!PanicCode=10
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0053


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0056
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0056
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		Create bitmap with negative height.
//!				Uses API elements: Create()
//! @SYMTestActions		1. Create bitmap with negative height.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	KErrArgument is returned.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND			CFbsBitmap1	new
		COMMAND	!Error=-6	CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0056-001command4Create
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0056


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0057
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0057
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		Create bitmap with negative width and height.
//!				Uses API elements: Create()
//! @SYMTestActions		1. Create bitmap with negative width and height.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	KErrArgument is returned.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND			CFbsBitmap1	new
		COMMAND	!Error=-6	CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0057-001command4Create
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0057


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0058
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0058
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		Create bitmap with zero-size.
//!				Uses API elements: Create()
//! @SYMTestActions		1. Create bitmap with 0x0 size.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	The function Create() call returns KErrNone and doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0058-001command4Create
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0058


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0059
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0059
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::Load() (Load(const TDesC &aFileName, TInt32 aId=0, TBool aShareIfLoaded=ETrue) version) test with inexistant file.
//!				Uses API elements: Load()
//! @SYMTestActions		1. Call Load() providing wrong path as argument.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Operation must return error KErrNotFound (-1)
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND			CFbsBitmap1	new
		COMMAND	!Error=-1	CFbsBitmap1	Load		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0059-001command4Load
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0059


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0060
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0060
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::Load() (Load(const TDesC &aFileName, TInt32 aId=0, TBool aShareIfLoaded=ETrue) version) test with directory path instead of file path.
//!				Uses API elements: Load()
//! @SYMTestActions		1. Call Load() providing directory path instead of file path as argument.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Operation must return error KErrAccessDenied (-21)
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND			CFbsBitmap1	new
		COMMAND	!Error=-21	CFbsBitmap1	Load		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0060-001command4Load
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0060


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0061
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0061
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::Load() (Load(const TDesC &aFileName, TInt32 aId=0, TBool aShareIfLoaded=ETrue) version) test with empty file as argument.
//!				Uses API elements: Load()
//! @SYMTestActions		1. Call Load() providing empty file as argument.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Operation must error KErrEof (-25)
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND			CFbsBitmap1	new
		COMMAND	!Error=-25	CFbsBitmap1	Load		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0061-001command4Load
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0061


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0062
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0062
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::Load() (Load(RFile &aFile, TInt32 aId=0, TBool aShareIfLoaded=ETrue) version) test with closed file handle as argument.
//!				Uses API elements: Load()
//! @SYMTestActions		1. Call Load() providing a closed file handle as argument.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Operation must panic
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Load		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0062-001command4Load
	END_TEST_BLOCK	!PanicCode=0
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0062


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0063
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0063
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::Load() (Load(const TDesC &aFileName, TInt32 aId, TBool aShareIfLoaded, TUint aFileOffset) version) test with out of range offset.
//!				Uses API elements: Load()
//! @SYMTestActions		1. Call Load() giving real bitmap file as argument but out of range offset.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Operation must error KErrEof (-25)
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND			CFbsBitmap1	new
		COMMAND	!Error=-25	CFbsBitmap1	Load		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0063-001command4Load
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0063


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0065
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0065
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::Load() (Load(const TDesC &aFileName, TInt32 aId, TBool aShareIfLoaded, TUint aFileOffset) version) test with out of range bitmap id.
//!				Uses API elements: Load()
//! @SYMTestActions		1. Call Load() giving real bitmap file as argument but out of range bitmap id.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Operation must error KErrEof (-25)
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND			CFbsBitmap1	new
		COMMAND	!Error=-25	CFbsBitmap1	Load		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0065-001command4Load
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0065


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0066
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0066
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::Load() (Load(const TDesC &aFileName, TInt32 aId, TBool aShareIfLoaded, TUint aFileOffset) version) test with negative bitmap id.
//!				Uses API elements: Load()
//! @SYMTestActions		1. Call Load() giving real bitmap file as argument but negative bitmap id.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Operation must error KErrEof (-25)
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND			CFbsBitmap1	new
		COMMAND	!Error=-25	CFbsBitmap1	Load		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0066-001command4Load
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0066


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0067
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0067
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::LoadAndCompress() (LoadAndCompress(const TDesC &aFileName, TInt32 aId=0, TBool aShareIfLoaded=ETrue) version) test with inexistant file.
//!				Uses API elements: LoadAndCompress()
//! @SYMTestActions		1. Call Load() providing wrong path as argument.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Operation must return error KErrNotFound (-1)
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND			CFbsBitmap1	new
		COMMAND	!Error=-1	CFbsBitmap1	LoadAndCompress	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0067-001command4LoadAndCompress
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0067


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0068
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0068
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::LoadAndCompress() (LoadAndCompress(const TDesC &aFileName, TInt32 aId=0, TBool aShareIfLoaded=ETrue) version) test with directory path instead of file path.
//!				Uses API elements: LoadAndCompress()
//! @SYMTestActions		1. Call LoadAndCompress() providing directory path instead of file path as argument.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Operation must return error KErrAccessDenied (-21)
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND			CFbsBitmap1	new
		COMMAND	!Error=-21	CFbsBitmap1	LoadAndCompress	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0068-001command4LoadAndCompress
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0068


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0069
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0069
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::LoadAndCompress() (LoadAndCompress(const TDesC &aFileName, TInt32 aId=0, TBool aShareIfLoaded=ETrue) version) test with non-bitmap file as argument.
//!				Uses API elements: LoadAndCompress()
//! @SYMTestActions		1. Call LoadAndCompress() providing non-bitmap file as argument.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Operation must return error KErrEof (-25)
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND			CFbsBitmap1	new
		COMMAND	!Error=-25	CFbsBitmap1	LoadAndCompress	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0069-001command4LoadAndCompress
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0069


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0070
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0070
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::LoadAndCompress() (LoadAndCompress(RFile &aFile, TInt32 aId=0, TBool aShareIfLoaded=ETrue) version) test with closed file handle as argument.
//!				Uses API elements: LoadAndCompress()
//! @SYMTestActions		1. Call LoadAndCompress() providing closed file handle as argument.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Operation must panic
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI		\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	LoadAndCompress		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0070-001-LoadAndCompress_command04
	END_TEST_BLOCK	!PanicCode=0
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0070


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0071
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0071
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::LoadAndCompress() (LoadAndCompress(const TDesC &aFileName, TInt32 aId, TBool aShareIfLoaded, TUint aFileOffset) version) test with out of range offset.
//!				Uses API elements: LoadAndCompress()
//! @SYMTestActions		1. Call LoadAndCompress() giving real bitmap file as argument but out of range offset.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Operation must return error KErrEof (-25)
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND			CFbsBitmap1	new
		COMMAND	!Error=-25	CFbsBitmap1	LoadAndCompress	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0071-001command4LoadAndCompress
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0071


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0073
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0073
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::LoadAndCompress() (LoadAndCompress(const TDesC &aFileName, TInt32 aId, TBool aShareIfLoaded, TUint aFileOffset) version) test with out of range bitmap id.
//!				Uses API elements: LoadAndCompress()
//! @SYMTestActions		1. Call LoadAndCompress() giving real bitmap file as argument but out of range bitmap id.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Operation must return error KErrEof (-25)
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND			CFbsBitmap1	new
		COMMAND	!Error=-25	CFbsBitmap1	LoadAndCompress	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0073-001command4LoadAndCompress
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0073


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0074
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0074
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::LoadAndCompress() (LoadAndCompress(const TDesC &aFileName, TInt32 aId, TBool aShareIfLoaded, TUint aFileOffset) version) test with negative bitmap id.
//!				Uses API elements: LoadAndCompress()
//! @SYMTestActions		1. Call LoadAndCompress() giving real bitmap file as argument but negative bitmap id.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Operation must return error KErrEof (-25)
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND			CFbsBitmap1	new
		COMMAND	!Error=-25	CFbsBitmap1	LoadAndCompress	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0074-001command4LoadAndCompress
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0074


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0075
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0075
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::Save() (Save(const TDesC &aFilename) version) test with not fully constructed bitmap.
//!				Uses API elements: Save()
//! @SYMTestActions		1. Construct a bitmap but don't load or create it.
//!				2. Call Save() without using RFile.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Operation must return error KErrGeneral (-2)
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND			CFbsBitmap1	new
		COMMAND	!Error=-2	CFbsBitmap1	Save		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0075-001command4Save
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0075


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0076
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0076
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::Save() (Save(RFile &aFile) version) test with not fully constructed bitmap.
//!				Uses API elements: Save()
//! @SYMTestActions		1. Construct a bitmap but don't load or create it.
//!				2. Call Save() using RFile.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Operation must return error KErrGeneral (-2)
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND			CFbsBitmap1	new
		COMMAND	!Error=-2	CFbsBitmap1	Save		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0076-001command4Save
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0076


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0077
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0077
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::Save() (Save(const TDesC &aFilename) version) test providing directory path instead of file path.
//!				Uses API elements: Save()
//! @SYMTestActions		1. Create a bitmap.
//!				2. Call Save() without using RFile providing directory path instead of file path.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Operation must return error KErrAccessDenied (-21)
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND			CFbsBitmap1	new
		COMMAND			CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0077-001command4Create
		COMMAND	!Error=-21	CFbsBitmap1	Save		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0077-001command5Save
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0077


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0078
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0078
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::Save() (Save(const TDesC &aFilename) version) test providing a file path that resides in inexistant directory.
//!				Uses API elements: Save()
//! @SYMTestActions		1. Create a bitmap.
//!				2. Call Save() without using RFile providing a file path that resides in inexistant directory.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Operation must return error KErrPathNotFound (-12)
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND			CFbsBitmap1	new
		COMMAND			CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0078-001command4Create
		COMMAND	!Error=-12	CFbsBitmap1	Save		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0078-001command5Save
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0078


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0079
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0079
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::Save() (Save(RFile &aFile) version) test providing invalid (closed) file handle.
//!				Uses API elements: Save()
//! @SYMTestActions		1. Create a bitmap.
//!				2. Call Save() using RFile providing invalid (closed) file handle.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Operation must panic
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0079-001-Create_command04
		COMMAND		CFbsBitmap1	Save		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0079-001-Save_command05
	END_TEST_BLOCK	!PanicCode=0
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0079


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0080
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0080
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::Save() (Save(const TDesC &aFilename) version) test providing malformed (empty) file path.
//!				Uses API elements: Save()
//! @SYMTestActions		1. Create a bitmap.
//!				2. Call Save() without using RFile providing malformed (empty) file path.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Operation must return error KErrBadName (-28)
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND			CFbsBitmap1	new
		COMMAND			CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0080-001command4Create
		COMMAND	!Error=-28	CFbsBitmap1	Save		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0080-001command5Save
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0080


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0081
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0081
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::StoreL() (StoreL(const TDesC &aFilename, TInt aNumSources, const TDesC *aSources[], TInt32 aSourceIds[]) version) test that tries to provide inexistant source files.
//!				Uses API elements: StoreL()
//! @SYMTestActions		1. Call Store() passing an inexistent source file, number of bitmaps 1 and source id 0.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Operation must return error KErrNotFound (-1)
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND	!Error=-1	CFbsBitmap1	StoreL		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0081-001command3StoreL
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0081


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0082
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0082
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::StoreL() (StoreL(const TDesC &aFilename, TInt aNumSources, const TDesC *aSources[], TInt32 aSourceIds[]) version) test that tries to provide out of range id of bitmap.
//!				Uses API elements: StoreL()
//! @SYMTestActions		1. Call Store() passing a valid source file, number of bitmaps 1 and source id 99999.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Operation must return error KErrEof (-25)
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND	!Error=-25	CFbsBitmap1	StoreL		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0082-001command3StoreL
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0082


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0083
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0083
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::StoreL() (StoreL(const TDesC &aFilename, TInt aNumSources, const TDesC *aSources[], TInt32 aSourceIds[]) version) test that tries to provide negative id of bitmap.
//!				Uses API elements: StoreL()
//! @SYMTestActions		1. Call Store() passing a source file, number of bitmaps 1 and source id -1.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Operation must return error KErrEof (-25)
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND	!Error=-25	CFbsBitmap1	StoreL		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0083-001command3StoreL
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0083


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0084
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0084
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::StoreL() (StoreL(const TDesC &aFilename, TInt aNumSources, const TDesC *aSources[], TInt32 aSourceIds[]) version) test that passes negative number of bitmaps.
//!				Uses API elements: StoreL()
//! @SYMTestActions		1. Call Store() passing a source file, number of bitmaps -1 and source id 0.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Operation must return error KErrArgument (-6)
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND	!Error=-6	CFbsBitmap1	StoreL		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0084-001command3StoreL
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0084


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0085
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0085
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::StoreL() (StoreL(const TDesC &aFilename, TInt aNumSources, const TDesC *aSources[], TInt32 aSourceIds[]) version) test that passes out-of-range number of bitmaps.
//!				Uses API elements: StoreL()
//! @SYMTestActions		1. Call Store() passing a source file, number of bitmaps 999 and source id 0.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Operation must return error KErrArgument (-6)
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND	!Error=-6	CFbsBitmap1	StoreL		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0085-001command3StoreL
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0085


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0086
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0086
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::StoreL() (StoreL(const TDesC &aFilename, TInt aNumSources, const TDesC *aSources[], TInt32 aSourceIds[]) version) test that passes number of bitmaps = 0.
//!				Uses API elements: StoreL()
//! @SYMTestActions		1. Call Store() passing a source file, number of bitmaps 0 and source id 0.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Operation must return error KErrArgument (-6)
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND	!Error=-6	CFbsBitmap1	StoreL		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0086-001command3StoreL
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0086


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0087
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0087
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::StoreL() (StoreL(const TDesC &aFilename, TInt aNumSources, const TDesC *aSources[], TInt32 aSourceIds[]) version)
//!				test that passes number of bitmaps that is in range of source file number but greater than number of bitmap ids.
//!				Uses API elements: StoreL()
//! @SYMTestActions		1. Create an array of file names that contains a file 3 times
//!				2. Create an array of bitmap ids that contains 1 id = 0
//!				3. Call Store() passing the source files, bitmaps ids and number of bitmaps = 2
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Operation must return error KErrEof (-25)
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND	!Error=-25	CFbsBitmap1	StoreL		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0087-001command3StoreL
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0087




START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0089
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0089
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::StoreL() (StoreL(RFile &aFile, TInt aNumSources, const TDesC *aSources[], TInt32 aSourceIds[]) version) test that tries to provide inexistant source files.
//!				Uses API elements: StoreL()
//! @SYMTestActions		1. Call Store() passing an inexistent source file, number of bitmaps 1 and source id 0.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Operation must return error KErrNotFound (-1)
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND	!Error=-1	CFbsBitmap1	StoreL		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0089-001command3StoreL
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0089


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0090
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0090
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::StoreL() (StoreL(RFile &aFile, TInt aNumSources, const TDesC *aSources[], TInt32 aSourceIds[]) version) test that tries to provide out of range id of bitmap.
//!				Uses API elements: StoreL()
//! @SYMTestActions		1. Call Store() passing a source file, number of bitmaps 1 and source id 99999.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Operation must return error KErrEof (-25)
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND	!Error=-25	CFbsBitmap1	StoreL		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0090-001command3StoreL
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0090

START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0091
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0091
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::StoreL() (StoreL(RFile &aFile, TInt aNumSources, const TDesC *aSources[], TInt32 aSourceIds[]) version) test that tries to provide negative id of bitmap.
//!				Uses API elements: StoreL()
//! @SYMTestActions		1. Call Store() passing a source file, number of bitmaps 1 and source id -1.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Operation must return error KErrEof (-25)
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND	!Error=-25	CFbsBitmap1	StoreL		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0091-001command3StoreL
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0091


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0092
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0092
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::StoreL() (StoreL(RFile &aFile, TInt aNumSources, const TDesC *aSources[], TInt32 aSourceIds[]) version) test that passes negative number of bitmaps.
//!				Uses API elements: StoreL()
//! @SYMTestActions		1. Call Store() passing a source file, number of bitmaps -1 and source id 0.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Operation must return error KErrArgument (-6)
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND	!Error=-6	CFbsBitmap1	StoreL		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0092-001command3StoreL
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0092


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0093
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0093
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::StoreL() (StoreL(RFile &aFile, TInt aNumSources, const TDesC *aSources[], TInt32 aSourceIds[]) version) test that passes out-of-range number of bitmaps.
//!				Uses API elements: StoreL()
//! @SYMTestActions		1. Call Store() passing a source file, number of bitmaps 999 and source id 0.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Operation must return error KErrArgument (-6)
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND	!Error=-6	CFbsBitmap1	StoreL		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0093-001command3StoreL
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0093


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0094
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0094
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::StoreL() (StoreL(RFile &aFile, TInt aNumSources, const TDesC *aSources[], TInt32 aSourceIds[]) version) test that passes number of bitmaps = 0.
//!				Uses API elements: StoreL()
//! @SYMTestActions		1. Call Store() passing a source file, number of bitmaps 0 and source id 0.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Operation must return error KErrArgument (-6)
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND	!Error=-6	CFbsBitmap1	StoreL		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0094-001command3StoreL
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0094


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0095
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0095
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::StoreL() (StoreL(RFile &aFile, TInt aNumSources, const TDesC *aSources[], TInt32 aSourceIds[]) version)
//!				test that passes number of bitmaps that is in range of source file number but greater than number of bitmap ids.
//!				Uses API elements: StoreL()
//! @SYMTestActions		1. Create an array of file names that contains 3 files
//!				3. Create an array of bitmap ids that contains 1 id = 0
//!				4. Call Store() passing the source files, bitmaps ids and number of bitmaps = 2
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Operation must return error KErrEof (-25)
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND	!Error=-25	CFbsBitmap1	StoreL		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0095-001command3StoreL
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0095



START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0097
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0097
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::StoreL() (StoreL(RFile &aFile, TInt aNumSources, const TDesC *aSources[], TInt32 aSourceIds[]) version)
//!				test that passes not opened output file handle
//!				Uses API elements: StoreL()
//! @SYMTestActions		1. Create a bitmap saving it into a file right after creation.
//!				2. Call Store() passing the source file, bitmap id = 0, number of bitmaps = 1 and not-opened output file handle
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Operation must panic
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	StoreL		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0097-001-StoreL_command03
	END_TEST_BLOCK	!PanicCode=0
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0097


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0098
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0098
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::GetScanLine() (GetScanLine(TDes8 &aBuf, const TPoint &aPixel, TInt aLength, TDisplayMode aDispMode) version) test with negative length.
//!				Uses API elements: GetScanLine()
//! @SYMTestActions		1. Create bitmap (10x10, EColor256).
//!				2. Call GetScanLine() with start point (0, 0), length = -1, display mode EColor256
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Operation must panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0098-001-Create_command04
		COMMAND		CFbsBitmap1	GetScanLine	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0098-001-GetScanLine_command05
	END_TEST_BLOCK	!PanicCode=23
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0098


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0099
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0099
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::GetScanLine() (GetScanLine(TDes8 &aBuf, const TPoint &aPixel, TInt aLength, TDisplayMode aDispMode) version) test with 0 length.
//!				Uses API elements: GetScanLine()
//! @SYMTestActions		1. Create bitmap (10x10, EColor256).
//!				2. Call GetScanLine() with start point (0, 0), length = 0, display mode EColor256
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The function GetScanLine() call doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0099-001command4Create
		COMMAND		CFbsBitmap1	GetScanLine	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0099-001command5GetScanLine
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0099


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0100
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0100
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::GetScanLine() (GetScanLine(TDes8 &aBuf, const TPoint &aPixel, TInt aLength, TDisplayMode aDispMode) version) test with too big length.
//!				Uses API elements: GetScanLine()
//! @SYMTestActions		1. Create bitmap (10x10, EColor256).
//!				2. Call GetScanLine() with start point (0, 0), length = 99999, display mode EColor256
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The function GetScanLine() call doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0100-001command4Create
		COMMAND		CFbsBitmap1	GetScanLine	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0100-001command5GetScanLine
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0100


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0101
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0101
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::GetScanLine() (GetScanLine(TDes8 &aBuf, const TPoint &aPixel, TInt aLength, TDisplayMode aDispMode) version) test with negative start point.
//!				Uses API elements: GetScanLine()
//! @SYMTestActions		1. Create bitmap (10x10, EColor256).
//!				2. Call GetScanLine() with start point (-1, -1), length = 10, display mode EColor256
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The function GetScanLine() call doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0101-001command4Create
		COMMAND		CFbsBitmap1	GetScanLine	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0101-001command5GetScanLine
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0101


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0102
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0102
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::GetScanLine() (GetScanLine(TDes8 &aBuf, const TPoint &aPixel, TInt aLength, TDisplayMode aDispMode) version) test with out of range start point.
//!				Uses API elements: GetScanLine()
//! @SYMTestActions		1. Create bitmap (10x10, EColor256).
//!				2. Call GetScanLine() with start point (100, 100), length = 10, display mode EColor256
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The function GetScanLine() call doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0102-001command4Create
		COMMAND		CFbsBitmap1	GetScanLine	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0102-001command5GetScanLine
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0102


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0103
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0103
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::GetScanLine() (GetScanLine(TDes8 &aBuf, const TPoint &aPixel, TInt aLength, TDisplayMode aDispMode) version) test with display mode ENone.
//!				Uses API elements: GetScanLine()
//! @SYMTestActions		1. Create bitmap (10x10, EColor256).
//!				2. Call GetScanLine() with start point (0, 0), length = 10, display mode ENone
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The function GetScanLine() call doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0103-001command4Create
		COMMAND		CFbsBitmap1	GetScanLine	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0103-001command5GetScanLine
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0103


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0104
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0104
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::GetScanLine() (GetScanLine(TDes8 &aBuf, const TPoint &aPixel, TInt aLength, TDisplayMode aDispMode) version) test with display mode ERgb.
//!				Uses API elements: GetScanLine()
//! @SYMTestActions		1. Create bitmap (10x10, EColor256).
//!				2. Call GetScanLine() with start point (0, 0), length = 10, display mode ERgb
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The function GetScanLine() call doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0104-001command4Create
		COMMAND		CFbsBitmap1	GetScanLine	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0104-001command5GetScanLine
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0104


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0105
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0105
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::GetScanLine() (GetScanLine(TDes8 &aBuf, const TPoint &aPixel, TInt aLength, TDisplayMode aDispMode) version) test with display mode EColorLast.
//!				Uses API elements: GetScanLine()
//! @SYMTestActions		1. Create bitmap (10x10, EColor256).
//!				2. Call GetScanLine() with start point (0, 0), length = 10, display mode EColorLast
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The function GetScanLine() call doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0105-001command4Create
		COMMAND		CFbsBitmap1	GetScanLine	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0105-001command5GetScanLine
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0105


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0106
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0106
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::GetScanLine() (GetScanLine(TDes8 &aBuf, const TPoint &aPixel, TInt aLength, TDisplayMode aDispMode) version) test with invalid display.
//!				Uses API elements: GetScanLine()
//! @SYMTestActions		1. Create bitmap (10x10, EColor256).
//!				2. Call GetScanLine() with start point (0, 0), length = 10, display mode -1.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The function GetScanLine() call doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0106-001command4Create
		COMMAND		CFbsBitmap1	GetScanLine	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0106-001command5GetScanLine
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0106


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0107
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0107
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::GetScanLine() (GetScanLine(TDes8 &aBuf, const TPoint &aPixel, TInt aLength, TDisplayMode aDispMode) version) test with too short buffer.
//!				Uses API elements: GetScanLine()
//! @SYMTestActions		1. Create bitmap (10x10, EColor256).
//!				2. Call GetScanLine() with start point (0, 0), length = 10, display mode EColor256 and buffer with length 1.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The function GetScanLine() call doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0107-001command4Create
		COMMAND		CFbsBitmap1	GetScanLine	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0107-001command5GetScanLine
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0107


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0108
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0108
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::SetScanLine() test with negative position.
//!				Uses API elements: SetScanLine()
//! @SYMTestActions		1. Create bitmap (100x100, EColor256).
//!				2. Set horizontal scanline using position -1 from data-file.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The function SetScanLine() call doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0108-001command4Create
		COMMAND		CFbsBitmap1	SetScanLine	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0108-001command5SetScanLine
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0108


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0109
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0109
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::SetScanLine() test with too big position.
//!				Uses API elements: SetScanLine()
//! @SYMTestActions		1. Create bitmap (100x100, EColor256).
//!				2. Set horizontal scanline using bitmaps's position 100 from a data-file.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The function SetScanLine() call doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0109-001command4Create
		COMMAND		CFbsBitmap1	SetScanLine	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0109-001command5SetScanLine
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0109


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0110
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0110
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::GetVerticalScanLine() (GetVerticalScanLine(TDes8 &aBuf, TInt aX, TDisplayMode aDispMode) version) test with negative x-coordinate.
//!				Uses API elements: GetVerticalScanLine()
//! @SYMTestActions		1. Create bitmap (10x10, EColor256).
//!				2. Call GetVerticalScanLine() with x-coordinate -1, display mode EColor256
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The function GetVerticalScanLine() call doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI		\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0110-001command4Create
		COMMAND		CFbsBitmap1	GetVerticalScanLine	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0110-001command5GetVerticalScanLine
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0110


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0111
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0111
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::GetVerticalScanLine() (GetVerticalScanLine(TDes8 &aBuf, TInt aX, TDisplayMode aDispMode) version) test with too big x-coordinate.
//!				Uses API elements: GetVerticalScanLine()
//! @SYMTestActions		1. Create bitmap (10x10, EColor256).
//!				2. Call GetVerticalScanLine() with x-coordinate 999, display mode EColor256
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The function GetVerticalScanLine() call doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI		\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0111-001command4Create
		COMMAND		CFbsBitmap1	GetVerticalScanLine	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0111-001command5GetVerticalScanLine
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0111


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0112
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0112
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::GetVerticalScanLine() (GetVerticalScanLine(TDes8 &aBuf, TInt aX, TDisplayMode aDispMode) version) test with display mode ENone.
//!				Uses API elements: GetVerticalScanLine()
//! @SYMTestActions		1. Create bitmap (10x10, EColor256).
//!				2. Call GetVerticalScanLine() with x-coordinate 0, display mode ENone.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The function GetVerticalScanLine() call doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI		\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0112-001command4Create
		COMMAND		CFbsBitmap1	GetVerticalScanLine	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0112-001command5GetVerticalScanLine
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0112


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0113
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0113
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::GetVerticalScanLine() (GetVerticalScanLine(TDes8 &aBuf, TInt aX, TDisplayMode aDispMode) version) test with display mode ERgb.
//!				Uses API elements: GetVerticalScanLine()
//! @SYMTestActions		1. Create bitmap (10x10, EColor256).
//!				2. Call GetVerticalScanLine() with x-coordinate 0, display mode ERgb.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The function GetVerticalScanLine() call doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI		\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0113-001command4Create
		COMMAND		CFbsBitmap1	GetVerticalScanLine	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0113-001command5GetVerticalScanLine
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0113


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0114
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0114
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::GetVerticalScanLine() (GetVerticalScanLine(TDes8 &aBuf, TInt aX, TDisplayMode aDispMode) version) test with display mode EColorLast.
//!				Uses API elements: GetVerticalScanLine()
//! @SYMTestActions		1. Create bitmap (10x10, EColor256).
//!				2. Call GetVerticalScanLine() with x-coordinate 0, display mode EColorLast.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The function GetVerticalScanLine() call doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI		\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0114-001command4Create
		COMMAND		CFbsBitmap1	GetVerticalScanLine	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0114-001command5GetVerticalScanLine
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0114


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0115
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0115
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::GetVerticalScanLine() (GetVerticalScanLine(TDes8 &aBuf, TInt aX, TDisplayMode aDispMode) version) test with invalid display mode.
//!				Uses API elements: GetVerticalScanLine()
//! @SYMTestActions		1. Create bitmap (10x10, EColor256).
//!				2. Call GetVerticalScanLine() with x-coordinate 0, display mode -1.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The function GetVerticalScanLine() call doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI		\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0115-001command4Create
		COMMAND		CFbsBitmap1	GetVerticalScanLine	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0115-001command5GetVerticalScanLine
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0115


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0116
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0116
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::GetVerticalScanLine() (GetVerticalScanLine(TDes8 &aBuf, TInt aX, TDisplayMode aDispMode) version) test with too short buffer.
//!				Uses API elements: GetVerticalScanLine()
//! @SYMTestActions		1. Create bitmap (10x10, EColor256).
//!				2. Call GetVerticalScanLine() with x-coordinate 0, display mode EColor256 and buffer with length 1.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The function GetVerticalScanLine() call doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI		\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0116-001command4Create
		COMMAND		CFbsBitmap1	GetVerticalScanLine	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0116-001command5GetVerticalScanLine
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0116


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0117
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0117
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::GetVerticalScanLine() (GetVerticalScanLine(TDes8 &aBuf, TInt aX, const TPoint &aDitherOffset, TDisplayMode aDispMode) version) test with negative x-coordinate.
//!				Uses API elements: GetVerticalScanLine()
//! @SYMTestActions		1. Create bitmap (10x10, EColor256).
//!				2. Call GetVerticalScanLine() with x-coordinate -1, display mode EColor256, dithering offset (0, 0).
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The function GetVerticalScanLine() call doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI		\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0117-001command4Create
		COMMAND		CFbsBitmap1	GetVerticalScanLine	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0117-001command5GetVerticalScanLine
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0117


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0118
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0118
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::GetVerticalScanLine() (GetVerticalScanLine(TDes8 &aBuf, TInt aX, const TPoint &aDitherOffset, TDisplayMode aDispMode) version) test with too big x-coordinate.
//!				Uses API elements: GetVerticalScanLine()
//! @SYMTestActions		1. Create bitmap (10x10, EColor256).
//!				2. Call GetVerticalScanLine() with x-coordinate 999, display mode EColor256, dithering offset (0, 0).
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The function GetVerticalScanLine() call doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI		\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0118-001command4Create
		COMMAND		CFbsBitmap1	GetVerticalScanLine	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0118-001command5GetVerticalScanLine
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0118


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0119
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0119
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::GetVerticalScanLine() (GetVerticalScanLine(TDes8 &aBuf, TInt aX, const TPoint &aDitherOffset, TDisplayMode aDispMode) version) test with display mode ENone.
//!				Uses API elements: GetVerticalScanLine()
//! @SYMTestActions		1. Create bitmap (10x10, EColor256).
//!				2. Call GetVerticalScanLine() with x-coordinate 0, display mode ENone, dithering offset (0, 0).
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The function GetVerticalScanLine() call doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI		\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0119-001command4Create
		COMMAND		CFbsBitmap1	GetVerticalScanLine	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0119-001command5GetVerticalScanLine
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0119


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0120
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0120
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::GetVerticalScanLine() (GetVerticalScanLine(TDes8 &aBuf, TInt aX, const TPoint &aDitherOffset, TDisplayMode aDispMode) version) test with display mode ERgb.
//!				Uses API elements: GetVerticalScanLine()
//! @SYMTestActions		1. Create bitmap (10x10, EColor256).
//!				2. Call GetVerticalScanLine() with x-coordinate 0, display mode ERgb, dithering offset (0, 0).
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The function GetVerticalScanLine() call doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI		\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0120-001command4Create
		COMMAND		CFbsBitmap1	GetVerticalScanLine	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0120-001command5GetVerticalScanLine
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0120


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0121
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0121
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::GetVerticalScanLine() (GetVerticalScanLine(TDes8 &aBuf, TInt aX, const TPoint &aDitherOffset, TDisplayMode aDispMode) version) test with display mode EColorLast.
//!				Uses API elements: GetVerticalScanLine()
//! @SYMTestActions		1. Create bitmap (10x10, EColor256).
//!				2. Call GetVerticalScanLine() with x-coordinate 0, display mode EColorLast, dithering offset (0, 0).
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The function GetVerticalScanLine() call doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI		\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0121-001command4Create
		COMMAND		CFbsBitmap1	GetVerticalScanLine	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0121-001command5GetVerticalScanLine
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0121


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0122
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0122
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::GetVerticalScanLine() (GetVerticalScanLine(TDes8 &aBuf, TInt aX, const TPoint &aDitherOffset, TDisplayMode aDispMode) version) test with invalid display mode.
//!				Uses API elements: GetVerticalScanLine()
//! @SYMTestActions		1. Create bitmap (10x10, EColor256).
//!				2. Call GetVerticalScanLine() with x-coordinate 0, display mode -1, dithering offset (0, 0).
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The function GetVerticalScanLine() call doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI		\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0122-001command4Create
		COMMAND		CFbsBitmap1	GetVerticalScanLine	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0122-001command5GetVerticalScanLine
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0122


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0123
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0123
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::GetVerticalScanLine() (GetVerticalScanLine(TDes8 &aBuf, TInt aX, const TPoint &aDitherOffset, TDisplayMode aDispMode) version) test with too short buffer.
//!				Uses API elements: GetVerticalScanLine()
//! @SYMTestActions		1. Create bitmap (10x10, EColor256).
//!				2. Call GetVerticalScanLine() with x-coordinate 0, display mode EColor256, dithering offset (0, 0). and buffer with length 1.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The function GetVerticalScanLine() call doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI		\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0123-001command4Create
		COMMAND		CFbsBitmap1	GetVerticalScanLine	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0123-001command5GetVerticalScanLine
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0123


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0124
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0124
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::GetVerticalScanLine() (GetVerticalScanLine(TDes8 &aBuf, TInt aX, const TPoint &aDitherOffset, TDisplayMode aDispMode) version) test with negative dithering offset.
//!				Uses API elements: GetVerticalScanLine()
//! @SYMTestActions		1. Create bitmap (10x10, EColor256).
//!				2. Call GetVerticalScanLine() with x-coordinate 0, display mode EColor256, dithering offset (-1, -1).
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The function GetVerticalScanLine() call doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI		\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0124-001command4Create
		COMMAND		CFbsBitmap1	GetVerticalScanLine	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0124-001command5GetVerticalScanLine
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0124


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0125
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0125
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::GetVerticalScanLine() (GetVerticalScanLine(TDes8 &aBuf, TInt aX, const TPoint &aDitherOffset, TDisplayMode aDispMode) version) test with too big dithering offset.
//!				Uses API elements: GetVerticalScanLine()
//! @SYMTestActions		1. Create bitmap (10x10, EColor256).
//!				2. Call GetVerticalScanLine() with x-coordinate 0, display mode EColor256, dithering offset (99999, 99999).
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The function GetVerticalScanLine() call doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI		\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0125-001command4Create
		COMMAND		CFbsBitmap1	GetVerticalScanLine	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0125-001command5GetVerticalScanLine
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0125


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0126
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0126
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		Convert horiz/vert dimensions on graphics device between pixels and twips for negative values.
//!				Uses API elements: Load(), HorizontalPixelsToTwips(), HorizontalTwipsToPixels(),
//!				VerticalPixelsToTwips(), VerticalTwipsToPixels()
//! @SYMTestActions		1. Create bitmap.
//!				2. Convert horiz dimensions on graphics device from -999 pixels to twips and check it to be as expected.
//!				3. Convert horiz dimensions on graphics device back to pixels from -999 twips and check it to be as expected.
//!				4. Convert vert dimensions on graphics device from -999 pixels to twips and check it to be as expected.
//!				5. Convert vert dimensions on graphics device back to pixels from -999 twips and check it to be as expected.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Conversions are done correctly without causing panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI		\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0126-001command4Create
		COMMAND		CFbsBitmap1	HorizontalPixelsToTwips	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0126-001command5HorizontalPixelsToTwips
		COMMAND		CFbsBitmap1	HorizontalTwipsToPixels	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0126-001command6HorizontalTwipsToPixels
		COMMAND		CFbsBitmap1	VerticalPixelsToTwips	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0126-001command7VerticalPixelsToTwips
		COMMAND		CFbsBitmap1	VerticalTwipsToPixels	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0126-001command8VerticalTwipsToPixels
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0126


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0127
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0127
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		GetPixel() test for negative x-coordinate.
//!				Uses API elements: GetPixel()
//! @SYMTestActions		1. Create 10x10 bitmap.
//!				2. Call GetPixel(-1, 0) and check the RGB color to be as expected.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The function GetPixel() call doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0127-001command4Create
		COMMAND		CFbsBitmap1	GetPixel	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0127-001command5GetPixel
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0127


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0128
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0128
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		GetPixel() test for negative y-coordinate.
//!				Uses API elements: GetPixel()
//! @SYMTestActions		1. Create 10x10 bitmap.
//!				2. Call GetPixel(0, -1) and check the RGB color to be as expected.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The function GetPixel() call doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0128-001command4Create
		COMMAND		CFbsBitmap1	GetPixel	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0128-001command5GetPixel
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0128


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0129
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0129
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		GetPixel() test for negative x- and y-coordinate.
//!				Uses API elements: GetPixel()
//! @SYMTestActions		1. Create 10x10 bitmap.
//!				2. Call GetPixel(-1, -1) and check the RGB color to be as expected.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The function GetPixel() call doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0129-001command4Create
		COMMAND		CFbsBitmap1	GetPixel	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0129-001command5GetPixel
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0129


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0130
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0130
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		GetPixel() test for too big x-coordinate.
//!				Uses API elements: GetPixel()
//! @SYMTestActions		1. Create 10x10 bitmap.
//!				2. Call GetPixel(10, 0) and check the RGB color to be as expected.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The function GetPixel() call doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0130-001command4Create
		COMMAND		CFbsBitmap1	GetPixel	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0130-001command5GetPixel
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0130


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0131
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0131
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		GetPixel() test for too big y-coordinate.
//!				Uses API elements: GetPixel()
//! @SYMTestActions		1. Create 10x10 bitmap.
//!				2. Call GetPixel(0, 10) and check the RGB color to be as expected.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The function GetPixel() call doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0131-001command4Create
		COMMAND		CFbsBitmap1	GetPixel	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0131-001command5GetPixel
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0131


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0132
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0132
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		GetPixel() test for too big x- and y-coordinate.
//!				Uses API elements: GetPixel()
//! @SYMTestActions		1. Create 10x10 bitmap.
//!				2. Call GetPixel(10, 10) and check the RGB color to be as expected.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The function GetPixel() call doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0132-001command4Create
		COMMAND		CFbsBitmap1	GetPixel	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0132-001command5GetPixel
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0132


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0133
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0133
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		Resize() test on not fully constructed bitmap.
//!				Uses API elements: Resize()
//! @SYMTestActions		1. Construct a bitmap, but don't load or create it.
//!				2. Call Resize().
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Resize() must return error KErrGeneral (-2).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND			CFbsBitmap1	new
		COMMAND	!Error=-2	CFbsBitmap1	Resize		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0133-001command4Resize
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0133





START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0136
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0136
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::SetSizeInTwips() (SetSizeInTwips(const MGraphicsDeviceMap *aMap) version) test NULL argument test.
//!				Uses API elements: SetSizeInTwips()
//! @SYMTestActions		1. Create bitmap.
//!				2. Call SetSizeInTwips() passing NULL as argument.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The function SetSizeInTwips() call doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI		\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession		RFbsSession1
		CREATE_OBJECT	CFbsBitmap		CFbsBitmap1
		CREATE_OBJECT	CFbsBitmapDevice	CFbsBitmapDevice1
		COMMAND		RFbsSession1		Connect
		COMMAND		CFbsBitmap1		new
		COMMAND		CFbsBitmap1		Create			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0136-001command4Create
		COMMAND		CFbsBitmap1		SetSizeInTwips		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0136-001command5SetSizeInTwips
		COMMAND		CFbsBitmap1		~
		COMMAND		RFbsSession1		Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0136


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0137
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0137
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::SetSizeInTwips() (SetSizeInTwips(const TSize &aSizeInTwips) version) with negative width.
//!				Uses API elements: SetSizeInTwips()
//! @SYMTestActions		1. Create bitmap.
//!				2. Call SetSizeInTwips() passing new size (-10, 0).
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The function SetSizeInTwips() call doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0137-001command4Create
		COMMAND		CFbsBitmap1	SetSizeInTwips	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0137-001command5SetSizeInTwips
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0137


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0138
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0138
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::SetSizeInTwips() (SetSizeInTwips(const TSize &aSizeInTwips) version) with negative height.
//!				Uses API elements: SetSizeInTwips()
//! @SYMTestActions		1. Create bitmap.
//!				2. Call SetSizeInTwips() passing new size (0, -10).
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The function SetSizeInTwips() call doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0138-001command4Create
		COMMAND		CFbsBitmap1	SetSizeInTwips	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0138-001command5SetSizeInTwips
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0138


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0139
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0139
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::SetSizeInTwips() (SetSizeInTwips(const TSize &aSizeInTwips) version) with negative width and height.
//!				Uses API elements: SetSizeInTwips()
//! @SYMTestActions		1. Create bitmap.
//!				2. Call SetSizeInTwips() passing new size (-10, -10).
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The function SetSizeInTwips() call doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0139-001command4Create
		COMMAND		CFbsBitmap1	SetSizeInTwips	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0139-001command5SetSizeInTwips
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0139


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0140
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0140
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		ExternalizeL() test on closed write stream.
//!				Uses API elements: ExternalizeL()
//! @SYMTestActions		1. Create a bitmap.
//!				2. Create write stream, close it
//!				3. Call ExternalizeL() on the closed write stream.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The operation must panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0140-001-Create_command04
		COMMAND		CFbsBitmap1	ExternalizeL	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0140-001-ExternalizeL_command05
	END_TEST_BLOCK	!PanicCode=3
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0140


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0141
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0141
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		ExternalizeRectangleL() test on closed write stream.
//!				Uses API elements: ExternalizeRectangleL()
//! @SYMTestActions		1. Create a bitmap.
//!				2. Create write stream, close it
//!				3. Call ExternalizeRectangleL() on the closed write stream.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The operation must panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI		\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0141-001-Create_command04
		COMMAND		CFbsBitmap1	ExternalizeRectangleL	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0141-001-ExternalizeRectangleL_command05
	END_TEST_BLOCK	!PanicCode=3
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0141


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0142
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0142
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		ExternalizeRectangleL() test with out-of-range rectangle.
//!				Uses API elements: ExternalizeRectangleL()
//! @SYMTestActions		1. Create a bitmap.
//!				2. Call ExternalizeRectangleL() on the write stream passing out-of-range rectangle.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	ExternalizeL() must leave with error KErrTooBig (-40)
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI		\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND			CFbsBitmap1	new
		COMMAND			CFbsBitmap1	Create			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0142-001command4Create
		COMMAND	!Error=-40	CFbsBitmap1	ExternalizeRectangleL	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0142-001command5ExternalizeRectangleL
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0142


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0143
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0143
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		InternalizeL() test from non-bitmap file.
//!				Uses API elements: InternalizeL()
//! @SYMTestActions		1. Create a bitmap class instance.
//!				2. Internalize bitmap from read stream that points to non-bitmap file.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	InternalizeL() must leave with error KErrCorrupt (-20)
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND			CFbsBitmap1	new
		COMMAND			CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0143-001command4Create
		COMMAND	!Error=-20	CFbsBitmap1	InternalizeL	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0143-001command5InternalizeL
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0143


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0144
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0144
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		InternalizeL() test on non-opened read stream.
//!				Uses API elements: InternalizeL()
//! @SYMTestActions		1. Create a bitmap class instance.
//!				2. Call InternalizeL() on non-opened read stream
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	InternalizeL() must panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0144-001command4Create
		COMMAND		CFbsBitmap1	InternalizeL	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0144-001command5InternalizeL
	END_TEST_BLOCK	!PanicCode=3
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0144


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0145
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0145
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		06/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		Twice compress a bitmap.
//!				Uses API elements: Compress()
//! @SYMTestActions		1. Load a bitmap from a multi-bitmap file.
//!				2. Compress the bitmap.
//!				3. Compress the bitmap second time.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Second Compress() call must also complete without causing panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Load		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0145-001command4Load
		COMMAND		CFbsBitmap1	Compress
		COMMAND		CFbsBitmap1	Compress
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0145


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0147
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0147
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		06/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::Compress() test on not-fully-constucted bitmap.
//!				Uses API elements: Compress()
//! @SYMTestActions		1. Create a bitmap instance, but don't create or load the bitmap.
//!				2. Compress the bitmap.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Compress() call must return error KErrGeneral (-2)
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND			CFbsBitmap1	new
		COMMAND	!Error=-2	CFbsBitmap1	Compress
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0147


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0148
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0148
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		06/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::CompressInBackground() (CompressInBackground() version) test that compress a bitmap twice.
//!				Uses API elements: CompressInBackground()
//! @SYMTestActions		1. Load a bitmap from a multi-bitmap file.
//!				2. Call Compress() on the bitmap.
//!				3. Call CompressInBackground() on the bitmap.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Second CompressInBackground() call must complete without causing panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI		\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Load			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0148-001command4Load
		COMMAND		CFbsBitmap1	Compress
		COMMAND		CFbsBitmap1	CompressInBackground	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0148-001command6CompressInBackground
		OUTSTANDING
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0148





START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0151
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0151
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		06/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::CompressInBackground() (CompressInBackground(TRequestStatus &aRequestStatus) version) test that compress a bitmap twice.
//!				Uses API elements: CompressInBackground()
//! @SYMTestActions		1. Load a bitmap from a multi-bitmap file.
//!				2. Call Compress() on the bitmap.
//!				3. Call CompressInBackground() on the bitmap.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Second CompressInBackground() call must complete without causing panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI		\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Load			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0151-001command4Load
		COMMAND		CFbsBitmap1	Compress
		COMMAND		CFbsBitmap1	CompressInBackground	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0151-001command6CompressInBackground
		OUTSTANDING
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0151





START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0154
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0154
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		06/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::IsFileInRom() (IsFileInRom(const TDesC &aFilename, TUint32 *&aWord) version) test for malformed path
//!				Uses API elements: IsFileInRom()
//! @SYMTestActions		1. Call IsFileInRom() passing malformed path like ":::::''"
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	IsFileInRom() call must pass without causing panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI		\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	IsFileInRom		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0154-001command4IsFileInRom
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0154


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0155
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0155
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		06/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::CreateHardwareBitmap() test for ENone display mode
//!				Uses API elements: CreateHardwareBitmap()
//! @SYMTestActions		1. Call CreateHardwareBitmap() passing size (100, 200), display mode ENone, creator id 0
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	CreateHardwareBitmap() must return error KErrArgument (-6)
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI		\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND			CFbsBitmap1	new
		COMMAND	!Error=-6	CFbsBitmap1	CreateHardwareBitmap	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0155-001command4CreateHardwareBitmap
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0155


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0156
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0156
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		06/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::CreateHardwareBitmap() test for ERgb display mode
//!				Uses API elements: CreateHardwareBitmap()
//! @SYMTestActions		1. Call CreateHardwareBitmap() passing size (100, 200), display mode ERgb, creator id 0
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	CreateHardwareBitmap() must return error KErrArgument (-6)
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI		\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND			CFbsBitmap1	new
		COMMAND	!Error=-6	CFbsBitmap1	CreateHardwareBitmap	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0156-001command4CreateHardwareBitmap
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0156



START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0159
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0159
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		06/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::CreateHardwareBitmap() test for invalid size
//!				Uses API elements: CreateHardwareBitmap()
//! @SYMTestActions		1. Call CreateHardwareBitmap() passing size (100, -200), display mode EColor256, creator id 0
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	CreateHardwareBitmap() must return error KErrArgument (-6)
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI		\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND			CFbsBitmap1	new
		COMMAND	!Error=-6	CFbsBitmap1	CreateHardwareBitmap	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0159-001command4CreateHardwareBitmap
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0159


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0160
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0160
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		06/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::HardwareBitmapHandle() test non-hardware bitmap
//!				Uses API elements: HardwareBitmapHandle()
//! @SYMTestActions		1. Create a 100x200 bitmap
//!				2. Check that HardwareBitmapHandle() returns 0
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	HardwareBitmapHandle() call doesn't cause panic and must return 0
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI		\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0160-001command4Create
		COMMAND		CFbsBitmap1	HardwareBitmapHandle	GRAPHICS-FBSERV-FbsBitmap-PublicApi-0160-001command5HardwareBitmapHandle
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0160


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0161
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0161
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		06/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		CFbsBitmap::DataAddress() test without locking heap
//!				Uses API elements: DataAddress()
//! @SYMTestActions		1. Create a 100x200 bitmap
//!				2. Call DataAddress() without locking the heap
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	DataAddress() must complete without causing panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_FBServAPI	\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT	RFbsSession	RFbsSession1
		CREATE_OBJECT	CFbsBitmap	CFbsBitmap1
		COMMAND		RFbsSession1	Connect
		COMMAND		CFbsBitmap1	new
		COMMAND		CFbsBitmap1	Create		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0161-001command4Create
		COMMAND		CFbsBitmap1	DataAddress
		COMMAND		CFbsBitmap1	~
		COMMAND		RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0161


START_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0165
//! @SYMTestCaseID		GRAPHICS-FBSERV-FbsBitmap-PublicApi-0165
//! @SYMAPI			CFbsBitmap
//! @SYMAuthor			Anton Golovko
//! @SYMCreationDate		05/06/2006
//! @SYMTestCaseDependencies	setup-GRAPHICS-FBSERV-FbsBitmap-PublicApi.script
//! @SYMTestCaseDesc		SwapWidthAndHeight() test on not fully constructed bitmap.
//!				Uses API elements: SwapWidthAndHeight()
//! @SYMTestActions		1. Construct a bitmap, but don't load or create it.
//!				2. Call SwapWidthAndHeight().
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	SwapWidthAndHeight() must return error KErrGeneral (-2).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100			T_FBServAPI		\graphics\GRAPHICS-FBSERV-FbsBitmap-PublicApi.ini
		CREATE_OBJECT		RFbsSession	RFbsSession1
		CREATE_OBJECT		CFbsBitmap	CFbsBitmap1
		COMMAND			RFbsSession1	Connect
		COMMAND			CFbsBitmap1	new
		COMMAND	!Error=-2	CFbsBitmap1	SwapWidthAndHeight
		COMMAND			CFbsBitmap1	~
		COMMAND			RFbsSession1	Disconnect
	END_TEST_BLOCK
END_TESTCASE 			GRAPHICS-FBSERV-FbsBitmap-PublicApi-0165






