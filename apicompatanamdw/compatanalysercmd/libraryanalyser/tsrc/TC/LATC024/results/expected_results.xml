<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type="text/xsl" href="BBCResults.xsl"?>
<bbcresults>
	<header>
		<baselineversion>Baseline platform</baselineversion>
		<currentversion>Product platform</currentversion>
		<timestamp>
			<day>20</day>
			<month>7</month>
			<year>2009</year>
			<hour>14</hour>
			<minute>38</minute>
			<second>43</second>
		</timestamp>
		<laversion>3.3.0</laversion>
		<formatversion>1.1</formatversion>
		<cmdlineparms>
			<parm>
				<pname>toolchain</pname>
				<pvalue>GCCE</pvalue>
			</parm>
			<parm>
				<pname>baselinelibdir</pname>
				<pvalue>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC024\baseplatform\lib</pvalue>
			</parm>
			<parm>
				<pname>currentlibdir</pname>
				<pvalue>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC024\currentplatform\lib</pvalue>
			</parm>
			<parm>
				<pname>baselinedlldir</pname>
				<pvalue>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC024\baseplatform\urel\baselineexedata.xml</pvalue>
			</parm>
			<parm>
				<pname>currentdlldir</pname>
				<pvalue>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC024\currentplatform\urel</pvalue>
			</parm>
			<parm>
				<pname>baselineversion</pname>
				<pvalue>Baseline platform</pvalue>
			</parm>
			<parm>
				<pname>currentversion</pname>
				<pvalue>Product platform</pvalue>
			</parm>
			<parm>
				<pname>reportfile</pname>
				<pvalue>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC024\results\results.xml</pvalue>
			</parm>
			<parm>
				<pname>tools</pname>
				<pvalue>..\tsrc\bin\</pvalue>
			</parm>
			<parm>
				<pname>temp</pname>
				<pvalue>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\bin\temp\</pvalue>
			</parm>
			<parm>
				<pname>cfilt</pname>
				<pvalue></pvalue>
			</parm>
			<parm>
				<pname>set</pname>
				<pvalue>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC024\scripts\config.txt</pvalue>
			</parm>
		</cmdlineparms>
		<knownissuesversion></knownissuesversion>
	</header>
	<issuelist>
		<library>
			<name>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC024\baseplatform\lib\OCTC024.dso</name>
			<comparefilename>C:\Symbian\Carbide\workspace\libraryAnalyser\trunk\tsrc\TC\LATC024\currentplatform\lib\OCTC024.dso</comparefilename>
			<shortname>OCTC024</shortname>
			<baseplatform></baseplatform>
			<currentplatform></currentplatform>
			<issue>
				<typeid>6</typeid>
				<funcname>CpUtils::ConvertToHexStringL(TDesC8 const&amp;)</funcname>
				<newfuncname>CContentMap::NewL()</newfuncname>
				<funcpos>1</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CpUtils::GetMobilePhoneInfoL(TMobilePhoneInfo&amp;)</funcname>
				<newfuncname>CContentMap::NewLC()</newfuncname>
				<funcpos>2</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CCpPolicySettings::FileWatcherPath()</funcname>
				<newfuncname>CPublisherRegistryMap::NewL()</newfuncname>
				<funcpos>3</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CCpPolicySettings::IsOriginDefered(TCpInputOrigin)</funcname>
				<newfuncname>CPublisherRegistryMap::NewLC()</newfuncname>
				<funcpos>4</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CCpPolicySettings::IsOriginSupported(TCpInputOrigin)</funcname>
				<newfuncname>CCPLiwMap::SetSecurityL(RMessage2 const&amp;)</newfuncname>
				<funcpos>5</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CCpPolicySettings::IsW7InitSupported()</funcname>
				<newfuncname>CCPLiwMap::NewL(RDesReadStream&amp;)</newfuncname>
				<funcpos>6</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CCpPolicySettings::NewL(TDesC16 const&amp;, RFs&amp;)</funcname>
				<newfuncname>CCPLiwMap::NewL(CLiwGenericParamList const&amp;)</newfuncname>
				<funcpos>7</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CCpPolicySettings::~CCpPolicySettings()</funcname>
				<newfuncname>CCPLiwMap::GetProperty(TDesC8 const&amp;, TPtrC8&amp;) const</newfuncname>
				<funcpos>8</funcpos>
				<bc_severity>None</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CCpPolicySettings::~CCpPolicySettings()</funcname>
				<newfuncname>CCPLiwMap::GetProperty(TDesC8 const&amp;, TPtrC16&amp;) const</newfuncname>
				<funcpos>9</funcpos>
				<bc_severity>None</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CCpPolicySettings::~CCpPolicySettings()</funcname>
				<newfuncname>CCPLiwMap::GetProperty(TDesC8 const&amp;, unsigned int&amp;) const</newfuncname>
				<funcpos>10</funcpos>
				<bc_severity>None</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>typeinfo for CCpPolicySettings</funcname>
				<newfuncname>CCPLiwMap::IsValidForAddL() const</newfuncname>
				<funcpos>11</funcpos>
				<bc_severity>None</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>vtable for CCpPolicySettings</funcname>
				<newfuncname>CCPLiwMap::PackForServerLC() const</newfuncname>
				<funcpos>12</funcpos>
				<bc_severity>None</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CCpResourceReader::NewLC(TDesC16 const&amp;)</funcname>
				<newfuncname>CCPLiwMap::IsValidForActionL() const</newfuncname>
				<funcpos>13</funcpos>
				<bc_severity>None</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CCpResourceReader::~CCpResourceReader()</funcname>
				<newfuncname>CCPLiwMap::IsValidForNotificationL() const</newfuncname>
				<funcpos>14</funcpos>
				<bc_severity>None</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CCpResourceReader::~CCpResourceReader()</funcname>
				<newfuncname>CCPLiwMap::Reset() const</newfuncname>
				<funcpos>15</funcpos>
				<bc_severity>None</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CCpResourceReader::~CCpResourceReader()</funcname>
				<newfuncname>typeinfo for CCPLiwMap</newfuncname>
				<funcpos>16</funcpos>
				<bc_severity>Possible BBC Break</bc_severity>
				<sc_severity>Possible SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>6</typeid>
				<funcname>CCpResourceReader::ReadDesNodeSetting(int) const</funcname>
				<newfuncname>vtable for CCPLiwMap</newfuncname>
				<funcpos>17</funcpos>
				<bc_severity>None</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>4</typeid>
				<funcname>CCpResourceReader::ReadIntNodeSetting(int) const</funcname>
				<funcpos>18</funcpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>4</typeid>
				<funcname>CCpResourceReader::ReadBoolNodeSetting(int) const</funcname>
				<funcpos>19</funcpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>4</typeid>
				<funcname>typeinfo for CCpResourceReader</funcname>
				<funcpos>20</funcpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>4</typeid>
				<funcname>vtable for CCpResourceReader</funcname>
				<funcpos>21</funcpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>4</typeid>
				<funcname>CCpPolicySettings::HistoryLimitValue()</funcname>
				<funcpos>22</funcpos>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>SC Break</sc_severity>
			</issue>
			<issue>
				<typeid>9</typeid>
				<typeinfo>UID2 has been changed</typeinfo>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>10</typeid>
				<typeinfo>UID3 has been changed</typeinfo>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>11</typeid>
				<typeinfo>Secure ID has been changed</typeinfo>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
			<issue>
				<typeid>12</typeid>
				<typeinfo>Capability has been changed</typeinfo>
				<bc_severity>BBC Break</bc_severity>
				<sc_severity>None</sc_severity>
			</issue>
		</library>
	</issuelist>
</bbcresults>
